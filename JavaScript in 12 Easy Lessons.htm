<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<title>JS12Easy</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:18.9pt;
	margin-left:1.25pt;
	text-indent:-.5pt;
	line-height:110%;
	font-size:12.0pt;
	font-family:"Calibri",sans-serif;
	color:black;}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:1.25pt;
	text-indent:-.5pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:22.5pt;
	font-family:"Calibri",sans-serif;
	color:black;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:0in;
	margin-left:1.25pt;
	text-indent:-.5pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:22.5pt;
	font-family:"Calibri",sans-serif;
	color:black;}
h3
	{mso-style-link:"Heading 3 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:8.1pt;
	margin-left:1.0pt;
	text-align:center;
	text-indent:-.5pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:13.5pt;
	font-family:"Calibri",sans-serif;
	color:black;
	font-weight:normal;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0in;
	margin-right:.75pt;
	margin-bottom:8.0pt;
	margin-left:.75pt;
	line-height:107%;
	font-size:11.0pt;
	font-family:"Calibri",sans-serif;
	color:black;}
span.Heading3Char
	{mso-style-name:"Heading 3 Char";
	mso-style-link:"Heading 3";
	font-family:"Calibri",sans-serif;
	color:black;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Calibri",sans-serif;
	color:black;
	font-weight:bold;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Calibri",sans-serif;
	color:black;
	font-weight:bold;}
.MsoChpDefault
	{font-size:12.0pt;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:115%;}
 /* Page Definitions */
 @page WordSection1
	{size:8.5in 11.0in;
	margin:74.35pt 51.15pt 66.15pt 74.25pt;}
div.WordSection1
	{page:WordSection1;}
@page WordSection2
	{size:8.5in 11.0in;
	margin:73.5pt 74.8pt 16.2pt 74.25pt;}
div.WordSection2
	{page:WordSection2;}
@page WordSection3
	{size:8.5in 11.0in;
	margin:74.35pt 75.45pt 16.2pt 75.0pt;}
div.WordSection3
	{page:WordSection3;}
@page WordSection4
	{size:8.5in 11.0in;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection4
	{page:WordSection4;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal style='margin-top:0in;margin-right:560.85pt;margin-bottom:
0in;margin-left:-74.25pt;text-indent:0in;line-height:107%'><img width=818
height=1056 src="JavaScript%20in%2012%20Easy%20Lessons_files/image001.gif"><br
clear=ALL>
<br clear=all style='page-break-before:always'>
</p>

<h1 style='margin-top:0in;margin-right:0in;margin-bottom:5.6pt;margin-left:
.5pt'><a name="_Toc47020">JavaScript in 12 easy lessons</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.75pt;text-indent:0in;line-height:107%'><b><span style='font-size:
18.0pt;line-height:107%'>Nik Lever</span></b><br clear=all style='page-break-before:
always'>
</p>

<p class=MsoNormal align=center style='margin-top:0in;margin-right:22.85pt;
margin-bottom:0in;margin-left:0in;text-align:center;text-indent:0in;line-height:
107%'><b><span style='font-size:22.5pt;line-height:107%'>Table Of Contents</span></b></p>

<p class=MsoToc1><a href="#_Toc47020"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>JavaScript in 12 easy lessons</span><span
style='color:black;text-decoration:none'>                                                                                                                                                </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>1</span></a></p>

<p class=MsoToc1><a href="#_Toc47021"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>1. Introduction</span><span
style='color:black;text-decoration:none'>                                                                                                                                                                                 </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>3</span></a></p>

<p class=MsoToc1><a href="#_Toc47022"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>2. Lesson 1 - Variables</span><span
style='color:black;text-decoration:none'>                                                                                                                                                               </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>5</span></a></p>

<p class=MsoToc1><a href="#_Toc47023"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>3 Lesson 2 - Strings</span><span
style='color:black;text-decoration:none'>                                                                                                                                                                    </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>13</span></a></p>

<p class=MsoToc1><a href="#_Toc47024"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>4 Lesson 3 - Functions</span><span
style='color:black;text-decoration:none'>                                                                                                                                                             </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>18</span></a></p>

<p class=MsoToc1><a href="#_Toc47025"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>5. Installing VSCode and downloading the
course resources</span><span style='color:black;text-decoration:none'>                                                                   </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>24</span></a></p>

<p class=MsoToc1><a href="#_Toc47026"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>6. Lesson 4 - Conditions</span><span
style='color:black;text-decoration:none'>                                                                                                                                                         </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>30</span></a></p>

<p class=MsoToc1><a href="#_Toc47027"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>7. Lesson 5 - Arrays</span><span
style='color:black;text-decoration:none'>                                                                                                                                                                   </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>42</span></a></p>

<p class=MsoToc1><a href="#_Toc47028"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>8. Lesson 6 - Objects</span><span
style='color:black;text-decoration:none'>                                                                                                                                                                </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>46</span></a></p>

<p class=MsoToc1><a href="#_Toc47029"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>9. Lesson 7 - Loops</span><span
style='color:black;text-decoration:none'>                                                                                                                                                                    </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>51</span></a></p>

<p class=MsoToc1><a href="#_Toc47030"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>10. Lesson 8 - Classes</span><span
style='color:black;text-decoration:none'>                                                                                                                                                              </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>57</span></a></p>

<p class=MsoToc1><a href="#_Toc47031"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>11 Lesson 9 - Modules</span><span
style='color:black;text-decoration:none'>                                                                                                                                                            </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>64</span></a></p>

<p class=MsoToc1><a href="#_Toc47032"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>12. Lesson 10 - Scope</span><span
style='color:black;text-decoration:none'>                                                                                                                                                              </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>69</span></a></p>

<p class=MsoToc1><a href="#_Toc47033"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>13. Lesson 11 - Math</span><span
style='color:black;text-decoration:none'>                                                                                                                                                               </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>79</span></a></p>

<p class=MsoToc1><a href="#_Toc47034"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>14. Lesson 12 - JSON</span><span
style='color:black;text-decoration:none'>                                                                                                                                                                </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>88</span></a></p>

<p class=MsoToc1><a href="#_Toc47035"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>15. What you've learnt</span><span
style='color:black;text-decoration:none'>                                                                                                                                                           </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>97</span></a></p>

<p class=MsoToc1><a href="#_Toc47036"><span style='font-size:13.5pt;line-height:
107%;color:black;text-decoration:none'>16. About the author</span><span
style='color:black;text-decoration:none'>                                                                                                                                                            </span><span style='font-size:13.0pt;line-height:107%;color:black;text-decoration:none'>101</span></a></p>

<p class=MsoNormal>&nbsp;</p>

<h1 style='margin-left:.5pt'><a name="_Toc47021">1. Introduction</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>JavaScript is the most popular programming language in the
world.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:5.25pt;text-indent:0in;line-height:107%'><img width=605 height=452
id="Picture 174" src="JavaScript%20in%2012%20Easy%20Lessons_files/image002.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 1.1  Programming language popularity</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:6.95pt;margin-bottom:
18.9pt;margin-left:.5pt'>JavaScript, often abbreviated to JS, is the default
language of the internet. But it doesnt stop there, JavaScript powers your
smart tv, works with the internet of things, and helps build cross platform
apps. VSCode, the program well use in this course to write the JS code, is
written using JS.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:31.15pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Because JS is the default language of your
browser, you can start to write JS code without installing any programs, you
can just use your browser. Making JavaScript the easiest programming language
for new coders. Having learnt the language, you can then more readily lend your
skills to another coding language such as Python, Java or C++.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:33.0pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Youll be pleased to know that JavaScript
is easy to learn. If you do one lesson a day, they vary in length from 10
minutes to an hour, then you will have a good grounding in the basics of
coding.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:14.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>Most of my coding has been for online games and youll
nd a slant in the course towards solutions that suit game developers. But
essentially the concepts apply to all developers.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:22.3pt;margin-bottom:
18.9pt;margin-left:.5pt'>JavaScript is super versatile, and youll soon be
using it to add cool dynamic elements to your web pages.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>With JavaScript youre empowered to handle any aspect
of app design. Often apps have front-end coding, the bit the user sees.
JavaScript is ideal for that. But now with software called Node.js you can also
use JavaScript to write the back end. Interacting with databases to deliver
data to your user.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The most popular delivery format for data even has JavaScript
in the name, JavaScript Object Notation (JSON) is the go-to standard for data
exchanges on todays internet.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:28.45pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>An increasing number of businesses and
organizations rely on software for sales and production. Many using JavaScript
as the principal language. There is a corresponding increase in demand for
developers who are familiar with JavaScript. Theres a shortage of good
JavaScript developers, so you have increased demand in conjunction with a de
cit of quali ed people. The average salary in the USA for a JavaScript
developer is over six gures.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.6pt;margin-bottom:
18.9pt;margin-left:.5pt'>If youre looking to become a programmer who can
always be assured of a stable career and get well compensated for it, then you
want to learn JavaScript. In this book I show you how.</p>

<h1 style='margin-left:.5pt'><a name="_Toc47022">2. Lesson 1 - Variables</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:24.3pt;margin-bottom:
18.9pt;margin-left:.5pt'>All web pages that include client-side scripting, that
is scripting that happens inside the users browser, use JavaScript. In this
book I hope to get you up to speed with writing JavaScript code. Writing code
is great fun and the more you practice the better youll get. I wrote my rst
computer program using a punch card device back in 1969 and Im still learning
new stuff every day.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.95pt;margin-bottom:
4.1pt;margin-left:.5pt'>The basic building block of all programming languages
is the variable. Dont just read the words, open your Chrome browser. I
recommend Chrome for this course. Then press F12. If you forget the keyboard
short-cut you can also press the triple dot button at the top right, then
select More Tools&gt;Developer Tools.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img width=616 height=356
id="Picture 242" src="JavaScript%20in%2012%20Easy%20Lessons_files/image003.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 2.1  Opening Chrome Developer tools</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Youll get a new window open. Select the Console tab.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:9.75pt;text-indent:0in;line-height:107%'><img width=592 height=301
id="Picture 261" src="JavaScript%20in%2012%20Easy%20Lessons_files/image004.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 2.2  Using the console to enter code</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Beside the greater than symbol, where the cursor is ashing
enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>let x = 3</p>

<p class=MsoNormal style='margin-top:0in;margin-right:26.0pt;margin-bottom:
12.5pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:155%'>Then press enter, ignore the unde ned that
just means there is no value returned by this code. But you have created a
little part of your computers memory that you can access using the name x.
Enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>x</p>

<p class=MsoNormal style='margin-top:0in;margin-right:15.45pt;margin-bottom:
18.9pt;margin-left:.5pt'>Now it shows the number 3. That is because the
variable x has the value 3. Sometimes its confusing about variable names and
variable values. If it helps think of a pigeonhole system. Each pigeonhole has
a name and inside each pigeonhole a number is stored. If we look in the
pigeonhole named x the number 3 is stored there.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img width=616 height=347
id="Picture 286" src="JavaScript%20in%2012%20Easy%20Lessons_files/image005.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:179.8pt;margin-bottom:
0in;margin-left:-.25pt;line-height:240%'><span style='font-size:12.5pt;
line-height:240%'>Diagram 2.3  Thinking of a variable as a pigeonhole </span>Lets
store a new value at the pigeonhole y, enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>let y = 5</p>

<p class=MsoNormal style='margin-top:0in;margin-right:5.85pt;margin-bottom:
18.9pt;margin-left:.5pt'>Again, we get unde ned. Whys that? Yes, assigning a
variable does not return a value. What happens if we enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>x + y</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>You get 8, because adding together x and y does return a
value. It is 3 + 5 which is 8.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>What is y  x?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:171.45pt;margin-bottom:
0in;margin-left:.5pt;line-height:240%'>Yes, it is 2, because 5, ys value,
minus 3, xs value, is 2. Enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>let result = x + y</p>

<p class=MsoNormal style='margin-top:0in;margin-right:23.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>Variable names do not have to be a single letter. A
variable name can contain letters, digits, underscores, and dollar signs. To
see the value of result just enter result. It has the value 8. 3, xs value
plus 5, ys value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>A variable is called a variable because it can vary. Enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>x = 12</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Now the value in the x pigeonhole is 12 not 3.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img width=616 height=347
id="Picture 317" src="JavaScript%20in%2012%20Easy%20Lessons_files/image006.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 2.4  Current values in the pigeonholes</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:9.35pt;margin-bottom:
18.9pt;margin-left:.5pt'>Has this changed the value of result? Click the little
eye icon and well add a live expression, enter result.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.2pt;
margin-left:0in;text-indent:0in;line-height:107%'><span style='font-size:11.0pt;
line-height:107%'><img width=596 height=338
src="JavaScript%20in%2012%20Easy%20Lessons_files/image007.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.9pt;margin-bottom:
18.9pt;margin-left:.5pt'>Now we can constantly see what the value result is.
And it is still 8. Because once the value is set it will stay that way until it
is updated. Even though it was set as x + y, it isnt tracking those variables.
To update it we need to enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>result = x + y</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>once again. Now we get the value 17, x=12 plus y=5.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:13.75pt;margin-bottom:
18.9pt;margin-left:.5pt'>There is another way to declare a variable, in fact
there are two other ways. Lets take them in order enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>const z = 7</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.95pt;margin-bottom:
18.9pt;margin-left:.5pt'>By using const and not let, we create a variable that
cannot be changed. The pigeonhole has a locked glass door, we can see the
value, but we cant change it.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img width=616 height=347
id="Picture 358" src="JavaScript%20in%2012%20Easy%20Lessons_files/image008.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:259.05pt;margin-bottom:
0in;margin-left:-.25pt;line-height:240%'><span style='font-size:12.5pt;
line-height:240%'>Diagram 2.6  x, y and z in pigeonholes </span>Try entering</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>z = 8</p>

<p class=MsoNormal style='margin-top:0in;margin-right:4.6pt;margin-bottom:18.9pt;
margin-left:.5pt'>You get an error message. Assignment to constant variable.
Constants can make your code more robust ensuring values that shouldnt change
cant be changed.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:17.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>I mentioned there is another way to declare a variable
and that is to use var. In this course we wont be using var at all, it is the
old school way of de ning a variable and were using the latest approach to use
let and const.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:26.05pt;margin-bottom:
18.9pt;margin-left:.5pt'>So far, our variables have just been integer values,
that is whole numbers. A variable can be a decimal value. Like let w = 4.78. Or
it can be a word or a sentence. Enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>let myName = &quot;Nik Lever&quot;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:41.15pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Use your own name, and make sure to enter
double quotes at the start and end. This type of variable is called a string
and can be very useful. But what happens if we add together myName and x, a
string and a number?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.6pt;margin-bottom:18.9pt;
margin-left:.5pt'>Because myName is a String the plus operation doesnt try to
convert myName to a number, instead it converts x into a String and joins this
on the end of myName, giving</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>Nik Lever12</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now a little challenge.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>Can you create 3 variables, rstName, lastName and fullName? </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.25pt;
margin-left:.5pt'>When creating fullName use the variables rstName and lastName
and put a space between them. Put the book down and give it a try. </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Dont turn to the next page until youve tried the challenge.<br
clear=all style='page-break-before:always'>
</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>For my name it will be</p>

<p class=MsoNormal style='margin-top:0in;margin-right:178.65pt;margin-bottom:
18.9pt;margin-left:.5pt'>let firstName = &quot;Nik&quot; let lastName =
&quot;Lever&quot; let fullName = firstName + &quot; &quot; + lastName</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>To check enter fullName to see its value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:21.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>Notice I used a capital N for name. Throughout the
course I will be using what is called camel case. Camel case is the practice of
writing phrases without spaces or punctuation, indicating the separation of
words with a single capitalized letter, and in this course the rst word will
start with a lower-case letter.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.15pt;margin-bottom:
18.9pt;margin-left:.5pt'>Dont worry if you didnt get this right. The more
practice you get the more likely you are to become an expert. In the next
chapter well look at the things you can do with Strings.<br clear=all
style='page-break-before:always'>
</p>

<h1 style='margin-left:.5pt'><a name="_Toc47023">3 Lesson 2 - Strings</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:24.0pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>In the previous video you met the special
kind of JavaScript variable called a String. You created a string by
surrounding a word or sentence with double quotes. But you can also use single
quotes.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>let sentence = 'The quick brown fox jumped over the
lazy dog'</p>

<p class=MsoNormal style='margin-top:0in;margin-right:23.65pt;margin-bottom:
18.9pt;margin-left:.5pt'>When you create a string in JavaScript it is converted
into a data type called a string object. An object in JavaScript can not only
store data, it can also be used to manipulate the data. What do I mean by that?
Well, it has a series of properties and methods that we can use. An example of
a property is</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.length</p>

<p class=MsoNormal style='margin-top:0in;margin-right:66.4pt;margin-bottom:
9.4pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:176%'>By using dot length, we get the value 44.
That is the number of characters in the sentence, The quick brown dog jumped
over the lazy dog. An example of a method is</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.startsWith('The')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:16.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>Now were asking if the string weve called sentence,
starts with the string The. We get the answer True. True and False are
special kinds of number, called a Boolean, well see much more of them later.
What happens if we use a lower-case T? You can repeat a previous entry by
pressing the up arrow. Now we get the answer false.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The string object has lots of methods, one lets us convert
each letter to lower case.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.toLowerCase().startsWith('the')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.1pt;margin-bottom:
18.9pt;margin-left:.5pt'>Now we get true. See how we can chain together the
methods. Here, up to the rst dot, sentence starts with an upper-case T. Then we
use the method toLowerCase, so after the second dot the string now starts with
a lower-case t. When we ask if sentence starts with the, with a lower case t,
the answer is true.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.85pt;margin-bottom:
18.9pt;margin-left:.5pt'>Often in code, youll want to search through a string
to see if it has a particular sequence of characters. As well as startsWith,
there is also endsWith.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.endsWith('dog')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Is true, but</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.endsWith('lazy')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>is false</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>What if the word youre searching for is in the middle of the
string. Then you can use includes.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.includes('fox')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The answer is true. In programming speak we say the method
returns true.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>What if we want to know where the word fox is in the
sentence? Then we use</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.indexOf('fox')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:15.95pt;margin-bottom:
18.9pt;margin-left:.5pt'>Which returns 16, if we start from the beginning and
count the letters, including the spaces, We nd ourselves on the space before
the word fox. That is because the rst letter isnt index one, it is index zero.
We can show it in the console using</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence[0]</p>

<p class=MsoNormal style='margin-top:0in;margin-right:18.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>That shows the single character at position zero. If
we swap the zero to 16, we get the f at the beginning of fox.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>We can add another string to the string using +=</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence += &quot;. If the dog barked was it really
lazy?&quot;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>+= is the same as sentence = sentence + '. If the dog barked
was it really lazy?'</p>

<p class=MsoNormal style='margin-top:0in;margin-right:20.15pt;margin-bottom:
.25pt;margin-left:.5pt'>When we used the method indexOf, we included the word
fox in the brackets. All methods use brackets, it sets them apart from a
property such as length that doesnt need brackets. The word we supplied is
called a parameter. Well meet parameters a lot in the course. The indexOf
method is most often used with a single parameter like this, but we can use a
second parameter. The sentence now has two examples of the word</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>dog. If we use</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.indexOf('dog')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>Then we get the return value 41. Which is the position
in the string of the rst dog. Suppose we want to nd the position of the
second dog. Then we add a second parameter, set to one more than the value
previously returned. If the second parameter is 41 then the return value is 41.
Were setting the position in the string to start the search from, and it nds
the word dog immediately. If instead we set it to 42, then the return value
is 53. This is where we nd the second dog.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.indexOf('dog', 42)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:22.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>Sometimes we need to extract part of a string. For
that we can use the method substring.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.substring(53) &gt;&gt; &quot;dog barked was
it really lazy?&quot;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>This will return everything in the string sentence, from the
character at position 53.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.15pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Just like indexOf, we can use two
parameters. If we do the second parameter is the end index, where to stop
accessing the string sentence. What value should we use to get the value dog
return? Put the book down and try it for yourself. Dont turn the page until
youve tried it.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Yes, 56 is the value to add.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
3.55pt;margin-left:.5pt'>sentence.substring(53, 56)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img width=570 height=247
id="Picture 532" src="JavaScript%20in%2012%20Easy%20Lessons_files/image009.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 3.1 Using substring</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>We can access a sub string from the sentence using a
different method, slice. At rst it seems identical to substring.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.slice(53, 56)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Where it differs is when we use minus values for parameters.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>sentence.slice(-5, -1)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:38.0pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Returns 'lazy', because a minus parameter
will start at the end of the string and count backwards. Do this with the
method substring and you get an empty string returned, because all parameter
values below zero are changed to zero. So</p>

<p class=MsoNormal style='margin-top:0in;margin-right:279.8pt;margin-bottom:
18.9pt;margin-left:.5pt;line-height:240%'>sentence.substring(-5, -1) Becomes sentence.substring(0,
0) With a start and end index of zero we get no characters returned.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now that you know about variables its time to start thinking
about programming. In the next chapter youll take your rst steps.<br
clear=all style='page-break-before:always'>
</p>

<h1 style='margin-left:.5pt'><a name="_Toc47024">4 Lesson 3 - Functions</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:16.7pt;margin-bottom:
18.9pt;margin-left:.5pt'>A function is a series of lines of code in a block.
You call a function by providing the name of the function followed by brackets.
Sometimes you will provide values between the brackets, these are called
parameters. A function can optionally return a value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:22.2pt;margin-bottom:
18.9pt;margin-left:.5pt'>When we create a function in JavaScript, we use the
keyword function followed by the function name, then an opening bracket. If
were using parameters then we enter them now, parameters are like variables,
we supply a name. If we have more than one parameter, then we separate the
parameters using commas. Once weve listed all the parameters, we enter a
closing bracket. The keyword function, the function name and the brackets
containing optional parameters are called the function de nition.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:23.5pt;margin-bottom:
18.9pt;margin-left:.5pt'>Having provided the function de nition then we enter
an opening curly brace. At this stage weve entered the area where we add our
JavaScript code. If the function returns a value, then we use the keyword
return. This can optionally be followed by JavaScript code. When the running
program encounters the word return, it will exit the function and return to
wherever the function was called. The function must have a closing curly brace.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>A few examples will help enormously.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:291.15pt;margin-bottom:
22.05pt;margin-left:.5pt'>function multiply( a, b ){    return a * b; }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:21.3pt;margin-bottom:
18.9pt;margin-left:.5pt'>In programming we use an asterisk to specify
multiplication. And we end each line with a semi-colon. Now if we enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>multiply(2,3)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:15.85pt;margin-bottom:
18.9pt;margin-left:.5pt'>we get the answer 6. By entering 2 as the rst
parameter inside the function the parameter a will have the value 2. The second
parameter is 3, so inside the function the parameter b will have the value 3.
The function returns the value of a times b, which in this case is 2 times 3 or
6.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If instead we enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>multiply(12, 7)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>we get the answer 84. Now a is 12 and b is 7. a times b is
now 12 times 7 or 84.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img width=571 height=265
id="Picture 614" src="JavaScript%20in%2012%20Easy%20Lessons_files/image010.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 4.1  Introducing functions</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:22.0pt;margin-bottom:
18.9pt;margin-left:.5pt'>When we create a function, were creating a block of
code statements that do a useful job and that we can reuse many times. Weve
met functions already in the course. The methods used by the String object,
toLowerCase, startsWith, indexOf etc. are all functions.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:17.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>In programming you will often nd that angles are in
radians not degrees. A full revolution in radians is 2&#960;. Lets create a
function that will convert degrees to radians</p>

<p class=MsoNormal style='margin-top:0in;margin-right:283.95pt;margin-bottom:
18.9pt;margin-left:.5pt'>function degToRads(angle){    const pi = 3.1416;   
return angle / 180 * pi }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:31.15pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Notice here we have more than one
JavaScript code line. A function can have many lines and may call other
functions as it executes. Notice we use a forward slash for the division
operation. Asterisk for multiplication and forward slash for division.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Since a full revolution should be 2&#960;, a half revolution
should be &#960;. Enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>degToRads(180)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:16.6pt;margin-bottom:
4.1pt;margin-left:.5pt'>Here 180 is a half revolution in degrees and the
function returns the approximate value for &#960; that we used in the function.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:48.75pt;text-indent:0in;line-height:107%'><img width=488
height=211 id="Picture 653"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image011.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 4.2  Using the degToRads function</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.15in;margin-bottom:4.1pt;
margin-left:.5pt'>What happens if we just enter the function name, we get the
function itself returned, not the result of its execution.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img width=571 height=290
id="Picture 658" src="JavaScript%20in%2012%20Easy%20Lessons_files/image012.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 4.3  Returning the function</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.8pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Notice inside the function that we created
the constant pi. What happens if we enter pi. Do we get the value 3.1416? No,
we get an error  Uncaught ReferenceError: pi is not de ned. That is because
the constant pi only exists for code inside the function, it is described as
local to the function. Well learn more about this, its called scope, in a
later lesson.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.2pt;margin-bottom:
.25pt;margin-left:.5pt'>Now you have learnt about functions ,can you create a
function that will convert a distance in miles to a distance in kilometres? </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>A little tip, you need to multiply by 1.609 to get an
approximate answer.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.75pt;text-indent:0in;line-height:107%'> </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>Put the book down and give it a try. </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Dont turn the page until youve attempted this challenge.<br
clear=all style='page-break-before:always'>
</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>My answer is</p>

<p class=MsoNormal style='margin-top:0in;margin-right:238.65pt;margin-bottom:
27.3pt;margin-left:.5pt'>function milesToKilometres(dist){    return dist *
1.609; }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If we enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>milesToKilometres(5)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:21.75pt;margin-bottom:
18.9pt;margin-left:.5pt'>We get 8.045. Perhaps it is a bit too precise. Suppose
we only want a single number after the decimal point. A Number is another
JavaScript object. Just like a string the Number object has several methods.
One is a function that will convert the number to a string with a speci ed
number of digits following the decimal point.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>Enter func and choose the function de nition from the
list. Now you can edit it. Surround dist * 1.609 with brackets and add</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>(dist * 1.609).toFixed(1);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now if you enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>milesToKilometres(5)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:12.45pt;margin-bottom:
18.9pt;margin-left:.5pt'>the answer is 8.0. Notice the double quotes
surrounding the value, the return value is now a String. We want it to be a
Number. So, we edit the line again like this</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>Number((dist * 1.609).toFixed(1));</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The JavaScript execution will start with</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>dist * 1.609 = 8.045</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Then we convert 8.045 into a string rounding the value to a
single decimal place.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>(8.045).toFixed(1) = &quot;8.0&quot;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Finally using Number we convert this String value back into a
numeric value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>Number(&quot;8.0&quot;) = 8</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
18.9pt;margin-left:.5pt'>Now you know about variables and functions. As your
code becomes more complex you need a programming text editor and we'll look at
that in the next chapter.<br clear=all style='page-break-before:always'>
</p>

<h1 style='margin-left:.5pt'><a name="_Toc47025">5. Installing VSCode and
downloading the course resources</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:25.9pt;margin-bottom:
18.9pt;margin-left:.5pt'>So far, weve used Chrome and the Developer Console to
write our JavaScript code. But this means any code you write is lost when you
refresh the page. Typically, JavaScript is written using a &lt;script&gt; tag
in a html page or as a entirely separate le with the extension dot js. To write
the html or js les we need a text editor. While you can use Notepad on windows
or TextEdit on a Mac. For the rest of this course, I recommend VSCode.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Shoot over to <a href="https://code.visualstudio.com/"><span
style='color:#2FA4E7;text-decoration:none'>https://code.visualstudio.com</span></a>
and install the application for your desktop.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img border=0 width=616
height=355 id="Picture 746"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image013.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 5.1  Download VSCode</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.05pt;margin-bottom:
18.9pt;margin-left:.5pt;line-height:155%'>Having installed the application. We
need to grab the code for this course. Use the main menu, View&gt;Command
Palette  . In the search panel type git. A list of options that include the
word Git, appear. Choose Git Clone. In the input panel enter <a
href="https://github.com/NikLever/JavaScriptLessons"><span style='color:#2FA4E7;
text-decoration:none'>https://github.com/NikLever/JavaScriptLessons</span></a></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:2.25pt;text-indent:0in;line-height:107%'><img border=0 width=612
height=147 id="Picture 782"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image014.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 5.2  Git Clone</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:14.7pt;margin-bottom:
4.1pt;margin-left:.5pt'>Youll be asked where you want the downloaded les to be
placed. Choose a folder, the course les will be placed in a sub-folder, named
JavaScriptLessons, inside the folder you choose. Once downloaded youll be
asked if you trust the authors of the les in this folder. Choose yes.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:34.5pt;text-indent:0in;line-height:107%'><img border=0 width=526
height=424 id="Picture 789"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image015.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 5.3  Trust panel</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img border=0 width=616
height=463 id="Picture 803"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image016.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 5.4  Explore screen</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.05pt;margin-bottom:
18.9pt;margin-left:.5pt'>At this stage you should have a screen like the one
shown in Diagram 5.4. Select the button at the top left to explore the folders
and les in the resource repository youve just installed. Viewing the les in a
browser requires one more step in VSCode. We need to install an extension. Find
the Extensions button. It is in the toolbar with the Explore button and
features 4 squares with the top right square offset from the others.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>In the search bar enter live. Find the entry Live Server.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:113.25pt;text-indent:0in;line-height:107%'><img border=0 width=316
height=275 id="Picture 823"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image017.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:225.4pt;margin-bottom:
0in;margin-left:-.25pt;line-height:240%'><span style='font-size:12.5pt;
line-height:240%'>Diagram 5.5  Adding the Live Server extension </span>In the
right-hand pane choose install.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img border=0 width=530
height=393 id="Picture 827"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image018.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 5.6  Installing Live Server</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.3pt;margin-bottom:
4.1pt;margin-left:.5pt'>The last step is to nd the le index.html using the
Explore screen. Now right-click this le and choose Open with Live Server.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:77.25pt;text-indent:0in;line-height:107%'><img border=0 width=413
height=287 id="Picture 843"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image019.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 5.7  Opening a le in Live Server</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Your default browser will open showing this index page.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:22.5pt;text-indent:0in;line-height:107%'><img border=0 width=558
height=322 id="Picture 847"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image020.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 5.8  The default index.html page for the course</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:0in;
margin-left:.5pt'>Youre all set to carry on with the course. Great work.<br
clear=all style='page-break-before:always'>
</p>

<h1 style='margin-left:.5pt'><a name="_Toc47026">6. Lesson 4 - Conditions</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:19.1pt;margin-bottom:
18.9pt;margin-left:.5pt'>Hopefully you followed all the steps in the previous
chapter and have VSCode installed, and you cloned the repository for the
course. If you havent then jump back and follow the steps to be ready to code
along with this lesson.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:13.2pt;margin-bottom:
4.1pt;margin-left:.5pt'>If you open VSCode and open the workspace for this
course and select the Explorer button. The top one on the left, you should see
a le layout like this.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.35pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img border=0 width=301
height=274 id="Picture 886"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image021.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 6.1  The course les</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:17.95pt;margin-bottom:
18.9pt;margin-left:.5pt'>Notice the resources includes a complete and a start
folder. For every example in the course the code along version is in the start
folder and if you get stuck there is a complete version in the complete folder.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:20.2pt;margin-bottom:
18.9pt;margin-left:.5pt'>To work along with this video, I want you to open the
le index.html in the folder start/lesson4. This is a very simple html page. Im
assuming you have some familiarity with HTML. An HTML page has a series of
tags. A tag starts with a name inside less than greater than brackets and ends
with the same name inside the same style of brackets only including a forward
slash. Tags can be nested inside other tags. Here we have html as the outer
tags. Inside the html tag is a head tag and a body tag. VSCode allows you to
expand a tag. Something that can be useful as the code becomes more complex.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:23.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>Before we enter any code, Id like to show you how to
view the pages. As we saw in the previous chapter, you should have the Live
Server extension installed. If you havent done this step, go back to the
previous chapter and complete this step. Find index.html at the root of the
resources. Right-click and choose Open with Live Server.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:23.75pt;margin-bottom:
18.9pt;margin-left:.5pt'>In the browser you should be looking at the default
index.html page. For this lesson select lesson2_4/start. Youll be totally
unimpressed since all youll see is a white screen. Bear with me here it will
get better. Rome wasnt built in a day as they say. Now open the developer
console. Remember the keyboard short cut? F12 to open Developer Tools, then
select the Console tab. Now were ready to enter some code.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Over in VSCode between &lt;body&gt; and &lt;/body&gt;, add a
script tag.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>&lt;script&gt;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:33.9pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>VSCode will automatically add the closing
tag. Later in the course well use separate les for the JavaScript but in this
lesson, were going to add our code to the index.html page, for this the code
must be in a script block.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:16.0pt;margin-bottom:
18.9pt;margin-left:.5pt'>Were going to enter a new function; well call it
compare and it has two parameters, a and b.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:306.45pt;margin-bottom:
27.3pt;margin-left:.5pt'>function compare(a, b){ }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:23.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>Now the condition, this lesson is called conditions,
and this is our rst condition. We use the keyword, if, followed by brackets.
What we enter inside the brackets must evaluate to a Boolean. Hold on,
evaluate, Boolean, what does that mean? It means whatever we enter inside the
brackets has to be either true or false. As an example, enter a is less than b.
Angle brackets left is the less than operator. Following the closing bracket,
we enter curly braces. Strictly speaking, if we only have a single line following
the brackets then we dont need curly braces. But I highly recommend you always
use them.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:298.95pt;margin-bottom:
.3pt;margin-left:.5pt'>function compare(a, b){    if (a&lt;b){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>   }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>}</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Inside the curly braces enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>console.log('a is less than b');</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The complete code should now look like this</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>&lt;script&gt;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>  
function compare(a, b){       if (a&lt;b){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>      }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>   }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
19.15pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>&lt;/script&gt;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Remember to save your work. Then back in Chrome, let Live
Server refresh the page and enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>compare(10, 20)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If you entered the code correctly you should get the response</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>a is less than b</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
18.9pt;margin-left:.5pt'>In the console. What just happened? You wrote your rst
real JavaScript code. When you entered compare(10, 20). a is 10 and b is 20.
The program reaches the line</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>if (a&lt;b)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>It reads this as</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>if (10&lt;20)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:26.2pt;margin-bottom:
9.4pt;margin-left:.5pt;line-height:176%'>10 is less than 20, so the statement
inside the brackets is true and so the program moves to inside the curly
braces. This prints the line a is less than b in the console. Fine, but what if
we enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>compare(20, 10)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:30.3pt;margin-bottom:
18.9pt;margin-left:.5pt'>Now a is greater than b and so we dont get a response
in the console. We just get unde ned because the function does not return a
value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:20.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>When we have an if condition we can add a block of
code that happens when the condition is false. To do that we use the key word
else. Then curly braces and this time in the curly braces enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>console.log('a is greater than b')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>The complete code is now</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:148.5pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:148.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>&lt;script&gt;
  </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:239.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>   function compare(a, b){       if (a&lt;b){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>        
  console.log('a is less than b');</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>     
  }else{</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>        
  console.log('a is greater than b');</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>     
  }</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  } </span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>&lt;/script&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save the le, refresh the browser and enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>compare(20, 10)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Again. This time you see a is greater than b. But what if
we enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>compare(10,10)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:23.6pt;margin-bottom:
18.9pt;margin-left:.5pt'>Again, we get a is greater than b, but a equals b. Why
do we see the message a is greater than b? Because a is not less than b so the
condition a&lt;b in the brackets evaluates to false and execution jumps to the
else block. We can x this. As well as if and else blocks we can add an else if
block like this. Before the else add an else if, notice the space between the
words else and if. Now we can enter a new condition between brackets and a new
code block between curly braces. In the condition enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>a==b</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The complete code is now</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>&lt;script&gt;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>        
function compare(a, b){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>            
if (a&lt;b){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>                
console.log('a is less than b');</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>            
}else if(a==b){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>                
console.log('a equals b');</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>            
}else{</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>                
console.log('a is greater than b');</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>            
}</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>        
}</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.45pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>&lt;/script&gt;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:22.55pt;margin-bottom:
18.9pt;margin-left:.5pt'>Notice in the new condition we have two equals signs.
This is not a mistake. In JavaScript and many other programming languages two
equals signs means were testing for equality. Whereas a single equals sign
means were assigning a value to the variable on the left of the equals sign.
Despite looking similar they are not the same at all and this is a common cause
of bugs in code. Mistakenly using a single equals when double equals was
required.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If you save your work and go back and refresh the browser.
Now when you enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>compare(10,10)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Youll get the response a equals b</p>

<p class=MsoNormal style='margin-top:0in;margin-right:16.9pt;margin-bottom:
18.9pt;margin-left:.5pt'>What if we try to use a value that isnt a number?
JavaScript will try to convert the value to a number.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>compare(&quot;10&quot;, 10)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:407.1pt;margin-bottom:
0in;margin-left:.5pt;line-height:240%'>Will be ne. But for</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>compare(&quot;ten&quot;, 10)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.65pt;margin-bottom:
12.5pt;margin-left:.5pt;line-height:155%'>Youll get a is greater than b. Not
because a is greater than b, simply because a is not a number, so the
JavaScript processor cannot evaluate a&lt;b or a==b and so these conditions are
evaluated as false. At the start add a new condition</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>if (isNaN(a)){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>   console.log( a is not a number );</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>}else</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.1pt;margin-bottom:
18.9pt;margin-left:.5pt'>isNaN is a built-in JavaScript function that tests if
a value is not a number. For a string that can be converted to a number the
function will return false. But if it cannot be converted the function returns
true, the value is not a number. </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>The compare function now looks like this</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:2.75in'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:2.75in'>
  <p class=MsoNormal style='margin-top:0in;margin-right:216.55pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>&lt;script&gt;          function compare(a, b){              if
  (isNaN(a)){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>                
  console.log( 'a is not a number' ); </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>            
  }else if (a&lt;b){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>                
  console.log('a is less than b');</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>            
  }else if(a==b){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>                
  console.log('a equals b');</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>            
  }else{ console.log('a is greater than b');</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>            
  }</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>        
  }</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>&lt;/script&gt;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>You know the form save, let Live Server refresh the browser,
enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>compare(&quot;ten&quot;, 10)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now we get a is not a number</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>But we can still get an erroneous message if b is not a
number.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Can you x this? Youll need to add a new else if condition
and code block. Put the book down now and give it a try. Dont turn the page
until youve tried.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>You add</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>else if (isNaN(b)){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:208.95pt;margin-bottom:
18.9pt;margin-left:.5pt'>   console.log('b is not a number'); }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Giving</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>&lt;script&gt;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>         
function compare(a, b){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>             
if (isNaN(a)){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>                 
console.log( 'a is not a number' ); </span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>             
}else if (isNaN(b)){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>                 
console.log('b is not a number');</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>             
}else if (a&lt;b){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>                 
console.log('a is less than b');</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>             
}else if(a==b){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>                 
console.log('a equals b');</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>             
}else{ console.log('a is greater than b'); </span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>            
}</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>         
} </span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.45pt;
margin-left:.5pt;line-height:107%;background:black'><span style='color:#ADE7FC'>&lt;/script&gt;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save, refresh and enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:343.65pt;margin-bottom:
0in;margin-left:.75pt;text-align:justify;text-justify:inter-ideograph;
text-indent:0in;line-height:240%'>compare(10, &quot;ten&quot;); Now we get b is
not a number.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now we have four conditions and a catch all else. That is
about the limit for using if.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>There is another way of choosing a variety of options and
that is to use switch.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>After the closing curly brace of the compare function, enter</p>

</div>

<span style='font-size:12.0pt;line-height:110%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection2>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>function today(){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:192.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>   const day = new Date().getDay(); }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Here we create a Date object, we need to use the new keyword
to create an instance of the Date object. If you create a Date object using no
parameters, notice the empty brackets, then it will be initialised to the
current date and time. A Date object has several methods, here we use the
getDay method. This returns a number between 0 and 6, 0 means today is Sunday,
1 Monday all the way up to 6 meaning the day is Saturday. Now we have a numeric
value we can use it to display a message indicating the day in English. We
start with the keyword switch and then in brackets add the value were using
for the switch. Then we add case blocks. Case 0 followed by a colon, then one
or more lines of code, here we just have a console log message. A case block
ends with break, when the processor reaches break, it jumps out of the switch
statement.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:185.0pt;margin-bottom:
18.9pt;margin-left:.5pt'>switch(day){    case 0:       console.log('Today is
Sunday');       break; }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:301.0pt;
margin-left:.5pt'>Can you add the remaining 6 case blocks? Put the book down
and give it a try. Again try not look at the next page until youve tried this
challenge.</p>

<h3>37</h3>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Hopefully that wasnt too hard.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>  function
today(){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>        
const day = new Date().getDay();          switch(day){              case
0:                  console.log('Today is Sunday');                 
break;              case 1:                  console.log('Today is
Monday');                  break;              case 2:                 
console.log('Today is Tuesday');                  break;              case
3:                  console.log('Today is Wednesday');                 
break;              case 4:                  console.log('Today is Thursday');                 
break;              case 5:                  console.log('Today is
Friday');                  break;              case 6:                 
console.log('Today is Saturday');                  break;             
default:                  console.log('getDay
returned                               value out of range');                 
break;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>         }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
19.15pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>  }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Notice I also added a catch all default block, this will be
used when no case block is true. Now save, refresh browser and enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>today()</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>You get the response Today is  with whatever day it
currently is.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Try to use a switch statement when an if else if else block
has more than 3 or 4 conditions. It isnt always possible. It all depends on
the problem.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>There is one other use of conditions that Id like to point
out and that is the conditional operator. This is a short-cut version of an if
else statement. It is used when we are assigning a value and it can take one of
two different results based on a condition. An example will make it clear.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:5.55pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Lets create a function that will return a
string saying if today is a weekend day or not. Well get the day index as
before using the Date object and the method getDay. Looking at the today
function we can see that a weekend day means day is either 0 or 6. We enter
return followed by brackets containing a more complex condition than weve met
so far.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>function weekend(){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:200.0pt;margin-bottom:
18.9pt;margin-left:.5pt'>   const day = new Date().getDay();    return (day==0
|| day==6); }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.1pt;
margin-left:.5pt'>Here we have 2 conditions joined by vertical lines. The two
vertical lines means logical or, here we join day==0 and day==6 with an or
operation. That means if either day==0 or day==6 is true, then the whole
condition is true. Here is a table showing how it works for these two inputs</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img border=0 width=616
height=80 id="Picture 1284"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image022.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Table 6.1  A truth table for determining if today is a weekend day</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The column to the left shows the possible values for day==0
and the top row the possible values for day ==6. Notice if day==0 is true, row
2, and day==6 is false, column 3, then the result is true. Only row 3, column 3
gives a false value, when both day==0 and day==6 are both false. Well meet
more logical operators as the course progresses.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:1.85pt;margin-bottom:
33.85pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Now we enter a ?, the rst thing after the ?
will be the return value if the condition is true. If day is equal to 0 or 6.
Then we enter a colon and nally the return value if the condition is false, day
does not equal 0 or 6.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>function weekend(){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:65.0pt;margin-bottom:
18.9pt;margin-left:.5pt'>   const day = new Date().getDay();    return (day==0
|| day==6) ? &quot;It's the weekend&quot; :                               
&quot;It's not the weekend&quot; }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save, refresh browser and enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>weekend()</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The return string you get depends on the day you are watching
this video.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Conditions are widely used in programming to control the ow
of the program.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now you know about variables, functions and conditions. Next
up are Arrays, a special kind of variable that can be very useful.</p>

<h1 style='margin-left:.5pt'><a name="_Toc47027">7. Lesson 5 - Arrays</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Arrays are a great way to keep lots of data in a list. To
code along with this lesson in VSCode open index.html from the start/lesson5
folder.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.55pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>You create an Array just like you create a
variable. An array is just a special kind of variable. Unless you plan to keep
recreating the Array then I recommend always using const for an Array variable.
To create the Array just use square brackets.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>const planets = [];</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.25pt;
margin-left:.5pt'>Now we have an Array. But the array doesnt contain anything.
A JavaScript array has a property length that returns the number of items in
the Array. Save your work, go back to</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Chrome and navigate to lesson5/start. Now enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>planets.length</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>This returns 0.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Lets add some items. Here each item is a string, but we can
mix-up items in an array, we can have any data type as an item.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:72.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>const planets = [&quot;Mercury&quot;,
&quot;Venus&quot;, &quot;Earth&quot;, &quot;Mars&quot;, &quot;Jupiter&quot;,
&quot;Saturn&quot;, &quot;Uranus&quot;];</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If we go save our work, go back to Chrome, refresh and enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>planets.length</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Now the answer is 7. If you know your
planets, youll realise Ive missed one out. Not a problem, we can add an item
to the end of the array, even though the variable were using is a constant.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>planets.push(&quot;Neptune&quot;);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Lets create a console log that displays the number of
planets in the solar system. console.log('There are ' + planets.length + '
planets in our Solar System');</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Back in Chrome refreshing the browser and we get this
message. See how by adding Neptune using push, planets.length is now 8.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>When you have an array, you can access a single item using
square brackets and an index value. Just like the rst character in a string is
index 0, so to the rst item in an array is index 0, so despite the fact that
were the third rock from the sun, to get the item Earth we use index 2.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>console.log(&quot;Our planet is &quot; + planets[2]);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>If we save and refresh, we now get two statements about the
planets.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=162 id="Picture 1377"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image023.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 7.1  Planet facts</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If we add another item to the end of the array using the
method push and another console message.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>planets.push(&quot;Pluto&quot;);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>console.log('Until 2006 there were ' + planets.length
+ ' planets in our Solar System');</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save and with live reload enabled with Live Server, we see
another fact.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=171 id="Picture 1397"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image024.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 7.2  More planet facts</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>As well as adding an item using push, we can remove the last
item from an array using pop.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>const pluto = planets.pop();</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>console.log('In 2006 ' + pluto + ' was declassified as
a planet. Now there are ' + planets.length + ' planets');</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Great work. As the course progresses, youll see more things
you can do with arrays. A key feature is the ability to access an item in an
array using an index value. Recall in the last lesson we used a switch  case
statement to display the current day as an English string. A much nicer
technique is to use an array. The Date object has a method getMonth that
returns an index from 0 to 11. Can you create a function, called month, that
returns the current month as an English name? Youll need to create an array of
months, get the current month index, then use this to return the right item
from the array. Put the book down and give it a try. If youre a complete
beginner with programming and JavaScript, it might seem quite hard. But there
is no substitute for practice.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>First, we create the function de nition, thats just the
function keyword and the name of the function followed by brackets. We have no
parameters to pass to the function so that completes the de nition.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>function month()</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The content of the function goes in curly braces. Now we
create an array, well call it months. Remember we de ne an array using square
brackets. Then we list each month, these are all strings so each item goes
inside double quotes, you can optionally use a single quote, the apostrophe
character. Each item is separated from the previous item using a comma. Now we
get the month id by creating a new Date object, no parameters are included so
the Date will be set to todays date and the current time. Then we use the
getMonth method. At this stage the constant variable monthId will be a value
between 0 and 11. All that remains is to return the item months[monthId]. The
item in the array at the index month id.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>function month(){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>   const months = [&quot;January&quot;,
&quot;February&quot;, &quot;March&quot;, &quot;April&quot;,</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>&quot;May&quot;, &quot;June&quot;, &quot;July&quot;,
&quot;August&quot;, &quot;September&quot;, &quot;October&quot;,</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>&quot;November&quot;, &quot;December&quot;];</p>

<p class=MsoNormal style='margin-top:0in;margin-right:155.0pt;margin-bottom:
18.9pt;margin-left:.5pt'>   const monthId = new Date().getMonth();    return
months[monthId] };</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save and allow Live Server to reload. Admire all the
interesting facts about the planets once more, then enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>month()</p>

<p class=MsoNormal style='margin-top:0in;margin-right:10.65pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>And the current month will be displayed in
English. If youd prefer a different language, then simply replace the content
of the months array with the names of the months in your preferred language.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Arrays are very important in programming. Another important
data type is an object and well look at them in the next lesson.</p>

<h1 style='margin-left:.5pt'><a name="_Toc47028">8. Lesson 6 - Objects</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Youve learnt about variables and arrays already. Imagine you
have a game where there are lots of non-player characters, NPCs. You want to be
able to store information about them. Power, weapon, strength and damage for
example.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>We could store this as lots of individual variables.
NPC1Power, NPC1Weapon,</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>NPC1Strength, NPC1Damage, NPC2Power, NPC2Weapon,
NPC2Strength, NPC2Damage</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>etc. But, one of the really great things about JavaScript is
just how easy it is to create a data structure that stores data in just the way
you like it. If youre new to programming, then you wont understand how useful
this is. Trust me it is. Instead of using four variables to store the data for
each NPC, we can create an object that stores the variables in a single
structure.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Like this</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>{ power: 0.5, weapon: &quot;sword&quot;, strength:
1.2, damage: 0 }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>We use curly braces and name-value pairs. A name value pair
is separated using a colon.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Open index.html from the folder start/lesson6 to code along
with this lesson. Lets create a function that will generate an object like
this. Its a function so we use the function keyword. Well call the function
createNPC. The rst thing well do is generate a power value, it will take a
value between 0.5 and 1. So far in the course weve met the Date object.
Another vital object is the Math object. This has many useful methods; well
meet two of them as we create this function. The rst method is random. This
returns a pseudo random number between 0 and 1. The number could be any decimal
value in this range. But we want a number in the range 0.5 to 1. So we multiply
this value by 0.5, now we have a number in the range 0 to 0.5. This is still
not what we want, we need to add 0.5, to move the range to 0.5 to 1. If this is
confusing, imagine that Math.random returned 0.8, we multiply this by 0.5, now
the value is 0.4, then we add 0.5 to get 0.9, thats in the target range. What
if Math.random returned 0.1, we multiply by 0.5, getting 0.05, then we add 0.5
to get 0.55, again in the range 0.5 to 1. Math.random is a great method to use
for random assignment of object properties.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>function createNPC(){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:132.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>   const power = Math.random() * 0.5 + 0.5 };</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Next, we create an array of weapons. Then we select a weapon
at random using this array. How do we do that? If we use Math.random() times
weapons.length well get a value between 0 and weapons.length. Actually it will
always be just less than weapons.length, because Math.random never returns 1,
it can return 0.99999, but never 1. With Math.random time weapons.length we
have a decimal value, but to select an item from an array we need an integer
value. We wrap the code inside another Math method, oor. This returns the
integer part of a decimal value. So, Math. oor(2.85) equals 2 and Math.
oor(1.289) returns 1. Now we have a value that depending on the return value of
Math.random returns one of the integer values 0,1,2,3. If the value is 0 then
weapon will be set to sword, if its 1 weapon will be pistol, 2  axe and
3  spear.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>function createNPC(){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:50.0pt;margin-bottom:
18.9pt;margin-left:.5pt'>   const power = Math.random() * 0.5 + 0.5;    const
weapons = [&quot;sword&quot;, &quot;pistol&quot;, &quot;axe&quot;,
&quot;spear&quot;];    const weapon = weapons[Math.floor(Math.random() *
weapons.length)] };</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Can you set strength? We want a value in the range 1 to 3.
Use Math.random, a multiplier and add a value. Put the book down now and give
it a try.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>It will be Math.random() * 2 + 1.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>function
createNPC(){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>        
const power = Math.random() * 0.5 + 0.5;          const weapons =
[&quot;sword&quot;, &quot;pistol&quot;, &quot;axe&quot;,
&quot;spear&quot;];          const weapon = weapons[</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
19.05pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>               
Math.floor(Math.random() * weapons.length)];          const strength =
Math.random()*2 + 1.0; }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Damage is even easier, we simply default it to zero.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:148.5pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 4.8pt 0in 0in;
  height:148.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>function
  createNPC(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:45.3pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>          const power = Math.random() * 0.5 + 0.5;           const
  weapons = [&quot;sword&quot;, &quot;pistol&quot;, &quot;axe&quot;,</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>&quot;spear&quot;];</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>         
  const weapon = weapons[</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>                 Math.floor(Math.random() *
  weapons.length)];           const strength = Math.random()*2 + 1.0;          
  const damage = 0;  }</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Creating an object from these values is just a case of
entering curly braces then listing them separated by commas. This will be the
same as using these name value pairs.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:165.0pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 4.8pt 0in 0in;
  height:165.0pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>function
  createNPC(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>        
  const power = Math.random() * 0.5 + 0.5;</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:112%'><span
  style='color:#ADE7FC'>         const weapons = [&quot;sword&quot;,
  &quot;pistol&quot;, &quot;axe&quot;, &quot;spear&quot;];          const
  weapon = weapons[</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:22.5pt;margin-bottom:
  16.5pt;margin-left:0in;text-indent:0in;line-height:112%'><span
  style='color:#ADE7FC'>              Math.floor(Math.random() *
  weapons.length)];          const strength = Math.random()*2 + 1.0;         
  const damage = 0;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:60.3pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:107%'><span style='color:
  #ADE7FC'>         return { power, weapon, strength, damage };  }</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>This function will return an object like this</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>{ power: 0.5, weapon: &quot;sword&quot;, strength:
1.2, damage: 0 }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>We can create an array to hold our NPCs. Unsurprisingly well
call it npcs. Then to add an npc to the array we use push, with the function
call in brackets. This is going to call the function createNPC which returns an
npc object, this is pushed onto the end of the array. If we repeat this 3
times, we should have an array of npcs.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
16.9pt;margin-left:.5pt'>const npcs = [];</p>

<p class=MsoNormal style='margin-top:0in;margin-right:117.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>npcs.push(createNPC()); npcs.push(createNPC());
npcs.push(createNPC());</p>

<p class=MsoNormal style='margin-top:0in;margin-right:61.25pt;margin-bottom:
9.4pt;margin-left:.5pt;line-height:176%'>Save your work, if Live Server is
running, you can view the page using this url
http://127.0.0.1:5500/start/lesson6/index.html Enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>npcs.length</p>

<p class=MsoNormal style='margin-top:0in;margin-right:331.1pt;margin-bottom:
0in;margin-left:.5pt;line-height:240%'>Youll get the response 3. Now enter npcs[0]</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If you press the little arrow you can see more clearly the 4
properties of the rst npc in the array.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.85pt;
margin-left:19.5pt;text-indent:0in;line-height:107%'><img border=0 width=566
height=254 id="Picture 1629"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image025.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 8.1  Viewing the npc properties</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If were just interested in what weapon the rst npc has we
use</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>npcs[0].weapon</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>or to get the power value of the second npc we use</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>npcs[1].power</p>

<p class=MsoNormal style='margin-top:0in;margin-right:5.55pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Everything about each npc is encapsulated
in the single object. Just as we did with the string object, we use a dot to
separate the object from the property. Later in this section youll see how you
can even add your own custom methods.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Lets look back on what youve learnt so far in this course.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>First you discovered variables. Then you learnt about
functions. You learnt how your code can branch in different directions using
conditions. You learnt to keep lots of variables in a list using arrays and now
you know about keeping lots of variables together in an object. With arrays you
access an individual item using an index value and with an object you use a
property name.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:5.55pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Often in code you will want to repeat a
section of code several times. Like in this lesson where we repeated creating
npcs. Rather than just pasting the same code three times like we did here, much
better to use loops and thats what well do in the next lesson.</p>

<h1 style='margin-left:.5pt'><a name="_Toc47029">9. Lesson 7 - Loops</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Youre becoming a real programmer now. Remember in the
previous lesson we created 3 NPCs. But we did it by copying the line and
pasting it in two more times. In this lesson well look at methods to loop
through code automatically.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The most common method is to use for. To code along open
index.html from the start/lesson7 folder. You might be surprised to see this is
where you got to in the previous video. I want you to delete two of the
npcs.push lines.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Now before the remaining npcs.push line add for then
brackets, followed by an opening curly brace. With the closing curly brace
after the npcs.push line.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:148.5pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:148.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>&lt;script&gt;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:239.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>       const npcs = [];        for(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>        
  npcs.push(createNPC());</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:396.55pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>       }        </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>      
  function createNPC(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:81.85pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:107%'><span style='color:
  #ADE7FC'>         const power = Math.random() * 0.5 + 0.5;          </span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>So far so good. But if you try and run it now, youll get an
Unexpected token error. Thats because we are expected to enter something in
the brackets after the for keyword. What we enter for a for statement is
positively weird. Rather than a typical set of parameters that you pass to a
function, separated by commas. Instead, we enter 3 JavaScript statements. As
such they are separated by semi-colons, just like you should end every
JavaScript statement line. You enter three statements and each one, in order
has a different purpose. The rst is executed just once, before we run the code
inside the curly braces, the second statement is a condition, while it
evaluates to true the loop will repeat. The nal, the third statement is
executed every loop, after the code inside the curly braces has run. So what do
we enter to cause the code block inside the curly braces to be executed 10
times. Creating 10 npcs.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>First we de ne an index variable, we use let not const
because we are going to be updating this variable. The second statement is a
condition, we want to check if i is less than 10. Finally we want to add one to
the variable i each time the code block executes. JavaScript has a short cut
method for adding one to a number. We use plus plus. You might have seen there
is a programming language called C++ and this is meant to indicate that it is
the next iteration of the C programming language.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:215.0pt;margin-bottom:
19.05pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>&lt;script&gt;        
const npcs = [];         for(let i=0; i&lt;10; i++){          
npcs.push(createNPC());         }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Lets go over that again. This code means. Create a variable
called i that is initialized to zero. We test if i is less than 10, it is, so
the code inside the curly braces is executed. Then the nal statement in the for
de nition is executed. The variable i is incremented by 1. Now i equals 1. The
processor checks if i&lt;10, it is, we run the code inside the curly braces and
then add one to i. i now equals 2, we repeat until i equals 10, this is not
less than 10. So, we jump out of the for loop.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If we save and visit start/lesson7. Remember you can
right-click start/lesson7/index.html and select Open with Live Server. Or if
Live Server is running enter <a
href="http://127.0.0.1:5500/complete/lesson7/index.html"><span
style='color:#2FA4E7;text-decoration:none'>http://127.0.0.1:5500/complete/lesson7/index.html</span></a>
in the browser address bar. Or use the root index.html page with Live Server,
this allows you to return to the index page after a lesson. You would select
Lesson 7&gt;Start using this option. Whichever method you choose make sure the
console is open by pressing F12 and selecting the console tab.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>npcs.length</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The response is 10. Great work.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>While a for loop like this is perhaps the most common form
for looping there are other options. We can reform the loop using while. First,
we de ne the loop variable commonly called i for iterator. Then we enter while.
While has a condition in brackets, we can enter i&lt;10. Then curly braces and
the npcs.push line. Then i++. If you forget to include i++, the while loop will
loop forever. Because of this while loops can be dangerous. A while loop that
loops forever can bring your web page to a grinding halt. Beware.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
16.9pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>let i =
0;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>while(i&lt;10){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
19.05pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>   
npcs.push(createNPC());     i++; }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>As well as using for with 3 statements. We can use for-in to
access the properties of an object. Lets create a variable that accesses
npcs[0]. Then well add a little console message. Then we enter for and create
a new variable prop followed by in npc. Whatever we put in the code block will
now repeat with prop equal to the property names in the object npc. We can
print this to the console using the log method. We use both the prop name and
the value that this is set to. You can access the value of a property in an
object using either object variable name dot property name. Or you can use
square brackets and a string version of the property name.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>const npc = npcs[0];</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
16.9pt;margin-left:.5pt'>console.log(&quot;npcs[0] has the following
properties... &quot;);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>for(let prop in npc){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:162.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>   console.log(prop + &quot;:&quot; + npc[prop]); }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save and let Live Server refresh your browser. The property
names and their values are printed out.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=571
height=219 id="Picture 1793"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image026.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 9.1  Using for-in to show property values</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.25pt;margin-bottom:
9.4pt;margin-left:.5pt;line-height:176%'>Notice how we can access an objects
property either by using dot syntax, or the name of the property as a string
inside square brackets. Enter </p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>npc.weapon</p>

<p class=MsoNormal style='margin-top:0in;margin-right:264.8pt;margin-bottom:
0in;margin-left:.5pt;line-height:240%'>you see the weapon for this npc. Enter </p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>npc[weapon] </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>and you see the same return value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The last loop option well review at this stage is the
foreach method of an Array. Well need an index value. Then we enter
npcs.forEach, it is important to use the capital E. JavaScript is case
sensitive. In the brackets we enter a function. A new way to de ne functions in
JavaScript is to use arrow functions. Using the forEach method the callback
function we create will have a parameter which is each npc in the array in
turn. To track this variable enter npc then an arrow that is equals followed by
greater than, then curly brackets.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>npc =&gt; { }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>We could have used</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>function(npc){ }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>It is the same. But you will inevitably come across arrow
functions and it is important that you understand them.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Then we enter a log string we use the index value i, in the
string and the value of npc.weapon. This is not npcs[0], this is a new version
of the variable npc, that will be npcs[0] for the rst iteration, then npcs[1]
all the way up to npcs[9]. So the number we print in the string goes up, we add
one to the variable i using the ++ increment operator.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:115.5pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:115.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:17.2pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>let
  i=0;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>npcs.forEach(
  npc =&gt;{</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  console.log('NPC no.' + i + ' uses a ' + npc.weapon + </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:119.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>               ' as its chosen weapon.');    i++;</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>});</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save and over in the browser allow it to refresh. Now you
have a list of NPCs showing their weapon of choice.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.85pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=379 id="Picture 1853"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image027.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 9.2  Using forEach</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Loops are very important in programming, and youll nd many
times where youll use the different methods outlined in this lesson. If you
get confused, come back to this lesson and review it.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>JavaScript has a great technique for extending objects so
they can easily include methods as well as properties and we do that using
classes, which is the topic of the next lesson.</p>

<h1 style='margin-left:.5pt'><a name="_Toc47030">10. Lesson 8 - Classes</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>JavaScript classes allow you to combine properties and
methods. To code along with this lesson open the le index.html in the folder
start/lesson8. To create a new class you use the keyword class, then the name
of the class youre creating followed by curly braces.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:350.3pt;margin-bottom:
18.9pt;margin-left:.5pt'>class myClass{ }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>JavaScript is a big fan of curly braces. If you need to
initialize values in a class you need a special function called a constructor.
This function is called when you create a new instance of the class. To clear
up all this terminology, lets create a simple class to represent a 2d point.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>We enter class, all lower case, then the class name, well
call it Point. Then the curly braces and for a Point well need 2 parameters,
an x value and a y value. The constructor function is where we initialize the
class properties. Inside a class you need to use this to access the class
instance. We set this.x to the passed parameter x and this.y to y. Thats it.
To create a new instance of a point simply enter new Point(, then the values
for x and y, followed by the closing bracket. </p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:132.0pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:132.0pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:284.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>class Point{    constructor(x,y){       this.x = x;       this.y =
  y;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:239.05pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:107%'><span style='color:
  #ADE7FC'>   } } const pt = new Point(20, 65);</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>Save your work and over in your browser, open
start/lesson8/index.html using Live</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Server. If you enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>pt</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=571
height=147 id="Picture 1914"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image028.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 10.1  Examining the Point class</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>You will see that you have an instance of a Point. The great
thing about classes is the way we can add methods. Before we see this in action
lets create a new class. This time it is a class to represent a Rectangle.
Well have left, top, width and height as parameters. Like we did with the
Point class we copy the parameters to class properties using the this keyword.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Now we can create 2 instances of the Rectangle class using
new Rectangle and 4 parameters. Parameter 1 is the left position, parameter 2
the top position, parameter 3 is the width and parameter 4 the height.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:181.5pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:181.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>class
  Rectangle{</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:104.05pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>         constructor(left, top, width, height){            
  this.left = left;             this.top = top;             this.width =
  width;             this.height = height;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>        
  }</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:119.05pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:107%'><span style='color:
  #ADE7FC'> }   const rect1 = new Rectangle(10, 10, 100, 50); const rect2 = new
  Rectangle(50, 20, 200, 80);</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If you save your work and back in the browser allow Live
Server time to refresh then enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>rect1</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Youll see the parameters of the rst rectangle.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=136 id="Picture 1952"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image029.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 10.2  Using the console to view rect1</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>So far this isnt very different from an object. Lets start
to explore how it differs. Were going to add a special kind of property to the
class. If we use the keyword get we can then enter a function with no
parameters that returns a value. If we use this syntax it is called a getter
property. It is used to add a property that can be calculated from other class
properties. Well create a getter property that returns the area of the
rectangle. This is simply width times height. Dont forget to use this for
class properties.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>get area(){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:192.8pt;margin-bottom:
18.9pt;margin-left:.5pt'>   return this.width * this.height; }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save, browser refresh and enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>rect1.area</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>We get the value 5000, 100 times 50. Notice we just used the
property name area, no brackets. If you do add brackets youll get rect1.area
is not a function. Because this special kind of function, a getter property,
cannot be called like a standard JavaScript function. It appears to anything
calling it as though it is a property of the class.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now lets create a method. Inside a class a method does not
use the function keyword, you just use the name of the method, then any
parameters inside brackets and nally the code for the method inside curly
braces. Lets create a method that moves the Rectangle. Well use the
parameters x and y. x to indicate the movement to the left property and y the
movement to the top property. We simply use the += operator. Remember this.left
+= x; is the same as this.left = this.left + x. It is simply a short-cut way of
scripting this.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:327.5pt;margin-bottom:
18.9pt;margin-left:.5pt'>move(x, y){    this.left += x;    this.top += y; }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save, browser refresh and enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>rect1.move(0, 100)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now if you enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>rect1</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The top value is 110, not the original 10 value that the
rectangle was when we created it.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now for a more complex method. Were going to create a method
that takes another Rectangle as a parameter and returns true if the passed
Rectangle overlaps with the Rectangle calling the method. To do this well
create four Points. The top left and bottom right of each Rectangle. If left of
rect1, l1.x is greater than the right edge of rect2, r2.x, then there cannot be
an overlap. If the left edge of rect2 is greater than the right edge of rect1
then there cannot be an overlap. We use the logical or operator || so that if
either of these are true we return false, there is no overlap. This completes
the horizontal test.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:2.1pt;margin-bottom:0in;
margin-left:.75pt;text-indent:0in;line-height:112%'>Next, we test vertically.
For this we test if the top edge of rect1 is below the bottom edge of rect2 or
the top edge of rect2 is below the bottom edge of rect1. If either of these are
true, then there cannot be an overlap. For an overlap to occur all of these
four conditions must be false. If that is the case, then we can return true. <span
style='color:#ADE7FC'>overlap(rect){            const l1 = new Point(this.left,
this.top);            const r1 = new Point(this.left +
this.width,                                 this.top - this.height);           
const l2 = new Point(rect.left, rect.top);            const r2 = new
Point(rect.left + rect.width,                                 rect.top -
rect.height);            // If one rectangle is to the right of the
other           if (l1.x &gt;= r2.x || l2.x &gt;= r1.x){ return false; }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:151.05pt;margin-bottom:
16.8pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>         
// If one rectangle is below the other           if (l1.y &lt;= r2.y || l2.y
&lt;= r1.y){ return false; } </span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:151.05pt;margin-bottom:
19.05pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>         
return true;   }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Lets nally enter some messages that use the methods weve
created. First, well display the area of rect1, using the getter property
area. Then well use the overlap method to print an overlap message to the
console. Then well use the move method to move rect1 and now well repeat the
overlap message.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
2.25pt;margin-left:.5pt;line-height:225%;background:black'><span
style='color:#ADE7FC'>console.log('The area of rect1 is ' + rect1.area);
console.log('rect1 overlaps rect2 ' + rect1.overlap(rect2)); rect1.move(0,
100); console.log('rect1 overlaps rect2 ' + rect1.overlap(rect2));</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Initially the rectangles overlap like this.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img border=0 width=616
height=287 id="Picture 2056"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image030.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 10.3  Before rect1 is moved</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>After moving rect1 they are like this with no overlap.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><img border=0 width=616
height=377 id="Picture 2060"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image031.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 10.4  After moving rect1</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:23.25pt;margin-bottom:
3.9pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Save, refresh the browser and you get 3
messages. The area of rect1 and then two messages about the overlap of rect1
and rect2. The rst is true, the second after the move call is false. Great
work.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=165 id="Picture 2077"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image032.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 8.2  Output from start/lesson8/index.html</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Classes connect properties and methods in a way that makes
code clearer.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>As your code gets more complex you are likely to use more
than one text le to store your code. When this happens a great way to load the
code is to use modules and well look at this in the next lesson.<br clear=all
style='page-break-before:always'>
</p>

<h1 style='margin-left:.5pt'><a name="_Toc47031">11 Lesson 9 - Modules</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>So far, all our code has been inside a script tag in the
index.html le. For small programs like the examples in this course, this
approach is ne. But when you create a more complex web application youll be
using lots of code and if you try and keep this in a single le, it will become
very hard to maintain the code.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>You can add additional JavaScript les like this</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>&lt;script
src=pathtofile/myJSFile.js&gt;&lt;/script&gt;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>But the approach well use in this lesson is to use modules.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If you open the folder start/lesson9 you see it has three
les. index.html as usual and Point.js and Rectangle.js. Lets take a look at
the le Point.js. Using the extension .js means this is a le containing
JavaScript code. This le just contains the code we entered for a Point class in
the previous video. But there is an additional line at the end.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
3.55pt;margin-left:.5pt'>export{Point};</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:132.0pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:132.0pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:291.85pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>class Point{    constructor(x,y){      this.x = x;      this.y = y; </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  } </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:441.55pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>}   </span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>export{Point};</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>When we use modules, we use the keywords export and import.
We can choose what to export from the JavaScript le, if the le contains classes
and functions, we can select which are exported leaving others private to the
le. Whatever we are exporting goes inside curly braces, JavaScript loves curly
braces. If there is more than one export then the names are separated by
commas.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>export{ Planet, Moon, Star }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:5.55pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Now take a look at the Rectangle.js le. You
probably guessed that this contains the code for the Rectangle class. But if
you recall the Rectangle class needs to know about the Point class. Notice at
the start of the le there is an import line.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>import {Point} from ./Point.js<br clear=all
style='page-break-before:always'>
</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.2pt;margin-bottom:0in;
margin-left:-74.25pt;text-indent:0in;line-height:107%'>&nbsp;</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:8.25in'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:8.25in'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>import
  {Point} from './Point.js';</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'> 
  </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:44.05pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>class Rectangle{ constructor(left, top, width, height){       
  this.left = left;        this.top = top;        this.width = width;       
  this.height = height;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:17.2pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  }</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:284.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>   move(x, y){        this.left += x;        this.top += y;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:17.2pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  }</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  get area(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>      
  return this.width * this.height;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:419.05pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>    }      </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  overlap(rect){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:51.85pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>       const l1 = new Point(this.left, this.top);        const r1 =
  new Point(this.left + this.width,                             this.top -
  this.height);        const l2 = new Point(rect.left, rect.top);        const
  r2 = new Point(rect.left + rect.width,                             rect.top -
  rect.height);</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>      
  </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:36.55pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>       // If one rectangle is on left side of other       if (l1.x
  &gt;= r2.x || l2.x &gt;= r1.x){ return false; }</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>      
  // If one rectangle is below the other</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:17.2pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>     
  if (l1.y &lt;= r2.y || l2.y &lt;= r1.y){ return false; }</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>     
  return true;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'> 
  } </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:434.05pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>}    </span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>export { Rectangle };</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Again, we use the ubiquitous curly braces, then a name used
in the export line from the le chosen as the from path. We use dot forward
slash to indicate the current folder, the folder where youd nd the le doing
the importing and ../ to move to the folder above the current one. All from
paths must start with either ./ or ../.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>When we use modules, we need to inform the JavaScript
compiler. We add</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>type=module</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>To the starting script tag.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If you look in the index.html le youll see it makes use of
the Point and Rectangle classes, just like in the previous video. But there is
no indication of a module or any attempt to import the necessary les.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If we open the page now with the developer console open
youll see</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'> Uncaught ReferenceError: Point not defined</p>

<p class=MsoNormal style='margin-top:0in;margin-right:12.0pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Can you x this? Youll need to make sure
that JavaScript knows that this is a module and specify import lines for the
Point and Rectangle classes. Put the book down now and see if you can write the
necessary code.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Nice and simple. First, we use type equals module so
JavaScript knows to interpret this as a module. Then we use the keyword import,
followed by what were importing in curly braces then where we nd the necessary
le. Because the le is in the same folder as the index.html page, the path
starts with ./, this is interpreted as the same folder as the le that is
importing the external module.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:132.5pt;margin-bottom:
18.9pt;margin-left:.5pt'>&lt;script type='module'&gt;    import {Point} from
'./Point.js';    import {Rectangle} from './Rectangle.js';</p>

<p class=MsoNormal style='margin-top:0in;margin-right:20.9pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Now if we save and refresh the browser, we
get the log messages that we got in the previous video. Using modules allows
you to reuse code you create and makes your code much tidier and easy to
maintain.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>One thing new programmers nd confusing, is scope. You
probably have no idea what I mean, lets address that in the next lesson.<br
clear=all style='page-break-before:always'>
</p>

<h1 style='margin-left:.5pt'><a name="_Toc47032">12. Lesson 10 - Scope</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Understanding how scope affects access to variables and class
properties and methods can be very confusing. In this lesson Ill try and make
it clear.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>To code-along open the le index.html from the folder
start/lesson10. There is a variable called name de ned, a function called
myFunc and a class called game. The name variable is de ned at the root of the
script, so it has global scope. You can access it anywhere. As you get more
experienced with your programming, youll learn that global variables should,
where possible be avoided. But this isnt a lecture about good coding practice,
it is about scope.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Make sure youre using Live Server to view
lesson10/start/index.html. In the console enter name and the value of name
should appear.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Back in VSCode add this console log statement and call to
myFunc.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:185.3pt;margin-bottom:
18.9pt;margin-left:.5pt'>console.log(`name=${name}`); myFunc();</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Notice Im using backticks, not single or double quotes,
inside the log brackets. Using backticks we create a template string and if we
use a dollar sign and the ubiquitous curly braces you can include JavaScript
code inside the string value. This will print the value of name. Then we call
the function myFunc. Before we run this, lets have a quick look at this
function.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:214.5pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 4.8pt 0in 0in;
  height:214.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>function
  myFunc(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>   
  console.log(`Inside myFunc name=${name}`);</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:5.0in;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>            if (true){</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:112%'><span
  style='color:#ADE7FC'>      let course = &quot;The beginners guide to 3D web
  game development with ThreeJS&quot;;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'> </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:17.2pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>     
  const lesson = 10;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:7.5pt;margin-bottom:
  0in;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
  text-indent:0in;line-height:112%'><span style='color:#ADE7FC'>     
  console.log(`course='${course}' inside if statement`);      
  console.log(`lesson=${lesson} inside if statement`);   } </span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>}</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>We have a console statement to print the value of name. What
do you think name will be inside the function? Well see in a minute. Then we
have an if statement where the condition it true, so it will always process the
statements inside the curly braces. We create a variable and a constant, then
we print the values of these to the console.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Time to use Live Server to run the start/lesson10/index.html</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=571
height=205 id="Picture 2302"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image033.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 12.1  First scope messages</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:1.5pt;margin-bottom:18.8pt;
margin-left:0in;text-align:justify;text-justify:inter-ideograph;text-indent:
.25pt;line-height:111%'>Outside of the function and inside the function, name
has the value Nik Lever, since the variable name has global scope. Then
course and lesson have the values assigned to them. So far so good.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now outside the if code block but still inside the myFunc
function. Copy the course and section console log lines switching inside to
outside.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>console.log(`course='${course}' outside if
statement`); console.log(`lesson=${lesson} outside if statement`);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Lets add 'Inside myFunc' to the console lines, so we can
clearly see the console lines called inside this function.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:313.5pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 4.8pt 0in 0in;
  height:313.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>const
  name = &quot;Nik Lever&quot;;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'> 
  </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>function
  myFunc(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>   
  console.log(`Inside myFunc name=${name}`);</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:5.0in;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>       if (true){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:30.3pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>       let course = &quot;JavaScript in 12 easy
  lessons&quot;;        const lesson = 10;</span></p>
  <p class=MsoNormal style='margin:0in;text-align:justify;text-justify:inter-ideograph;
  text-indent:0in;line-height:112%'><span style='color:#ADE7FC'>      
  console.log(`Inside myFunc: course='${course}' inside if statement`);</span></p>
  <p class=MsoNormal style='margin:0in;text-align:justify;text-justify:inter-ideograph;
  text-indent:0in;line-height:112%'><span style='color:#ADE7FC'>      
  console.log(`Inside myFunc: lesson=${lesson} inside if statement`);</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:427.5pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>  }    </span></p>
  <p class=MsoNormal style='margin:0in;text-align:justify;text-justify:inter-ideograph;
  text-indent:0in;line-height:112%'><span style='color:#ADE7FC'>  
  console.log(`Inside myFunc: course='${course}' outside if statement`);</span></p>
  <p class=MsoNormal style='margin:0in;text-align:justify;text-justify:inter-ideograph;
  text-indent:0in;line-height:112%'><span style='color:#ADE7FC'>  
  console.log(`Inside myFunc: lesson=${lesson} outside if statement`);</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>}</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save, let Live Server refresh the browser.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=267 id="Picture 2357"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image034.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 12.2  Uncaught ReferenceError</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.1pt;
margin-left:.5pt'>We get an Uncaught ReferenceError, if you click the link,
youll see it is the console log line outside the if code block, where we
attempt to display the value of course. This is because the variable course
only exists inside the if code block, not outside the code block. It has local
scope to within the curly braces of the if statement.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=320 id="Picture 2364"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image035.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Diagram 12.3  Displaying where the error occurs in the code</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>This error will stop any further code running in the
function. To allow the code to continue, we can put the problem code inside a
try  catch block. We use the keyword try then curly braces wrapping the code,
followed by the keyword catch and brackets. Inside the brackets we add an error
object, then we add more curly braces and inside these curly braces we add a
console message that will display the message property of the err parameter to
the catch block.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:330.0pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:330.0pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>function
  myFunc(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:104.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>   console.log(`Inside myFunc name=${name}`);    if (true){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:36.85pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>      let course = &quot;JavaScript in 12 easy lessons&quot;;      
  const lesson = 10;</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:112%'><span
  style='color:#ADE7FC'>      console.log(`Inside myFunc: course='${course}'
  inside if statement`);</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:6.55pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>      console.log(`Inside myFunc: lesson=${lesson} inside if
  statement`);   }            try{</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:112%'><span
  style='color:#ADE7FC'>     console.log(`Inside myFunc: course='${course}'
  outside if statement`);</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:14.05pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>    console.log(`Inside myFunc: lesson=${lesson} outside if
  statement`);   }catch(err){ </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>   
  console.error(`myFunc:${err.message}`);</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'> 
  }       </span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>}</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.25pt;
margin-left:.5pt'>Save and let Live Server refresh the browser. You can expand
the error to see how we got to this line. Adding a try-catch block is a useful
technique for di cult to x code bugs.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=571
height=249 id="Picture 2418"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image036.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 12.4  Expanding an error console output</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now lets turn our attention to the App class.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>In the mouseMove method add this console log statement</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>console.log(this.name);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>And in the App constructor add an event listener. This neat
bit of code, means whenever there is a mouse movement we can call a chosen
function. Notice the event name is mousemove, that is the event we are going
to be listening out for. The second parameter is the function to call when this
happens.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>document.addEventListener('mousemove',
this.mouseMove);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now immediately after the class closing curly brace, lets
create an instance of the game class. Notice we need to pass a name as a
parameter.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>const myGame = new App(&quot;Scope example&quot;);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:5.55pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Save and refresh the browser. Lots of
errors. Switch to the Sources tab and click on the number of the rst line in
the mouseMove method. Now when you move the mouse the processor will stop at
this line, youve added a breakpoint.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=443 id="Picture 2446"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image037.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 12.5  Inside mouseMove this is the HTML document</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Hover over this and slide down to see that this is not the
game at all, it is the HTML document. This is easily xed.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Jump back to VSCode and back where we created the event
listener, add</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>.bind(this)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>document.addEventListener('mousemove',
this.mouseMove.bind(this));</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now inside the function, instead of this being the document,
this will be the App as expected. Save and let Live Server refresh to con rm.
We see the App name, Scope example, as expected. If we add a breakpoint as
before, we can clearly see by hovering over the word this in the mouseMove
method that this is now the App instance. Nice.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:17.25pt;text-indent:0in;line-height:107%'><img border=0 width=572
height=373 id="Picture 2471"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image038.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 12.6  this is now the App instance</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Notice the showDays method. In the constructor for the App we
created an array of days.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>this.days = ['Monday', 'Tuesday', 'Wednesday',
'Thursday', 'Friday', 'Saturday', 'Sunday'];</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>In the showDays method we use the forEach method of an Array
to attempt to display each day.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>showDays(){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>  
this.days.forEach( function(day){       console.log(`global name: '${name}' app
name:'${this.name}' day:'${day}'`);</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>   });</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>}</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>To emphasize the role of scope we also show the global value
of name and the local value of name using a template string. Enter this code to
call this method.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>myApp.showDays();</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>Then save and let Live Server refresh your browser.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:22.5pt;text-indent:0in;line-height:107%'><img border=0 width=558
height=259 id="Picture 2502"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image039.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 12.7  Uncaught TypeError</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.35pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Youll get an Uncaught TypeError,: Cannot
read property name of unde ned. Thats because the function has its own scope
and 'this' inside the function is not the App. There are two ways to x this.
The easiest is to switch to arrow functions. Arrow functions have the scope of
where they are de ned. So 'this' will be the App.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>this.days.forEach( day =&gt;{</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If we save and refresh, we now get all the days in the Array
displayed as expected. Notice also that global name and local name are as
expected.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>The optional way is to create a variable, often called 'self'
and set 'self' equal to 'this'.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Then inside the function we replace 'this' with 'self'.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:75.9pt;margin-bottom:
16.9pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>const
self = this;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:75.9pt;margin-bottom:
19.05pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>this.days.forEach(
function(day){    console.log(`global name: '${name}' game name:'${self.name}'
day:'${day}'`); });</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Again, if we save and refresh, now self.name points at the
game name and so no errors are generated.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Scope is challenging for new programmers but with practice
youll soon understand where the problems are.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Maths allows us to achieve some stunning visual effects.
Weve met the JavaScript Math object already in this course, in the next lesson
well look at some super useful methods of this object that you can use in your
web apps. Dont skip the chapter because you hate Maths!<br clear=all
style='page-break-before:always'>
</p>

<h1 style='margin-left:.5pt'><a name="_Toc47033">13. Lesson 11 - Math</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Often youll be using a little Maths in your code. To code
along with this video open index.html from the folder start/lesson11, and also
open Vec.js from the same folder.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>First notice that the Vec class has copy, clone, add, sub,
distanceTo, angle and angleBetween methods and well review these as they come
up in the code we enter.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>First, well create 3 instances of the Vec class.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:275.3pt;margin-bottom:
18.9pt;margin-left:.5pt'>const a = new Vec(); const b = new Vec(4, 0); const c
= new Vec(4, 3);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The name Vec is short for vector. In Maths a vector is simply
a value with more than one component. Well see a lot of vectors over the
course. When a value has a single component, it is called a scalar. The Vec
class has two components, x and y. So, to create one we use two parameters. But
if we dont provide any parameters the constructor code for a Vec instance has
the default value 0 for both x and y. By adding equals and a value we can
easily add default values for parameters to any function.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:353.9pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>class
Vec{    constructor(x=0,y=0){       this.x = x;       this.y = y;</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:353.9pt;margin-bottom:
19.05pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>   } }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Here we have the Vec instances 0,0, 4,0 and 4,3.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:59.25pt;text-indent:0in;line-height:107%'><img border=0 width=460
height=292 id="Picture 2588"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image040.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Diagram 13.2  The Vec instances plotted</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>If we show these as a triangle they may be more familiar.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:1.25in;text-indent:0in;line-height:107%'><img border=0 width=378
height=272 id="Picture 2592"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image041.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 13.2  Vec instances forming a triangle</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If you recall your Pythagoras, a popular example is a
triangle, with one edge of 4 units and another of 3 units. If we square the 4
we get 16 and square the 3 we get 9, add them together we get 25. Find the
square root of 25 and we get the length of the hypotenuse, the longest side,
the one away from the right angle.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:36.75pt;text-indent:0in;line-height:107%'><img border=0 width=520
height=541 id="Picture 2610"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image042.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 13.3  Using Pythagoras to nd the length of the longest edge</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>If you recall the Vec class has a distanceTo method. The
distance from a, 0,0 to c at 4,3 should be 5 units. Lets add a console
message, well use a template string and inside the dollar curly braces call
the distanceTo method. Now check if 5 is the length we get.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:99.0pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:99.0pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:269.35pt;margin-bottom:
  16.5pt;margin-left:0in;text-indent:0in;line-height:112%'><span
  style='color:#ADE7FC'>const a = new Vec(); const b = new Vec(4, 0); const c =
  new Vec(4, 3);</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>console.log(`The
  distance from a to c is</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><span
  style='color:#ADE7FC'>${a.distanceTo(c).toFixed(2)}`);</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.1pt;
margin-left:.5pt'>Save and refresh and we get exactly that. I added toFixed(2),
this limits the number of values after the decimal point to the value we enter
as a parameter. So, we get 5.00.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=132 id="Picture 2636"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image043.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:160.2pt;margin-bottom:
0in;margin-left:.5pt;line-height:240%'><span style='font-size:12.5pt;
line-height:240%'>Diagram 13.4  Output from Vec.distanceTo method </span>Lets
take a look at the Vec class method distanceTo.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>distanceTo(pt){</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
.35pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>   const
delta = this.clone().sub(pt);</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.75pt;margin-bottom:
19.05pt;margin-left:.5pt;background:black'><span style='color:#ADE7FC'>  
return Math.sqrt( delta.x*delta.x + delta.y*delta.y ); }</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>First, we de ne a value delta this is a clone of the Vec
instance calling the method, a copy in other words. Here we have the Vec
instance a, which has the value 0,0. Then we use the method sub, which
subtracts the passed Vec. At this stage delta has the values, -4, -3. We
multiply -4 by -4, getting 16, then add -3 times -3 getting 16 + 9. I hope you
remember that positive times positive is positive, positive times negative is
negative but negative times negative is also positive. The value we pass to the
Math method sqrt, short for square root, is 25. The square root of 25 is 5.
Youll be amazed how often youll use Pythagoras theorem to nd the distance
between two objects if you do any game programming. The theorem also works in 3
dimensions just as well as in 2 dimensions.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Another common problem is nding the angle between two
vectors. If instead of thinking of b and c as points in 2d space, we think of
them as lines extending from the origin, 0,0. Then we can nd the angle between
them using the Math method atan2. Again, well reduce the precision to just two
numbers after the decimal point. Add this code</p>

<p class=MsoNormal style='margin-top:0in;margin-right:125.0pt;margin-bottom:
4.8pt;margin-left:.5pt'>console.log(`The angle between b and c is
${b.angleBetween(c).toFixed(2)} degrees`); Save and refresh and we get the
angle between vector b and vector c.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=140 id="Picture 2675"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image044.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 13.5  Displaying the angleBetween output</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>The Vec.angleBetween code creates two angles using the angle
method of the Vec class.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:165.0pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 27.3pt 0in 0in;
  height:165.0pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>angle()
  {</span></p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:112%'><span
  style='color:#ADE7FC'>   const theta = Math.atan2( -this.y, -this.x ) +
  Math.PI;    return theta;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:412.5pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>}    </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>angleBetween(pt){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:165.3pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>   const theta1 = this.angle();    const theta2 = pt.angle();</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:37.8pt;margin-bottom:
  0in;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
  text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>   return
  Math.abs(theta1 - theta2) * 180 / Math.PI; }</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:2.35pt;
margin-left:1.25in;text-indent:0in;line-height:107%'><img border=0 width=378
height=251 id="Picture 2691"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image045.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 13.6  Vectors b and c</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The angle method returns the angle between the vector and the
positive x axis. For b which is inline with the x axis the value is zero.
Whereas c has the angle 0.6435. You might have been expecting a value around 30
degrees. Vec.angle uses the Math method atan2 to get the angle. All Math trig
functions and atan2 is one, return a value in radians. There are 2&#960;
radians in a full revolution. This is a very important fact, so Ill say it
again. There are 2&#960; radians in a full revolution.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:26.4pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>The angle method uses the atan2 method,
this takes the y value and the x value as parameters. The atan2 method returns
a value between -&#960; and &#960;, to ensure only positive values we negate
the parameters and add &#960; to the returned value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now we have 2 angles, theta1 and theta2, we get the angle
between them by subtracting one from the other. We use another Math method abs,
this returns the absolute value, a negative value becomes positive. Then we
multiply by 180 and divide by &#960; to convert the radian value to degrees.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:15.0pt;
margin-left:.5pt;line-height:138%'>So far, youve met, sqrt, atan2, abs methods
and the constant &#960; from the Math object and have learnt how to nd the
distance between two points in 2d space and the angle between two 2d vectors.
Two other useful methods are the sin and cos methods. Notice on this page we
have a star displayed. Were going to write some code to rotate this star
around in an orbit. Enter</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
16.9pt;margin-left:.5pt'>const center = new Vec(150, 150);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:125.0pt;margin-bottom:
10.5pt;margin-left:.5pt;line-height:169%'>const radius = 100; let theta = 0;
const star = document.getElementById('star');</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>To start with we need a couple of constants and a variable.
center will be the point in the web page that is the centre of the orbit.
Radius is the distance that the star will be from this centre point. theta is
the Greek word commonly used to represent an angle, well initialize it to
zero. Now we need to get the star element. It has been given the id star so we
can use the document method, getElementById to access it.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now we need to de ne a function that will update the value of
theta then calculate where to place the star and set its style values to
position it. Well call it rotateStar. We want this to be called repeatedly, a
great way to do that is to use the JavaScript method requestAnimationFrame.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>function rotateStar(){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:185.0pt;margin-bottom:
18.9pt;margin-left:.5pt'>   requestAnimationFrame(rotateStar);    theta +=
0.05; }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.1pt;
margin-left:.5pt'>This is a built-in function and will be called around 60
times a second if the browser can keep up. It takes a function that it will
call. Here we call rotateStar again. So, this function keeps calling itself.
Now we have a repeating function we need to update theta, by adding 0.05, it
will take 100 calls to change theta by 5. A full revolution is 2&#960; or about
6.3. 6.3/0.05 is about 125. At 60fps the star will take about 2 seconds, 60 * 2
being 120, to complete an orbit.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:60.75pt;text-indent:0in;line-height:107%'><img border=0 width=457
height=334 id="Picture 2774"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image046.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 13.7  Setting the x position of the star</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.1pt;
margin-left:.5pt'>The x position of the star can be set using the Math method
cos, which returns the cosine of the passed angle. The cosine will return a
value between -1 and 1. We want a value between -radius and radius so we
multiply the returned value by radius then we add the centre x value. That
gives us the x position. When theta = 0, cos = 1, theta = &#960;/2, cos = 0,
theta = &#960;, cos = -1, theta = 3&#960;/2, cos = 0. So the x value slides
left until theta = &#960;, then slides right until theta = 2&#960;. This then
repeats.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:37.5pt;text-indent:0in;line-height:107%'><img border=0 width=518
height=284 id="Picture 2803"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image047.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 13.8  Setting the y position of the star</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:5.55pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>The y position is more or less identical,
but we use the sin method not cos. When theta = 0, sin = 0, theta = &#960;/2,
sin = 1, theta = &#960;, sin = 0 and theta = 3&#960;/2, sin = -1. Here the y
value increase to &#960;/2, then decreases to 3&#960;/2, then increases again
to 2&#960;.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.65pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>We can use the calculated values x and y to
set the left and top values of the style property of the star element. When
setting CSS style values we need to supply a unit, here we use px, short for
pixel.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Add a call to rotateStar to star the looping action.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:280.5pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:2.0pt 5.75pt 0in 0in;
  height:280.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:171.85pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>const centre = new Vec(150, 150); const radius = 100;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:351.55pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>       let theta = 0; </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:14.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:225%'><span style='color:
  #ADE7FC'>const star = document.getElementById('star'); rotateStar(); </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>function
  rotateStar(){</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:134.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>   requestAnimationFrame(rotateStar);    theta += 0.05; </span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:44.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:112%'><span style='color:
  #ADE7FC'>   const x = Math.cos(theta) * radius + centre.x;    const y =
  Math.sin(theta) * radius + centre.y;</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:231.55pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:107%'><span style='color:
  #ADE7FC'>             star.style.left = `${x}px`;    star.style.top =
  `${y}px`; }</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save and refresh and you have a rotating star.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The key uses of Maths in your apps will be to nd distances,
angles and to use sin and cos for smooth movements. Great work.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:5.55pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>There just one more thing Id like to tell
you about before we nish and that is about JSON, a great way in which you can
initialize your applications data. Find out all about it in the next lesson.</p>

<h1 style='margin-left:.5pt'><a name="_Toc47034">14. Lesson 12 - JSON</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>JSON stands for JavaScript Object Notation. Its great for
loading data into a web app. A JSON le is just a simple text le. Take a look at
characters.json from the folder start/lesson12.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>[</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>   &quot;King Arthur&quot;,</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>   &quot;Merlin&quot;,</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>   &quot;Lancelot&quot;,</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:.5pt'>   &quot;Guinevere&quot;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>]   </p>

<p class=MsoNormal style='margin-top:0in;margin-right:11.25pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Because the rst character is a square
bracket, the JSON parser knows to interpret the remaining text as an Array. If
it started with a curly brace then it would be read as an object, well see how
that works in a minute.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The aim is to load this le into your app so you can use it as
a JavaScript Array. The easiest way is to use the built-in method fetch. This
returns something called a Promise. The key feature of a Promise is it works
asynchronously. While it is busy doing its work, the main program can continue.
It doesnt block progress. When you work with a Promise you add a then method,
this will be called when the Promise resolves, either successfully or
unsuccessfully. In the case of a fetch, we get a response, the le that has been
fetched. We can call the json method on this response, which is itself another
promise. If this successfully parses the le into a JavaScript Array or object
then we get this value as a parameter and can create a callback function using
the forEach method of an Array to display each character in the console.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>fetch('./characters.json')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>   .then(response =&gt; response.json())</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>   .then(obj =&gt;{</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>      obj.forEach( character =&gt; console.log(
character ));    });</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save, load start/lesson12/index.html using Live Server and
youll see key characters from the King Arthur legend.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=184 id="Picture 2916"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image048.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 14.1  Outputting the character.json le</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.5pt;margin-bottom:
3.9pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>The JSON syntax is not at all forgiving. To
see what I mean, remove the last double quote from Guinivere. Now save and when
your browser refreshes youll get an Uncaught in promise error. SyntaxError
unexpected token in JSON.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:20.25pt;text-indent:0in;line-height:107%'><img border=0 width=565
height=148 id="Picture 2922"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image049.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 14.2  Problem parsing a JSON le</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>When using Promises it is usually best to add a catch block
to the end of the then callbacks, like this</p>

<p class=MsoNormal style='margin-top:0in;margin-right:147.5pt;margin-bottom:
18.9pt;margin-left:.5pt'>obj.forEach(    character =&gt; console.log( character
)); }).catch( err =&gt; console.error(err) );</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>If you save and refresh now it dies much more gracefully.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=148 id="Picture 2944"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image050.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 14.4  Using a catch handler in the fetch code</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:4.2pt;
margin-left:.5pt'>If your JSON le is complicated, then tracing the error can be
tricky. VSCode can help</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:103.5pt;text-indent:0in;line-height:107%'><img border=0 width=343
height=233 id="Picture 2949"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image051.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 14.5  Using VSCode to track down JSON parsing errors</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.75pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>A useful online tool is jsonLint.com. Copy
the text from the le, paste it in and press Validate JSON. If you get an Error,
the problem is usually on the next line after the highlighted red one. Adding a
double quote back, pressing Validate JSON and were good to go.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:57.75pt;text-indent:0in;line-height:107%'><img border=0 width=464
height=612 id="Picture 2968"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image052.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 14.6  Using jsonlint.com</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Dont forget to x the characters.json le back in VSCode.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>I mentioned if the le starts with a curly brace then the
remainder is interpreted as an object. Take a look at planetinfo.json.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:165.0pt'>
  <td width=616 valign=top style='width:462.0pt;background:black;padding:.85pt 5.75pt 0in 0in;
  height:165.0pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>{</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  &quot;description&quot;: &quot;Planets in the solar system&quot;,</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>  
  &quot;planets&quot;: [</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>    
  { &quot;name&quot;: &quot;Mercury&quot;,</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>      
  &quot;aphelion&quot;: 69.8,</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>      
  &quot;perihelion&quot;: 46.0,</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>      
  &quot;radius&quot;: 2439,</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
  margin-left:0in;text-indent:0in;line-height:107%'><span style='color:#ADE7FC'>      
  &quot;moons&quot;: [0]</span></p>
  <p class=MsoNormal style='margin-top:0in;margin-right:426.35pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:107%'><span style='color:
  #ADE7FC'>     }, ...</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.25pt;
margin-left:.5pt'>This is more complex, to start with it is an object. As such
it contains name/value pairs. Notice the name description and then a colon and
then the value of this property. Take a good look at how we loaded the
characters.json le and see if you can load the planetinfo.json le and then
display the description line in the console. Put the book down now and give it
a try.<br clear=all style='page-break-before:always'>
</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>We can just copy the rst fetch code block. Replace characters
with planets. Then replace the forEach line with a simple console log
statement. We log obj.description. Save and refresh to see the line printed to
the console.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>fetch('./planetinfo.json')</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>   .then(response =&gt; response.json())</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>   .then(obj =&gt;{</p>

<p class=MsoNormal style='margin-top:0in;margin-right:132.8pt;margin-bottom:
3.4pt;margin-left:.5pt'>      console.log(obj.description);    }).catch( err
=&gt; console.error(err) );</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:.25in;text-indent:0in;line-height:107%'><img border=0 width=570
height=198 id="Picture 3020"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image053.jpg"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Diagram 14.7  Showing the description line</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Now we have a bunch of facts about the planets, lets see if
we can display the largest planet. Well create a function to do this, that
takes the planets array, which is the other property in the planets object.
Well replace the console log line in the then callback with a call to this new
function passing obj.planets, the planets property of the JSON object weve
just loaded. If we look back at the planetinfo.json le, youll see this is an
Array. Notice after the colon, square brackets. So the planetinfo.json le is
parsed as an object with two properties. Remember object properties and name
value pairs. The rst name value pair is description which is a string value and
the second name value pair is planets and this is an Array.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:20.25pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>Remember square brackets  arrays, curly
braces  an object de ned as a series of name value pairs. The name and the
value are separated by a colon and each name value pair is separated from the
next using a comma.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.25pt;
margin-left:.5pt'>To nd the largest planet, we have an Array of planets. Each
item in the Array is an object. One property of this object is radius. We just
need to nd which object in the Array has the largest radius property. Well use
the reduce method of an Array. This reduces an Array to a single value. It does
this using a callback with two parameters.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:26.5pt;
margin-left:.5pt'>Parameter one is the accumulator value, this is initialized
to the rst item in the array. Then the second parameter will be the second item
in the Array for the rst call back. We check if acc.radius is greater than
loc.radius, if it is then we return acc, if not we return loc. This callback
will continue, with acc set as largest value so far and loc set as the third,
then forth up to the last item in the array. By returning the largest of the
saved value and each item in the array we nd the largest planet in the array.
This table should help your understanding.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:4.45pt;
margin-left:0in;text-indent:0in;line-height:107%'><span style='position:relative;
z-index:-1895824384'><span style='position:absolute;left:1px;top:-29754px;
width:616px;height:1px'><img width=616 height=1
src="JavaScript%20in%2012%20Easy%20Lessons_files/image054.gif"></span></span><b><span
style='font-size:15.0pt;line-height:107%'>acc                     loc                     acc<u>.</u>radius           loc<u>.</u>radius          stored</span></b></p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=616
 style='width:462.0pt;margin-left:.75pt;border-collapse:collapse'>
 <tr style='height:46.5pt'>
  <td width=124 valign=top style='width:93.0pt;border-top:solid #DDDDDD 1.0pt;
  border-left:none;border-bottom:solid #DDDDDD 1.0pt;border-right:none;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:6.0pt;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Mercur</span></b></p>
  </td>
  <td width=118 valign=top style='width:88.5pt;border-top:solid #DDDDDD 1.0pt;
  border-left:none;border-bottom:solid #DDDDDD 1.0pt;border-right:none;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Venus</span></b></p>
  </td>
  <td width=142 valign=top style='width:106.5pt;border-top:solid #DDDDDD 1.0pt;
  border-left:none;border-bottom:solid #DDDDDD 1.0pt;border-right:none;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>2439</span></b></p>
  </td>
  <td width=136 valign=top style='width:102.0pt;border-top:solid #DDDDDD 1.0pt;
  border-left:none;border-bottom:solid #DDDDDD 1.0pt;border-right:none;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>6052</span></b></p>
  </td>
  <td width=96 valign=top style='width:1.0in;border-top:solid #DDDDDD 1.0pt;
  border-left:none;border-bottom:solid #DDDDDD 1.0pt;border-right:none;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Venus</span></b></p>
  </td>
 </tr>
 <tr style='height:46.5pt'>
  <td width=124 valign=top style='width:93.0pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:6.0pt;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Venus</span></b></p>
  </td>
  <td width=118 valign=top style='width:88.5pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Earth</span></b></p>
  </td>
  <td width=142 valign=top style='width:106.5pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>6052</span></b></p>
  </td>
  <td width=136 valign=top style='width:102.0pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>6371</span></b></p>
  </td>
  <td width=96 valign=top style='width:1.0in;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Earth</span></b></p>
  </td>
 </tr>
 <tr style='height:46.5pt'>
  <td width=124 valign=top style='width:93.0pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:6.0pt;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Earth</span></b></p>
  </td>
  <td width=118 valign=top style='width:88.5pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Mars</span></b></p>
  </td>
  <td width=142 valign=top style='width:106.5pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>6371</span></b></p>
  </td>
  <td width=136 valign=top style='width:102.0pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>3389</span></b></p>
  </td>
  <td width=96 valign=top style='width:1.0in;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Earth</span></b></p>
  </td>
 </tr>
 <tr style='height:46.5pt'>
  <td width=124 valign=top style='width:93.0pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:6.0pt;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Earth</span></b></p>
  </td>
  <td width=118 valign=top style='width:88.5pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Jupiter</span></b></p>
  </td>
  <td width=142 valign=top style='width:106.5pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>6371</span></b></p>
  </td>
  <td width=136 valign=top style='width:102.0pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>69911</span></b></p>
  </td>
  <td width=96 valign=top style='width:1.0in;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Jupiter</span></b></p>
  </td>
 </tr>
 <tr style='height:46.5pt'>
  <td width=124 valign=top style='width:93.0pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:6.0pt;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Jupiter</span></b></p>
  </td>
  <td width=118 valign=top style='width:88.5pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Saturn</span></b></p>
  </td>
  <td width=142 valign=top style='width:106.5pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>69911</span></b></p>
  </td>
  <td width=136 valign=top style='width:102.0pt;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>58232</span></b></p>
  </td>
  <td width=96 valign=top style='width:1.0in;border:none;border-bottom:solid #DDDDDD 1.0pt;
  padding:5.95pt 5.75pt 0in 0in;height:46.5pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'><b><span
  style='font-size:15.0pt;line-height:107%;color:#555555'>Jupiter</span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:4.05pt;
margin-left:0in;text-indent:0in;line-height:107%'><b><span style='font-size:
15.0pt;line-height:107%;color:#555555'>Jupiter                Uranus           69911                  25362                 Jupiter</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.6pt;
margin-left:.75pt;text-indent:0in;line-height:107%'><span style='font-size:
11.0pt;line-height:107%'><img border=0 width=616 height=1 id="Group 45234"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image055.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.7pt;
margin-left:0in;text-indent:0in;line-height:107%'><b><span style='font-size:
15.0pt;line-height:107%;color:#555555'>Jupiter                Neptune         69911                  24622                 Jupiter</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.8pt;
margin-left:-.25pt;line-height:107%'><span style='font-size:12.5pt;line-height:
107%'>Table 14.1  How the reduce function returns the largest planet</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>The rst time we enter the callback method. acc is Mercury and
loc is venus. Looking at the radius values we can see that for this pass loc
radius is larger so we store venus. As we enter the second pass acc is now
Venus and loc is earth. Earth is larger so we store Earth as the acc, the
accumulator, value. Now we test Mars, this is smaller than Earth so we keep
Earth as the acc value. We move on to Jupiter, which is much bigger than Earth
so we now store Jupiter as the acc value. As we iterate through Saturn, Uranus
and Neptune, Jupiter is the largest, so Jupiter remains as the acc value. We
exit the method with largest set to Jupiter.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
.4pt;margin-left:.5pt'>function displayFacts(planets){</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:.5pt'>   const largest = planets.reduce( (acc, loc) =&gt;
acc.radius &gt; loc.radius ? acc : loc );</p>

<p class=MsoNormal style='margin-top:0in;margin-right:35.3pt;margin-bottom:
18.9pt;margin-left:.5pt'>   console.log(`The largest planet is
${largest.name}`); }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>Save and refresh youll see that Jupiter is the largest
planet. Nice.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.2pt;margin-bottom:18.8pt;
margin-left:0in;text-align:justify;text-justify:inter-ideograph;text-indent:
.25pt;line-height:111%'>Can you use a similar technique to display the smallest
planet? <span style='font-size:12.5pt;line-height:111%'>Youll need to adapt
the reduce method to save the planet with the smallest radius. </span>Put the
book down and give it a try.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:16.1pt;margin-bottom:
18.8pt;margin-left:0in;text-align:justify;text-justify:inter-ideograph;
text-indent:.25pt;line-height:111%'>How did that go? Just a case of copying the
existing code and changing greater than for less than. And changing largest to
smallest. Save and refresh and the answer is clearly Mercury. Nice work.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:19.25pt;margin-bottom:
18.9pt;margin-left:.5pt'>const smallest = planets.reduce( (acc, loc) =&gt;
acc.radius &lt; loc.radius ? acc : loc ); console.log(`The smallest planet is
${smallest.name}`);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>That completes your introduction to JavaScript. Youre ready
to start creating your rst web apps. Before you go a quick quiz to see what
you've learnt in the course.<br clear=all style='page-break-before:always'>
</p>

<h1 style='margin-left:.5pt'><a name="_Toc47035">15. What you've learnt</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:21.5pt'>1. If x=3 and y=4 what does x + y equal? </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>34 </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>7 </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.15pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>NaN </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.75pt;text-indent:-13.5pt'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>If str=This is a string. What is str.indexOf(string)? </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>11</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>10 </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.15pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>7</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:30.75pt;text-indent:-13.5pt;line-height:107%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span>Which answer would
return the sum of two numbers? </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>function add(a, b){ return a + b; } </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>function add(a, b){ a + b; }</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>function sum(a + b){ return result; }<br clear=all style='page-break-before:
always'>
</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.75pt;text-indent:-13.5pt'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>If a=1 and b=2. With this code snippet what gets printed to the console?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:30.75pt;text-indent:0in;line-height:107%'> </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>if (a&gt;b){ </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>   console.log('this'); </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>}else{ </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>   console.log('that'); </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>} </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.7pt;
margin-left:30.75pt;text-indent:0in;line-height:107%'> </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>that </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.15pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>this</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:37.5pt;text-indent:-19.5pt'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Which answer adds the string Pluto, to the array planets? </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>push(planets, Pluto)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>planets.push( Pluto)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.15pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>planets.add( Pluto )</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:37.5pt;text-indent:-19.5pt'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Which answer returns the strength property of the third NPC, from
thenpcs array?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>npcs[3][strength] </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>npcs.get(2).strength </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.15pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>npcs[0].strength </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:37.5pt;text-indent:-19.5pt'>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Which answer gives the correct syntax of a for loop?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>for(let i=0; i&lt;10; i++){}  </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>for(i=0, i&lt;10, i++){} </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.15pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>for i in range(0,10):</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:37.5pt;text-indent:-19.5pt'>8.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Which is the correct syntax for defining a class?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>class MyClass(){} </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>MyClass typeof class </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>class MyClass{} </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:37.5pt;text-indent:-19.5pt'>9.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span>Which answer would add the Point class from the file Point.js in
thecurrent folder?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>import ( Point ) from ./Point.js </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>import { Point } from Point </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:26.65pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>import { Point } from ./Point.js </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.25pt;
margin-left:37.5pt;text-indent:-19.5pt'>10.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Given the code snippet below, what gets printed in the consolefor(let
i=0; i&lt;10; i++){ </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:31.25pt'>       const n = i; </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:31.25pt'>} </p>

<p class=MsoNormal style='margin-top:0in;margin-right:306.15pt;margin-bottom:
.25pt;margin-left:31.25pt'>console.log(`n=${n}`); a) n=0  </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:.4pt;
margin-left:44.25pt;text-indent:-13.5pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>n=10 </p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:44.25pt;text-indent:-13.5pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>n is not de ned </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:37.5pt;text-indent:-19.5pt'>11.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>If a is at (2,4) and b is at (6,7). Which answer gives the distance from
a tob? </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Math.sqrt( (6-2)*(6-2) + (7-4)*(7-4) )  </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Math.sqrt( (6-2) + (7-4) ) </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.15pt;
margin-left:45.05pt;text-indent:-15.05pt'>c)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Math.length( (6-2), (7-4) )</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:37.5pt;text-indent:-19.5pt'>12.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span>Is this valid JSON? </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>{ </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>   array: [ 1, 2, buckle my shoe ], </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>   three: four, </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'>   knock: [ @, the, door ]</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:30.5pt'> } </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>Yes </p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:45.05pt;text-indent:-15.05pt'>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span>No </p>

</div>

<span style='font-size:12.0pt;line-height:110%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection3>

<h2 style='margin-left:.5pt'>Answers</h2>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:623.65pt;
margin-left:.5pt'>1-a, 2-b, 3-a, 4-a, 5-b, 6-c, 7-a, 8-c, 9-c, 10-c, 11-a, 12-b</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:223.05pt;
margin-bottom:0in;margin-left:0in;text-align:right;text-indent:0in;line-height:
107%'><span style='font-size:13.5pt;line-height:107%'>99</span></p>

<h1 style='margin-left:.5pt'><a name="_Toc47036">16. About the author</a></h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.6pt;
margin-left:129.75pt;text-indent:0in;line-height:107%'><img border=0 width=270
height=223 id="Picture 3372"
src="JavaScript%20in%2012%20Easy%20Lessons_files/image056.gif"></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:18.9pt;
margin-left:.5pt'>After getting a degree in Graphic Design, I started work in
1980 as a cartoon animator. Buying a Sinclair ZX81, back in 1982, was the start
of a migration to a full time programmer. The ZX81 was quickly swapped for the
Sinclair Spectrum, a Z80 processor and a massive 48K of ram made this a much
better computer to develop games. I developed a few games using Sinclair Basic
and then Assembler. The Spectrum was swapped for a Commodore Amiga and I
developed more games in the shareware market, moving to using C. At this stage
it was essentially a hobby. Paid work was still animated commercials. I nally
bought a PC in the early nineties and completed an Open University degree in
Maths and Computing. I created a sprite library ActiveX control and authored my
rst book, aimed at getting designers into programming. In the mid nineties
along came Flash and the company I was now running, Catalyst Pictures, became
known for creating games. Since then the majority of my working life has been
creating games, rst in Flash and Director, as Director published the rst widely
available 3D library that would run in a browser using a plugin. In recent
years game development has involved using HTML5 and Canvas. Using both custom
code and various libraries. A particular preference is to use the latest
version of Adobe Flash, now called Animate that exports to the Javascript
library Createjs.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:.75pt;margin-bottom:538.75pt;
margin-left:.5pt'> I've worked for the BBC. Johnson and Johnson. Deloitte, Mars
Corporation and many other blue chip clients. The company I've run for over 30
years has won a number of awards and been nominated for a BAFTA twice, the UK
equivalent to the Oscar. Over the last 20 years I have been struck by just how
di    cult it has been to get good developers and have decided to do something
about this rather than just complain. I run a CodeClub for kids 9-13 years old
and I'm developing a number of courses for Udemy hoping to inspire and educate
new developers. Most of my courses involve real-time 3d either using the
popular Open Source library Three.JS or Unity. I'm currently having a lot of
fun developing WebXR games and playing with my Oculus Quest.</p>

<h3 style='margin-right:.05pt'>102</h3>

</div>

<span style='font-size:12.0pt;line-height:110%;font-family:"Calibri",sans-serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection4>

<p class=MsoNormal style='margin-top:0in;margin-right:7.5in;margin-bottom:0in;
margin-left:-1.0in;text-indent:0in;line-height:107%'><img width=818 height=1
src="JavaScript%20in%2012%20Easy%20Lessons_files/image057.gif"><br clear=ALL>
</p>

</div>

</body>

</html>
