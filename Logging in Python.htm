<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<title>Logging HOWTO</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:5.65pt;
	margin-left:47.3pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-.5pt;
	line-height:108%;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;
	color:black;}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:5.35pt;
	margin-left:.5pt;
	text-indent:-.5pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:14.5pt;
	font-family:"Calibri",sans-serif;
	color:#20435C;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:0in;
	margin-right:0in;
	margin-bottom:3.65pt;
	margin-left:.5pt;
	text-indent:-.5pt;
	line-height:107%;
	page-break-after:avoid;
	font-size:12.0pt;
	font-family:"Calibri",sans-serif;
	color:#20435C;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Calibri",sans-serif;
	color:#20435C;
	font-weight:bold;}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Calibri",sans-serif;
	color:#20435C;
	font-weight:bold;}
.MsoChpDefault
	{font-size:12.0pt;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:115%;}
 /* Page Definitions */
 @page WordSection1
	{size:595.3pt 841.9pt;
	margin:1.0in 1.0in 75.9pt 1.0in;}
div.WordSection1
	{page:WordSection1;}
@page WordSection2
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 1.1in 1.0in;}
div.WordSection2
	{page:WordSection2;}
@page WordSection3
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 84.4pt 1.0in;}
div.WordSection3
	{page:WordSection3;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:17.95pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=603 height=1 id="Group 16989"
src="Logging%20HOWTO_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin:0in;text-align:right;text-indent:
0in;line-height:107%'><b><span style='font-size:25.0pt;line-height:107%;
font-family:"Calibri",sans-serif'>Logging HOWTO</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:0in;
margin-bottom:28.95pt;margin-left:0in;text-align:right;text-indent:0in;
line-height:107%'><b><i><span style='font-size:12.0pt;line-height:107%;
font-family:"Calibri",sans-serif'>Release 3.13.2</span></i></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:0in;
margin-bottom:25.6pt;margin-left:0in;text-align:right;text-indent:0in;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif'>Guido van Rossum and the Python development team</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:4.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>February 15, 2025</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Python Software Foundation</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:20.25pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Email: docs@python.org</span></b></p>

<h1 style='margin-top:0in;margin-right:0in;margin-bottom:3.8pt;margin-left:
-.25pt;text-indent:0in'>Contents</h1>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Basic Logging Tutorial              </span>2</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>When to use logging </span>. . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .   2</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>A simple example </span>. . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . .      3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Logging to a file </span>. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .      3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Logging variable data              </span>. . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .      4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Changing the format of displayed messages </span>. . . .
. . . . . . . . . . . . . . . . . . . . . . . . . .     4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Displaying the date/time in messages    </span>. . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . .        5</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Next Steps </span>. . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .          5</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Advanced Logging Tutorial     </span>5</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Logging Flow            </span>. . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             6</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Loggers       </span>. . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .       7</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Handlers </span>. . . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .           8</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Formatters </span>. . . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .          9</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Configuring Logging </span>. . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .   9</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>What happens if no configuration is provided </span>. . .
. . . . . . . . . . . . . . . . . . . . . . . . . .    12</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Configuring Logging for a Library        </span>. . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .      12</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Logging Levels            </span>13</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:22.9pt;text-align:left;text-indent:-22.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Custom Levels </span>. . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . .       14</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Useful Handlers           </span>14</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Exceptions raised during logging          </span>15</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Using arbitrary objects as messages      </span>15</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Optimization </span>15</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Other resources           </span>16</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><b><span style='color:#355F7C'>Index                                                                                                                                                                                         </span>17</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:22.4pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=603 height=1 id="Group 16990"
src="Logging%20HOWTO_files/image001.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:25.4pt;text-align:left;line-height:107%'><b>Author</b></p>

<p class=MsoNormal>Vinay Sajip &lt;vinay_sajip at red-dove dot com&gt;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>This page contains tutorial information. For links to
reference information and a logging cookbook, please see <i><span
style='color:#355F7C'>Other resources</span></i>.</p>

<h1 style='margin-left:.2in;text-indent:-15.15pt'><span style='line-height:
107%'>1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Basic
Logging Tutorial</h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>Logging is a means of tracking events that happen when some
software runs. The softwares developer adds logging calls to their code to
indicate that certain events have occurred. An event is described by a
descriptive message which can optionally contain variable data (i.e. data that
is potentially different for each occurrence of the event). Events also have an
importance which the developer ascribes to the event; the importance can also
be called the <i>level </i>or <i>severity</i>.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>1.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>When to use logging</h2>

<p class=MsoNormal style='margin-left:-.25pt'>You can access logging
functionality by creating a logger via <span style='font-size:9.0pt;line-height:
108%'>logger = getLogger(__name__)</span>, and then calling the loggers <span
style='font-size:9.0pt;line-height:108%'>debug()</span>, <span
style='font-size:9.0pt;line-height:108%'>info()</span>, <span style='font-size:
9.0pt;line-height:108%'>warning()</span>, <span style='font-size:9.0pt;
line-height:108%'>error() </span>and <span style='font-size:9.0pt;line-height:
108%'>critical() </span>methods. To determine when to use logging, and to see
which logger methods to use when, see the table below. It states, for each of a
set of common tasks, the best tool to use for that task.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=602
 style='width:451.5pt;margin-left:-.1pt;border-collapse:collapse'>
 <tr style='height:16.3pt'>
  <td width=186 valign=top style='width:139.4pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.95pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-family:"Calibri",sans-serif'>Task you
  want to perform</span></p>
  </td>
  <td width=416 valign=top style='width:312.05pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.95pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>The best
  tool for the task</span></p>
  </td>
 </tr>
 <tr style='height:38.45pt'>
  <td width=186 valign=top style='width:139.4pt;border:none;background:#EBEBEB;
  padding:.4pt 5.95pt 0in 6.0pt;height:38.45pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:.1pt;text-indent:0in;line-height:107%'>Display console output for
  ordinary usage of a command line script or program</p>
  </td>
  <td width=416 valign=top style='width:312.05pt;border:none;background:#EBEBEB;
  padding:.4pt 5.95pt 0in 6.0pt;height:38.45pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:9.0pt;line-height:107%'>print()</span></p>
  </td>
 </tr>
 <tr style='height:47.8pt'>
  <td width=186 valign=top style='width:139.4pt;background:#FAFAFA;padding:
  .4pt 5.95pt 0in 6.0pt;height:47.8pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.35pt;
  margin-left:.1pt;text-indent:0in;line-height:104%'>Report events that occur
  during normal operation of a program (e.g. for status monitoring or</p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>fault investigation)</p>
  </td>
  <td width=416 valign=top style='width:312.05pt;background:#FAFAFA;padding:
  .4pt 5.95pt 0in 6.0pt;height:47.8pt'>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'>A
  loggers <span style='font-size:9.0pt;line-height:107%'>info() </span>(or <span
  style='font-size:9.0pt;line-height:107%'>debug() </span>method for very
  detailed output for diagnostic purposes)</p>
  </td>
 </tr>
 <tr style='height:47.8pt'>
  <td width=186 valign=top style='width:139.4pt;background:#EBEBEB;padding:
  .4pt 5.95pt 0in 6.0pt;height:47.8pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:.1pt;text-indent:0in;line-height:107%'>Issue a warning regarding
  a particular runtime event</p>
  </td>
  <td width=416 valign=top style='width:312.05pt;background:#EBEBEB;padding:
  .4pt 5.95pt 0in 6.0pt;height:47.8pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
  margin-left:0in;text-indent:0in;line-height:105%'><span style='font-size:
  9.0pt;line-height:105%'>warnings.warn() </span>in library code if the issue
  is avoidable and the client application should be modified to eliminate the
  warning</p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'>A
  loggers <span style='font-size:9.0pt;line-height:107%'>warning() </span>method
  if there is nothing the client application can do about the situation, but
  the event should still be noted</p>
  </td>
 </tr>
 <tr style='height:23.9pt'>
  <td width=186 valign=top style='width:139.4pt;background:#FAFAFA;padding:
  .4pt 5.95pt 0in 6.0pt;height:23.9pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:.1pt;text-indent:0in;line-height:107%'>Report an error regarding
  a particular runtime event</p>
  </td>
  <td width=416 valign=top style='width:312.05pt;background:#FAFAFA;padding:
  .4pt 5.95pt 0in 6.0pt;height:23.9pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>Raise an exception</p>
  </td>
 </tr>
 <tr style='height:49.0pt'>
  <td width=186 valign=top style='width:139.4pt;border:none;border-bottom:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.95pt 0in 6.0pt;height:49.0pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:.1pt;text-indent:0in;line-height:107%'>Report suppression of an
  error without raising an exception (e.g. error handler in a long-running
  server process)</p>
  </td>
  <td width=416 valign=top style='width:312.05pt;border:none;border-bottom:
  solid black 1.0pt;background:#EBEBEB;padding:.4pt 5.95pt 0in 6.0pt;
  height:49.0pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>A loggers <span style='font-size:9.0pt;line-height:
  107%'>error()</span>, <span style='font-size:9.0pt;line-height:107%'>exception()
  </span>or <span style='font-size:9.0pt;line-height:107%'>critical() </span>method
  as appropriate for the specific error and application domain</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-left:-.25pt'>The logger methods are named
after the level or severity of the events they are used to track. The standard
levels and their applicability are described below (in increasing order of
severity):</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=601
 style='width:450.5pt;margin-left:.4pt;border-collapse:collapse'>
 <tr style='height:16.3pt'>
  <td width=74 valign=top style='width:55.4pt;border-top:#DBDBDB 3.0pt;
  border-left:black 1.0pt;border-bottom:#EBEBEB 3.0pt;border-right:black 1.0pt;
  border-style:solid;background:#DBDBDB;padding:.4pt 5.75pt 0in 6.2pt;
  height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>Level</span></p>
  </td>
  <td width=527 valign=top style='width:395.1pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:solid black 1.0pt;
  background:#DBDBDB;padding:.4pt 5.75pt 0in 6.2pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>When
  its used</span></p>
  </td>
 </tr>
 <tr style='height:14.55pt'>
  <td width=74 valign=top style='width:55.4pt;border-top:none;border-left:solid black 1.0pt;
  border-bottom:none;border-right:solid black 1.0pt;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.2pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:9.0pt;line-height:107%'>DEBUG</span></p>
  </td>
  <td width=527 valign=top style='width:395.1pt;border:none;border-right:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.75pt 0in 6.2pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>Detailed information, typically of interest only when
  diagnosing problems.</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=74 valign=top style='width:55.4pt;border-top:none;border-left:solid black 1.0pt;
  border-bottom:none;border-right:solid black 1.0pt;background:#FAFAFA;
  padding:.4pt 5.75pt 0in 6.2pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:9.0pt;line-height:107%'>INFO</span></p>
  </td>
  <td width=527 valign=top style='width:395.1pt;border:none;border-right:solid black 1.0pt;
  background:#FAFAFA;padding:.4pt 5.75pt 0in 6.2pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>Confirmation that things are working as expected.</p>
  </td>
 </tr>
 <tr style='height:23.9pt'>
  <td width=74 valign=top style='width:55.4pt;border-top:none;border-left:solid black 1.0pt;
  border-bottom:none;border-right:solid black 1.0pt;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.2pt;height:23.9pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:9.0pt;line-height:107%'>WARNING</span></p>
  </td>
  <td width=527 valign=top style='width:395.1pt;border:none;border-right:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.75pt 0in 6.2pt;height:23.9pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>An indication that something unexpected happened, or
  indicative of some problem in the near future (e.g. disk space low). The
  software is still working as expected.</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=74 valign=top style='width:55.4pt;border-top:none;border-left:solid black 1.0pt;
  border-bottom:none;border-right:solid black 1.0pt;background:#FAFAFA;
  padding:.4pt 5.75pt 0in 6.2pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:9.0pt;line-height:107%'>ERROR</span></p>
  </td>
  <td width=527 valign=top style='width:395.1pt;border:none;border-right:solid black 1.0pt;
  background:#FAFAFA;padding:.4pt 5.75pt 0in 6.2pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>Due to a more serious problem, the software has not
  been able to perform some function.</p>
  </td>
 </tr>
 <tr style='height:13.15pt'>
  <td width=74 valign=top style='width:55.4pt;border:solid black 1.0pt;
  border-top:none;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.2pt;height:13.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-size:9.0pt;line-height:107%'>CRITICAL</span></p>
  </td>
  <td width=527 valign=top style='width:395.1pt;border-top:none;border-left:
  none;border-bottom:solid black 1.0pt;border-right:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.75pt 0in 6.2pt;height:13.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>A serious error, indicating that the program itself may
  be unable to continue running.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-left:-.25pt'>The default level is <span
style='font-size:9.0pt;line-height:108%'>WARNING</span>, which means that only
events of this severity and higher will be tracked, unless the logging package
is configured to do otherwise.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Events that are tracked can be
handled in different ways. The simplest way of handling tracked events is to
print them to the console. Another common way is to write them to a disk file.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>1.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>A simple example</h2>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.35pt;
margin-left:-.25pt'>A very simple example is:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.2pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%;color:#007021'>import </span></b><b><span
style='font-size:9.0pt;line-height:107%;color:#0D85B5'>logging</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:13.9pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='position:relative;z-index:-1895825408'><span style='left:0px;position:
absolute;left:-5px;top:-22px;width:611px;height:57px'><img width=611 height=57
src="Logging%20HOWTO_files/image002.gif"></span></span><span style='font-size:
9.0pt;line-height:107%'>logging</span><span style='font-size:9.0pt;line-height:
107%;color:#666666'>.</span><span style='font-size:9.0pt;line-height:107%'>warning(</span><span
style='font-size:9.0pt;line-height:107%;color:#4070A1'>'Watch out!'</span><span
style='font-size:9.0pt;line-height:107%'>) </span><i><span style='font-size:
9.0pt;line-height:107%;color:#407F8F'># will print a message to the console </span></i><span
style='font-size:9.0pt;line-height:107%'>logging</span><span style='font-size:
9.0pt;line-height:107%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:107%'>info(</span><span style='font-size:9.0pt;line-height:107%;
color:#4070A1'>'I told you so'</span><span style='font-size:9.0pt;line-height:
107%'>) </span><i><span style='font-size:9.0pt;line-height:107%;color:#407F8F'>#
will not print anything</span></i></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If you type these lines into a script and run it, youll
see:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=611 height=25
src="Logging%20HOWTO_files/image003.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>printed out on the console. The <span
style='font-size:9.0pt;line-height:108%'>INFO </span>message doesnt appear
because the default level is <span style='font-size:9.0pt;line-height:108%'>WARNING</span>.
The printed message includes the indication of the level and the description of
the event provided in the logging call, i.e. Watch out!. The actual output
can be formatted quite flexibly if you need that; formatting options will also
be explained later.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>Notice that in this example, we use functions directly on
the <span style='font-size:9.0pt;line-height:108%'>logging </span>module, like <span
style='font-size:9.0pt;line-height:108%'>logging.debug</span>, rather than
creating a logger and calling functions on it. These functions operation on the
root logger, but can be useful as they will call <span style='font-size:9.0pt;
line-height:108%'>basicConfig() </span>for you if it has not been called yet,
like in this example. In larger programs youll usually want to control the
logging configuration explicitly however - so for that reason as well as
others, its better to create loggers and call their methods.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>1.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Logging to a file</h2>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.45pt;
margin-left:-.25pt'>A very common situation is that of recording logging events
in a file, so lets look at that next. Be sure to try the following in a newly
started Python interpreter, and dont just continue from the session described
above:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.2pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%;color:#007021'>import </span></b><b><span
style='font-size:9.0pt;line-height:107%;color:#0D85B5'>logging</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>logger </span><span style='font-size:
9.0pt;line-height:107%;color:#666666'>= </span><span style='font-size:9.0pt;
line-height:107%'>logging</span><span style='font-size:9.0pt;line-height:107%;
color:#666666'>.</span><span style='font-size:9.0pt;line-height:107%'>getLogger(</span><span
style='font-size:9.0pt;line-height:107%;color:#BA61D6'>__name__</span><span
style='font-size:9.0pt;line-height:107%'>)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>logging</span><span style='font-size:
9.0pt;line-height:107%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:107%'>basicConfig(filename</span><span style='font-size:9.0pt;
line-height:107%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:107%;color:#4070A1'>'example.log'</span><span style='font-size:
9.0pt;line-height:107%'>, encoding</span><span style='font-size:9.0pt;
line-height:107%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:107%;color:#4070A1'>'utf-8'</span><span style='font-size:9.0pt;
line-height:107%'>, level</span><span style='font-size:9.0pt;line-height:107%;
color:#666666'>=</span><span style='font-size:9.0pt;line-height:107%'>logging</span><span
style='font-size:9.0pt;line-height:107%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:107%'>DEBUG)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:106.25pt;
margin-bottom:.4pt;margin-left:-.25pt;text-align:left;line-height:111%'><span
style='font-size:9.0pt;line-height:111%'>logger</span><span style='font-size:
9.0pt;line-height:111%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:111%'>debug(</span><span style='font-size:9.0pt;line-height:111%;
color:#4070A1'>'This message should go to the log file'</span><span
style='font-size:9.0pt;line-height:111%'>)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:106.25pt;
margin-bottom:13.35pt;margin-left:-.25pt;text-align:left;line-height:111%'><span
style='position:relative;z-index:-1895824384'><span style='left:0px;position:
absolute;left:-5px;top:-70px;width:611px;height:121px'><img width=611
height=121 src="Logging%20HOWTO_files/image004.gif"></span></span><span
style='font-size:9.0pt;line-height:111%'>logger</span><span style='font-size:
9.0pt;line-height:111%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:111%'>info(</span><span style='font-size:9.0pt;line-height:111%;
color:#4070A1'>'So should this'</span><span style='font-size:9.0pt;line-height:
111%'>) logger</span><span style='font-size:9.0pt;line-height:111%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:111%'>warning(</span><span style='font-size:
9.0pt;line-height:111%;color:#4070A1'>'And this, too'</span><span
style='font-size:9.0pt;line-height:111%'>) logger</span><span style='font-size:
9.0pt;line-height:111%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:111%'>error(</span><span style='font-size:9.0pt;line-height:111%;
color:#4070A1'>'And non-ASCII stuff, too, like Øresund and Malmö'</span><span
style='font-size:9.0pt;line-height:111%'>)</span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Changed in version 3.9: The <i>encoding
</i>argument was added. In earlier Python versions, or if not specified, the
encoding used is the default value used by <span style='font-size:9.0pt;
line-height:108%'>open()</span>. While not shown in the above example, an <i>errors
</i>argument can also now be passed, which determines how encoding errors are
handled. For available values and the default, see the documentation for <span
style='font-size:9.0pt;line-height:108%'>open()</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.2pt;
margin-left:-.25pt'>And now if we open the file and look at what we have, we
should find the log messages:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>DEBUG:__main__:This message should go
to the log file</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>INFO:__main__:So should this</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>WARNING:__main__:And this, too</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:13.7pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='position:relative;z-index:-1895823360'><span style='left:0px;position:
absolute;left:-5px;top:-54px;width:611px;height:73px'><img width=611 height=73
src="Logging%20HOWTO_files/image005.gif"></span></span><span style='font-size:
9.0pt;line-height:107%'>ERROR:__main__:And non-ASCII stuff, too, like Øresund
and Malmö</span></p>

<p class=MsoNormal style='margin-left:-.25pt'>This example also shows how you
can set the logging level which acts as the threshold for tracking. In this
case, because we set the threshold to <span style='font-size:9.0pt;line-height:
108%'>DEBUG</span>, all of the messages were printed.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If you want to set the logging level from a command-line
option such as:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=611 height=25
src="Logging%20HOWTO_files/image006.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>and you have the value of the parameter passed for <span
style='font-size:9.0pt;line-height:108%'>--log </span>in some variable <i>loglevel</i>,
you can use:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=611 height=25
src="Logging%20HOWTO_files/image007.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>to get the value which youll
pass to <span style='font-size:9.0pt;line-height:108%'>basicConfig() </span>via
the <i>level </i>argument. You may want to error check any user input value,
perhaps as in the following example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.8pt;margin-left:-.25pt;text-align:left;line-height:107%'><i><span
style='font-size:9.0pt;line-height:107%;color:#407F8F'># assuming loglevel is
bound to the string value obtained from the</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.8pt;margin-left:-.25pt;text-align:left;line-height:107%'><i><span
style='font-size:9.0pt;line-height:107%;color:#407F8F'># command line argument.
Convert to upper case to allow the user to</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.8pt;margin-left:-.25pt;text-align:left;line-height:107%'><i><span
style='font-size:9.0pt;line-height:107%;color:#407F8F'># specify --log=DEBUG or
--log=debug</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:139.25pt;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='position:relative;z-index:-1895822336'><span style='left:0px;position:
absolute;left:-5px;top:-54px;width:611px;height:121px'><img width=611
height=121 src="Logging%20HOWTO_files/image004.gif"></span></span><span
style='font-size:9.0pt;line-height:107%'>numeric_level </span><span
style='font-size:9.0pt;line-height:107%;color:#666666'>= </span><span
style='font-size:9.0pt;line-height:107%;color:#007021'>getattr</span><span
style='font-size:9.0pt;line-height:107%'>(logging, loglevel</span><span
style='font-size:9.0pt;line-height:107%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:107%'>upper(), </span><b><span
style='font-size:9.0pt;line-height:107%;color:#007021'>None</span></b><span
style='font-size:9.0pt;line-height:107%'>) </span><b><span style='font-size:
9.0pt;line-height:107%;color:#007021'>if not </span></b><span style='font-size:
9.0pt;line-height:107%;color:#007021'>isinstance</span><span style='font-size:
9.0pt;line-height:107%'>(numeric_level, </span><span style='font-size:9.0pt;
line-height:107%;color:#007021'>int</span><span style='font-size:9.0pt;
line-height:107%'>):</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:106.25pt;
margin-bottom:.95pt;margin-left:22.0pt;text-align:left;line-height:111%'><b><span
style='font-size:9.0pt;line-height:111%;color:#007021'>raise </span></b><span
style='font-size:9.0pt;line-height:111%;color:#007021'>ValueError</span><span
style='font-size:9.0pt;line-height:111%'>(</span><span style='font-size:9.0pt;
line-height:111%;color:#4070A1'>'Invalid log level: </span><i><span
style='font-size:9.0pt;line-height:111%;color:#70A1D1'>%s</span></i><span
style='font-size:9.0pt;line-height:111%;color:#4070A1'>' </span><span
style='font-size:9.0pt;line-height:111%;color:#666666'>% </span><span
style='font-size:9.0pt;line-height:111%'>loglevel)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:14.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>logging</span><span style='font-size:
9.0pt;line-height:107%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:107%'>basicConfig(level</span><span style='font-size:9.0pt;
line-height:107%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:107%'>numeric_level, </span><span style='font-size:9.0pt;
line-height:107%;color:#666666'>...</span><span style='font-size:9.0pt;
line-height:107%'>)</span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The call to <span
style='font-size:9.0pt;line-height:108%'>basicConfig() </span>should come <i>before
</i>any calls to a loggers methods such as <span style='font-size:9.0pt;
line-height:108%'>debug()</span>, <span style='font-size:9.0pt;line-height:
108%'>info()</span>, etc. Otherwise, that logging event may not be handled in
the desired manner.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.2pt;
margin-left:-.25pt'>If you run the above script several times, the messages
from successive runs are appended to the file <i>example.log</i>. If you want
each run to start afresh, not remembering the messages from earlier runs, you
can specify the <i>filemode </i>argument, by changing the call in the above
example to:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:13.7pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='position:relative;z-index:-1895821312'><span style='left:0px;position:
absolute;left:-5px;top:-6px;width:611px;height:25px'><img width=611 height=25
src="Logging%20HOWTO_files/image008.gif"></span></span><span style='font-size:
9.0pt;line-height:107%'>logging</span><span style='font-size:9.0pt;line-height:
107%;color:#666666'>.</span><span style='font-size:9.0pt;line-height:107%'>basicConfig(filename</span><span
style='font-size:9.0pt;line-height:107%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:107%;color:#4070A1'>'example.log'</span><span
style='font-size:9.0pt;line-height:107%'>, filemode</span><span
style='font-size:9.0pt;line-height:107%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:107%;color:#4070A1'>'w'</span><span
style='font-size:9.0pt;line-height:107%'>, level</span><span style='font-size:
9.0pt;line-height:107%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:107%'>logging</span><span style='font-size:9.0pt;line-height:107%;
color:#666666'>.</span><span style='font-size:9.0pt;line-height:107%'>DEBUG)</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.3pt;
margin-left:-.25pt'>The output will be the same as before, but the log file is
no longer appended to, so the messages from earlier runs are lost.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>1.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Logging variable data</h2>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To log variable data, use a format string for the event
description message and append the variable data as arguments. For example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=611 height=41
src="Logging%20HOWTO_files/image009.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>will display:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=611 height=25
src="Logging%20HOWTO_files/image010.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>As you can see, merging of variable data into the event
description message uses the old, %-style of string formatting. This is for
backwards compatibility: the logging package pre-dates newer formatting options
such as <span style='font-size:9.0pt;line-height:108%'>str.format() </span>and <span
style='font-size:9.0pt;line-height:108%'>string.Template</span>. These newer
formatting options <i>are </i>supported, but exploring them is outside the
scope of this tutorial: see formatting-styles for more information.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>1.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Changing the format of displayed messages</h2>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.35pt;
margin-left:-.25pt'>To change the format which is used to display messages, you
need to specify the format you want to use:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.2pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%;color:#007021'>import </span></b><b><span
style='font-size:9.0pt;line-height:107%;color:#0D85B5'>logging</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>logging</span><span style='font-size:
9.0pt;line-height:107%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:107%'>basicConfig(</span><span style='font-size:9.0pt;line-height:
107%;color:#007021'>format</span><span style='font-size:9.0pt;line-height:107%;
color:#666666'>=</span><span style='font-size:9.0pt;line-height:107%;
color:#4070A1'>'</span><i><span style='font-size:9.0pt;line-height:107%;
color:#70A1D1'>%(levelname)s</span></i><span style='font-size:9.0pt;line-height:
107%;color:#4070A1'>:</span><i><span style='font-size:9.0pt;line-height:107%;
color:#70A1D1'>%(message)s</span></i><span style='font-size:9.0pt;line-height:
107%;color:#4070A1'>'</span><span style='font-size:9.0pt;line-height:107%'>,
level</span><span style='font-size:9.0pt;line-height:107%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:107%'>logging</span><span style='font-size:
9.0pt;line-height:107%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:107%'>DEBUG)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:139.25pt;
margin-bottom:13.35pt;margin-left:-.25pt;text-align:left;line-height:111%'><span
style='position:relative;z-index:-1895820288'><span style='left:0px;position:
absolute;left:-5px;top:-38px;width:611px;height:89px'><img width=611 height=89
src="Logging%20HOWTO_files/image011.gif"></span></span><span style='font-size:
9.0pt;line-height:111%'>logging</span><span style='font-size:9.0pt;line-height:
111%;color:#666666'>.</span><span style='font-size:9.0pt;line-height:111%'>debug(</span><span
style='font-size:9.0pt;line-height:111%;color:#4070A1'>'This message should
appear on the console'</span><span style='font-size:9.0pt;line-height:111%'>)
logging</span><span style='font-size:9.0pt;line-height:111%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:111%'>info(</span><span style='font-size:
9.0pt;line-height:111%;color:#4070A1'>'So should this'</span><span
style='font-size:9.0pt;line-height:111%'>) logging</span><span
style='font-size:9.0pt;line-height:111%;color:#666666'>.</span><span
style='font-size:9.0pt;line-height:111%'>warning(</span><span style='font-size:
9.0pt;line-height:111%;color:#4070A1'>'And this, too'</span><span
style='font-size:9.0pt;line-height:111%'>)</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>which would print:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=611 height=57
src="Logging%20HOWTO_files/image012.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Notice that the root which
appeared in earlier examples has disappeared. For a full set of things that can
appear in format strings, you can refer to the documentation for
logrecord-attributes, but for simple usage, you just need the <i>levelname </i>(severity),
<i>message </i>(event description, including variable data) and perhaps to
display when the event occurred. This is described in the next section.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>1.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Displaying the date/time in messages</h2>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To display the date and time of an event, you would place
%(asctime)s in your format string:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=611 height=57
src="Logging%20HOWTO_files/image013.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>which should print something like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=611 height=25
src="Logging%20HOWTO_files/image014.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.15pt;
margin-left:-.25pt'>The default format for date/time display (shown above) is
like ISO8601 or <a href="https://datatracker.ietf.org/doc/html/rfc3339.html"><b><span
style='color:#377063;text-decoration:none'>RFC 3339</span></b></a>. If you need
more control over the formatting of the date/time, provide a <i>datefmt </i>argument
to <span style='font-size:9.0pt;line-height:108%'>basicConfig</span>, as in
this example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Logging%20HOWTO_files/image015.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>which would display something like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Logging%20HOWTO_files/image016.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.7pt;
margin-left:-.25pt'>The format of the <i>datefmt </i>argument is the same as
supported by <span style='font-size:9.0pt;line-height:108%'>time.strftime()</span>.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>1.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Next Steps</h2>

<p class=MsoNormal style='margin-left:-.25pt'>That concludes the basic
tutorial. It should be enough to get you up and running with logging. Theres a
lot more that the logging package offers, but to get the best out of it, youll
need to invest a little more of your time in reading the following sections. If
youre ready for that, grab some of your favourite beverage and carry on.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If your logging needs are simple,
then use the above examples to incorporate logging into your own scripts, and
if you run into problems or dont understand something, please post a question
on the comp.lang.python Usenet group (available at <a
href="https://groups.google.com/g/comp.lang.python"><span style='color:#377063;
text-decoration:none'>https://groups.google.com/g/comp.lang.python</span></a>)
and you should receive help before too long.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>Still here? You can carry on reading the next few sections,
which provide a slightly more advanced/in-depth tutorial than the basic one
above. After that, you can take a look at the logging-cookbook.</p>

<h1 style='margin-left:.2in;text-indent:-15.15pt'><span style='line-height:
107%'>2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Advanced
Logging Tutorial</h1>

<p class=MsoNormal style='margin-left:-.25pt'>The logging library takes a
modular approach and offers several categories of components: loggers,
handlers, filters, and formatters.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Loggers expose the interface that application code directly uses.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Handlers send the log records (created by loggers) to the
appropriate destination.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Filters provide a finer grained facility for determining which
log records to output.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Formatters specify the layout of log records in the final output.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Log event information is passed
between loggers, handlers, filters and formatters in a <span style='font-size:
9.0pt;line-height:108%'>LogRecord </span>instance.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Logging is performed by calling
methods on instances of the <span style='font-size:9.0pt;line-height:108%'>Logger
</span>class (hereafter called <i>loggers</i>). Each instance has a name, and
they are conceptually arranged in a namespace hierarchy using dots (periods) as
separators. For example, a logger named scan is the parent of loggers
scan.text, scan.html and scan.pdf. Logger names can be anything you want,
and indicate the area of an application in which a logged message originates.</p>

<p class=MsoNormal style='margin-left:-.25pt'>A good convention to use when
naming loggers is to use a module-level logger, in each module which uses
logging, named as follows:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Logging%20HOWTO_files/image017.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>This means that logger names
track the package/module hierarchy, and its intuitively obvious where events
are logged just from the logger name.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The root of the hierarchy of
loggers is called the root logger. Thats the logger used by the functions <span
style='font-size:9.0pt;line-height:108%'>debug()</span>, <span
style='font-size:9.0pt;line-height:108%'>info()</span>, <span style='font-size:
9.0pt;line-height:108%'>warning()</span>, <span style='font-size:9.0pt;
line-height:108%'>error() </span>and <span style='font-size:9.0pt;line-height:
108%'>critical()</span>, which just call the same-named method of the root
logger. The functions and the methods have the same signatures. The root
loggers name is printed as root in the logged output.</p>

<p class=MsoNormal style='margin-left:-.25pt'>It is, of course, possible to log
messages to different destinations. Support is included in the package for
writing log messages to files, HTTP GET/POST locations, email via SMTP, generic
sockets, queues, or OS-specific logging mechanisms such as syslog or the
Windows NT event log. Destinations are served by <i>handler </i>classes. You
can create your own log destination class if you have special requirements not
met by any of the built-in handler classes.</p>

<p class=MsoNormal style='margin-left:-.25pt'>By default, no destination is set
for any logging messages. You can specify a destination (such as console or
file) by using <span style='font-size:9.0pt;line-height:108%'>basicConfig() </span>as
in the tutorial examples. If you call the functions <span style='font-size:
9.0pt;line-height:108%'>debug()</span>, <span style='font-size:9.0pt;
line-height:108%'>info()</span>, <span style='font-size:9.0pt;line-height:108%'>warning()</span>,
<span style='font-size:9.0pt;line-height:108%'>error() </span>and <span
style='font-size:9.0pt;line-height:108%'>critical()</span>, they will check to
see if no destination is set; and if one is not set, they will set a
destination of the console (<span style='font-size:9.0pt;line-height:108%'>sys.stderr</span>)
and a default format for the displayed message before delegating to the root
logger to do the actual message output.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The default format set by <span style='font-size:9.0pt;
line-height:108%'>basicConfig() </span>for messages is:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Logging%20HOWTO_files/image018.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>You can change this by passing a format string to <span
style='font-size:9.0pt;line-height:108%'>basicConfig() </span>with the <i>format
</i>keyword argument. For all options regarding how a format string is
constructed, see formatter-objects.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>2.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Logging Flow</h2>

<p class=MsoNormal style='margin-left:-.25pt'>The flow of log event information
in loggers and handlers is illustrated in the following diagram.<br clear=all
style='page-break-before:always'>
</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:18.95pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><img border=0 width=601 height=628 id="Picture 860"
src="Logging%20HOWTO_files/image019.jpg"></p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>2.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Loggers</h2>

<p class=MsoNormal style='margin-left:-.25pt'><span style='font-size:9.0pt;
line-height:108%'>Logger </span>objects have a threefold job. First, they
expose several methods to application code so that applications can log
messages at runtime. Second, logger objects determine which log messages to act
upon based upon severity (the default filtering facility) or filter objects.
Third, logger objects pass along relevant log messages to all interested log
handlers.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The most widely used methods on
logger objects fall into two categories: configuration and message sending.</p>

<p class=MsoNormal style='margin-left:-.25pt'>These are the most common
configuration methods:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>Logger.setLevel() </span>specifies
the lowest-severity log message a logger will handle, where debug is the lowest
built-in severity level and critical is the highest built-in severity. For
example, if the severity level is INFO, the logger will handle only INFO,
WARNING, ERROR, and CRITICAL messages and will ignore DEBUG messages.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>Logger.addHandler()
</span>and <span style='font-size:9.0pt;line-height:108%'>Logger.removeHandler()
</span>add and remove handler objects from the logger object. Handlers are
covered in more detail in <i><span style='color:#355F7C'>Handlers</span></i>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:5.45pt;
margin-left:24.9pt;text-indent:-8.95pt;line-height:107%'><span
style='line-height:107%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:107%'>Logger.addFilter()
</span>and <span style='font-size:9.0pt;line-height:107%'>Logger.removeFilter()
</span>add and remove filter objects from the logger object. Filters are
covered in more detail in filter.</p>

<p class=MsoNormal style='margin-left:-.25pt'>You dont need to always call
these methods on every logger you create. See the last two paragraphs in this
section.</p>

<p class=MsoNormal style='margin-left:-.25pt'>With the logger object
configured, the following methods create log messages:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>Logger.debug()</span>,
<span style='font-size:9.0pt;line-height:108%'>Logger.info()</span>, <span
style='font-size:9.0pt;line-height:108%'>Logger.warning()</span>, <span
style='font-size:9.0pt;line-height:108%'>Logger.error()</span>, and <span
style='font-size:9.0pt;line-height:108%'>Logger. critical() </span>all create
log records with a message and a level that corresponds to their respective
method names. The message is actually a format string, which may contain the
standard string substitution syntax of <span style='font-size:9.0pt;line-height:
108%'>%s</span>, <span style='font-size:9.0pt;line-height:108%'>%d</span>, <span
style='font-size:9.0pt;line-height:108%'>%f</span>, and so on. The rest of
their arguments is a list of objects that correspond with the substitution
fields in the message. With regard to <span style='font-size:9.0pt;line-height:
108%'>**kwargs</span>, the logging methods care only about a keyword of <span
style='font-size:9.0pt;line-height:108%'>exc_info </span>and use it to
determine whether to log exception information.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>Logger.exception()
</span>creates a log message similar to <span style='font-size:9.0pt;
line-height:108%'>Logger.error()</span>. The difference is that <span
style='font-size:9.0pt;line-height:108%'>Logger. exception() </span>dumps a
stack trace along with it. Call this method only from an exception handler.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>Logger.log() </span>takes
a log level as an explicit argument. This is a little more verbose for logging
messages than using the log level convenience methods listed above, but this is
how to log at custom log levels.</p>

<p class=MsoNormal style='margin-left:-.25pt'><span style='font-size:9.0pt;
line-height:108%'>getLogger() </span>returns a reference to a logger instance
with the specified name if it is provided, or <span style='font-size:9.0pt;
line-height:108%'>root </span>if not. The names are period-separated
hierarchical structures. Multiple calls to <span style='font-size:9.0pt;
line-height:108%'>getLogger() </span>with the same name will return a reference
to the same logger object. Loggers that are further down in the hierarchical
list are children of loggers higher up in the list. For example, given a logger
with a name of <span style='font-size:9.0pt;line-height:108%'>foo</span>,
loggers with names of <span style='font-size:9.0pt;line-height:108%'>foo.bar</span>,
<span style='font-size:9.0pt;line-height:108%'>foo.bar.baz</span>, and <span
style='font-size:9.0pt;line-height:108%'>foo.bam </span>are all descendants of <span
style='font-size:9.0pt;line-height:108%'>foo</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Loggers have a concept of <i>effective
level</i>. If a level is not explicitly set on a logger, the level of its
parent is used instead as its effective level. If the parent has no explicit
level set, <i>its </i>parent is examined, and so on - all ancestors are
searched until an explicitly set level is found. The root logger always has an
explicit level set (<span style='font-size:9.0pt;line-height:108%'>WARNING </span>by
default). When deciding whether to process an event, the effective level of the
logger is used to determine whether the event is passed to the loggers
handlers.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.7pt;
margin-left:-.25pt'>Child loggers propagate messages up to the handlers
associated with their ancestor loggers. Because of this, it is unnecessary to
define and configure handlers for all the loggers an application uses. It is
sufficient to configure handlers for a top-level logger and create child
loggers as needed. (You can, however, turn off propagation by setting the <i>propagate
</i>attribute of a logger to <span style='font-size:9.0pt;line-height:108%'>False</span>.)</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>2.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Handlers</h2>

<p class=MsoNormal style='margin-left:-.25pt'><span style='font-size:9.0pt;
line-height:108%'>Handler </span>objects are responsible for dispatching the
appropriate log messages (based on the log messages severity) to the handlers
specified destination. <span style='font-size:9.0pt;line-height:108%'>Logger </span>objects
can add zero or more handler objects to themselves with an <span
style='font-size:9.0pt;line-height:108%'>addHandler() </span>method. As an
example scenario, an application may want to send all log messages to a log
file, all log messages of error or higher to stdout, and all messages of
critical to an email address. This scenario requires three individual handlers
where each handler is responsible for sending messages of a specific severity
to a specific location.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The standard library includes
quite a few handler types (see <i><span style='color:#355F7C'>Useful Handlers</span></i>);
the tutorials use mainly <span style='font-size:9.0pt;line-height:108%'>StreamHandler
</span>and <span style='font-size:9.0pt;line-height:108%'>FileHandler </span>in
its examples.</p>

<p class=MsoNormal style='margin-left:-.25pt'>There are very few methods in a
handler for application developers to concern themselves with. The only handler
methods that seem relevant for application developers who are using the
built-in handler objects (that is, not creating custom handlers) are the
following configuration methods:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The <span style='font-size:9.0pt;line-height:108%'>setLevel() </span>method,
just as in logger objects, specifies the lowest severity that will be
dispatched to the appropriate destination. Why are there two <span
style='font-size:9.0pt;line-height:108%'>setLevel() </span>methods? The level
set in the logger determines which severity of messages it will pass to its
handlers. The level set in each handler determines which messages that handler
will send on.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>setFormatter() </span>selects
a Formatter object for this handler to use.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>addFilter() </span>and
<span style='font-size:9.0pt;line-height:108%'>removeFilter() </span>respectively
configure and deconfigure filter objects on handlers.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Application code should not
directly instantiate and use instances of <span style='font-size:9.0pt;
line-height:108%'>Handler</span>. Instead, the <span style='font-size:9.0pt;
line-height:108%'>Handler </span>class is a base class that defines the
interface that all handlers should have and establishes some default behavior
that child classes can use (or override).</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection2>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>2.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Formatters</h2>

<p class=MsoNormal style='margin-left:-.25pt'>Formatter objects configure the
final order, structure, and contents of the log message. Unlike the base <span
style='font-size:9.0pt;line-height:108%'>logging. Handler </span>class,
application code may instantiate formatter classes, although you could likely
subclass the formatter if your application needs special behavior. The
constructor takes three optional arguments  a message format string, a date
format string and a style indicator.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.4pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>logging.Formatter.<b>__init__</b>(</span><i>fmt=None</i>,
<i>datefmt=None</i>, <i>style=%</i><span style='font-size:9.0pt;line-height:
107%'>)</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If there is no message format string, the default is to use
the raw message. If there is no date format string, the default date format is:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Logging%20HOWTO_files/image020.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>with the milliseconds tacked on
at the end. The <span style='font-size:9.0pt;line-height:108%'>style </span>is
one of <span style='font-size:9.0pt;line-height:108%'>'%'</span>, <span
style='font-size:9.0pt;line-height:108%'>'{'</span>, or <span style='font-size:
9.0pt;line-height:108%'>'$'</span>. If one of these is not specified, then <span
style='font-size:9.0pt;line-height:108%'>'%' </span>will be used.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If the <span style='font-size:
9.0pt;line-height:108%'>style </span>is <span style='font-size:9.0pt;
line-height:108%'>'%'</span>, the message format string uses <span
style='font-size:9.0pt;line-height:108%'>%(&lt;dictionary key&gt;)s </span>styled
string substitution; the possible keys are documented in logrecord-attributes.
If the style is <span style='font-size:9.0pt;line-height:108%'>'{'</span>, the
message format string is assumed to be compatible with <span style='font-size:
9.0pt;line-height:108%'>str.format() </span>(using keyword arguments), while if
the style is <span style='font-size:9.0pt;line-height:108%'>'$' </span>then the
message format string should conform to what is expected by <span
style='font-size:9.0pt;line-height:108%'>string.Template.substitute()</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Changed in version 3.2: Added the
<span style='font-size:9.0pt;line-height:108%'>style </span>parameter.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The following message format string will log the time in a
human-readable format, the severity of the message, and the contents of the
message, in that order:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Logging%20HOWTO_files/image021.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.15pt;
margin-left:-.25pt'>Formatters use a user-configurable function to convert the
creation time of a record to a tuple. By default, <span style='font-size:9.0pt;
line-height:108%'>time. localtime() </span>is used; to change this for a
particular formatter instance, set the <span style='font-size:9.0pt;line-height:
108%'>converter </span>attribute of the instance to a function with the same
signature as <span style='font-size:9.0pt;line-height:108%'>time.localtime() </span>or
<span style='font-size:9.0pt;line-height:108%'>time.gmtime()</span>. To change
it for all formatters, for example if you want all logging times to be shown in
GMT, set the <span style='font-size:9.0pt;line-height:108%'>converter </span>attribute
in the Formatter class (to <span style='font-size:9.0pt;line-height:108%'>time.gmtime
</span>for GMT display).</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>2.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Configuring Logging</h2>

<p class=MsoNormal style='margin-left:-.25pt'>Programmers can configure logging
in three ways:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Creating loggers, handlers, and formatters explicitly using
Python code that calls the configuration methods listed above.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Creating a logging config file and reading it using the <span
style='font-size:9.0pt;line-height:108%'>fileConfig() </span>function.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Creating a dictionary of configuration information and passing it
to the <span style='font-size:9.0pt;line-height:108%'>dictConfig() </span>function.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>For the reference documentation on the last two options,
see logging-config-api. The following example configures a very simple logger,
a console handler, and a simple formatter using Python code:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=612 height=232
src="Logging%20HOWTO_files/image022.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=200
src="Logging%20HOWTO_files/image023.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.6pt;
margin-left:-.25pt'>Running this module from the command line produces the
following output:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%;color:#C75C0A'>$ </span></b><span
style='font-size:9.0pt;line-height:107%'>python simple_logging_module.py</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:10:26,618
- simple_example - DEBUG - debug message</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:10:26,620
- simple_example - INFO - info message</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:10:26,695
- simple_example - WARNING - warn message</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:10:26,697
- simple_example - ERROR - error message</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:14.05pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='position:relative;z-index:-1895819264'><span style='left:0px;position:
absolute;left:-5px;top:-85px;width:611px;height:105px'><img width=611
height=105 src="Logging%20HOWTO_files/image024.gif"></span></span><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:10:26,773
- simple_example - CRITICAL - critical message</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The following Python module creates a logger, handler, and
formatter nearly identical to those in the example listed above, with the only
difference being the names of the objects:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=232
src="Logging%20HOWTO_files/image025.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Here is the logging.conf file:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=248
src="Logging%20HOWTO_files/image026.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=200
src="Logging%20HOWTO_files/image027.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.35pt;
margin-left:-.25pt'>The output is nearly identical to that of the
non-config-file-based example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%;color:#C75C0A'>$ </span></b><span
style='font-size:9.0pt;line-height:107%'>python simple_logging_config.py</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:38:55,977
- simpleExample - DEBUG - debug message</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:38:55,979
- simpleExample - INFO - info message</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:38:56,054
- simpleExample - WARNING - warn message</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:38:56,055
- simpleExample - ERROR - error message</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:14.05pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='position:relative;z-index:-1895818240'><span style='left:0px;position:
absolute;left:-5px;top:-85px;width:611px;height:105px'><img width=611
height=105 src="Logging%20HOWTO_files/image028.gif"></span></span><span
style='font-size:9.0pt;line-height:107%;color:#333333'>2005-03-19 15:38:56,130
- simpleExample - CRITICAL - critical message</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:3.95pt;
margin-left:-.25pt'>

<table cellpadding=0 cellspacing=0>
 <tr>
  <td width=91 height=0></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=611 height=56 src="Logging%20HOWTO_files/image029.gif"></td>
 </tr>
</table>

<br clear=ALL>
You can see that the config file approach has a few advantages over the Python
code approach, mainly separation of configuration and code and the ability of
noncoders to easily modify the logging properties.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=600
 style='width:450.3pt;margin-left:.5pt;border-collapse:collapse'>
 <tr style='height:20.95pt'>
  <td width=600 valign=top style='width:450.3pt;border:solid #940000 1.0pt;
  border-bottom:none;background:#F8E4D2;padding:6.15pt 6.95pt 0in 6.95pt;
  height:20.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='color:#DD7A21'>Á </span><b>Warning</b></p>
  </td>
 </tr>
 <tr style='height:124.15pt'>
  <td width=600 style='width:450.3pt;border:solid #940000 1.0pt;border-top:
  none;background:#F7F7F7;padding:6.15pt 6.95pt 0in 6.95pt;height:124.15pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:6.1pt;
  margin-left:0in;text-indent:0in;line-height:107%'>The <span style='font-size:
  9.0pt;line-height:107%'>fileConfig() </span>function takes a default
  parameter, <span style='font-size:9.0pt;line-height:107%'>disable_existing_loggers</span>,
  which defaults to <span style='font-size:9.0pt;line-height:107%'>True </span>for
  reasons of backward compatibility. This may or may not be what you want,
  since it will cause any non-root loggers existing before the <span
  style='font-size:9.0pt;line-height:107%'>fileConfig() </span>call to be
  disabled unless they (or an ancestor) are explicitly named in the
  configuration. Please refer to the reference documentation for more
  information, and specify <span style='font-size:9.0pt;line-height:107%'>False
  </span>for this parameter if you wish.</p>
  <p class=MsoNormal style='margin:0in;text-indent:0in;line-height:107%'>The
  dictionary passed to <span style='font-size:9.0pt;line-height:107%'>dictConfig()
  </span>can also specify a Boolean value with key <span style='font-size:9.0pt;
  line-height:107%'>disable_existing_loggers</span>, which if not specified
  explicitly in the dictionary also defaults to being interpreted as <span
  style='font-size:9.0pt;line-height:107%'>True</span>. This leads to the
  logger-disabling behaviour described above, which may not be what you want -
  in which case, provide the key explicitly with a value of <span
  style='font-size:9.0pt;line-height:107%'>False</span>.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-left:-.25pt'>Note that the class names
referenced in config files need to be either relative to the logging module, or
absolute values which can be resolved using normal import mechanisms. Thus, you
could use either <span style='font-size:9.0pt;line-height:108%'>WatchedFileHandler
</span>(relative to the logging module) or <span style='font-size:9.0pt;
line-height:108%'>mypackage.mymodule.MyHandler </span>(for a class defined in
package <span style='font-size:9.0pt;line-height:108%'>mypackage </span>and
module <span style='font-size:9.0pt;line-height:108%'>mymodule</span>, where <span
style='font-size:9.0pt;line-height:108%'>mypackage </span>is available on the
Python import path).</p>

<p class=MsoNormal style='margin-left:-.25pt'>In Python 3.2, a new means of
configuring logging has been introduced, using dictionaries to hold
configuration information. This provides a superset of the functionality of the
config-file-based approach outlined above, and is the recommended configuration
method for new applications and deployments. Because a Python dictionary is
used to hold configuration information, and since you can populate that
dictionary using different means, you have more options for configuration. For
example, you can use a configuration file in JSON format, or, if you have
access to YAML processing functionality, a file in YAML format, to populate the
configuration dictionary. Or, of course, you can construct the dictionary in
Python code, receive it in pickled form over a socket, or use whatever approach
makes sense for your application.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Heres an example of the same
configuration as above, in YAML format for the new dictionary-based approach:</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection3>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=248
src="Logging%20HOWTO_files/image030.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>For more information about logging using a dictionary, see
logging-config-api.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>2.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>What happens if no configuration is provided</h2>

<p class=MsoNormal style='margin-left:-.25pt'>If no logging configuration is
provided, it is possible to have a situation where a logging event needs to be
output, but no handlers can be found to output the event.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The event is output using a
handler of last resort, stored in <span style='font-size:9.0pt;line-height:
108%'>lastResort</span>. This internal handler is not associated with any
logger, and acts like a <span style='font-size:9.0pt;line-height:108%'>StreamHandler
</span>which writes the event description message to the current value of <span
style='font-size:9.0pt;line-height:108%'>sys.stderr </span>(therefore
respecting any redirections which may be in effect). No formatting is done on
the message - just the bare event description message is printed. The handlers
level is set to <span style='font-size:9.0pt;line-height:108%'>WARNING</span>,
so all events at this and greater severities will be output.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Changed in version 3.2: For
versions of Python prior to 3.2, the behaviour is as follows:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>If <span style='font-size:9.0pt;line-height:108%'>raiseExceptions
</span>is <span style='font-size:9.0pt;line-height:108%'>False </span>(production
mode), the event is silently dropped.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>If <span style='font-size:9.0pt;line-height:108%'>raiseExceptions
</span>is <span style='font-size:9.0pt;line-height:108%'>True </span>(development
mode), a message No handlers could be found for logger X.Y.Z is printed once.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.7pt;
margin-left:-.25pt'>To obtain the pre-3.2 behaviour, <span style='font-size:
9.0pt;line-height:108%'>lastResort </span>can be set to <span style='font-size:
9.0pt;line-height:108%'>None</span>.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>2.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Configuring Logging for a Library</h2>

<p class=MsoNormal style='margin-left:-.25pt'>When developing a library which
uses logging, you should take care to document how the library uses logging for
example, the names of loggers used. Some consideration also needs to be given
to its logging configuration. If the using application does not use logging,
and library code makes logging calls, then (as described in the previous
section) events of severity <span style='font-size:9.0pt;line-height:108%'>WARNING
</span>and greater will be printed to <span style='font-size:9.0pt;line-height:
108%'>sys.stderr</span>. This is regarded as the best default behaviour.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If for some reason you <i>dont </i>want
these messages printed in the absence of any logging configuration, you can
attach a do-nothing handler to the top-level logger for your library. This
avoids the message being printed, since a handler will always be found for the
librarys events: it just doesnt produce any output. If the library user
configures logging for application use, presumably that configuration will add
some handlers, and if levels are suitably configured then logging calls made in
library code will send output to those handlers, as normal.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
margin-left:-.25pt'>A do-nothing handler is included in the logging package: <span
style='font-size:9.0pt;line-height:108%'>NullHandler </span>(since Python 3.1).
An instance of this handler could be added to the top-level logger of the
logging namespace used by the library (<i>if </i>you want to prevent your
librarys logged events being output to <span style='font-size:9.0pt;
line-height:108%'>sys.stderr </span>in the absence of logging configuration).
If all logging by a library <i>foo </i>is done using loggers with names
matching foo.x, foo.x.y, etc. then the code:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Logging%20HOWTO_files/image031.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:20.05pt;
margin-left:-.25pt'>should have the desired effect. If an organisation produces
a number of libraries, then the logger name specified can be orgname.foo
rather than just foo.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.8pt;margin-left:.1in;text-align:left;line-height:107%'><span
style='color:#145DEA'>® </span><b>Note</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.5pt;margin-bottom:33.4pt;
margin-left:7.95pt'><span style='position:relative;z-index:-1895816192'><span
style='left:0px;position:absolute;left:0px;top:-35px;width:602px;height:105px'><img
width=602 height=105 src="Logging%20HOWTO_files/image032.gif"></span></span>It
is strongly advised that you <i>do not log to the root logger </i>in your
library. Instead, use a logger with a unique and easily identifiable name, such
as the <span style='font-size:9.0pt;line-height:108%'>__name__ </span>for your
librarys top-level package or module. Logging to the root logger will make it
difficult or impossible for the application developer to configure the logging
verbosity or handlers of your library as they wish.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.8pt;margin-left:.1in;text-align:left;line-height:107%'><span
style='color:#145DEA'>® </span><b>Note</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.5pt;margin-bottom:30.05pt;
margin-left:7.95pt'><span style='position:relative;z-index:-1895815168'><span
style='left:0px;position:absolute;left:0px;top:-35px;width:602px;height:121px'><img
width=602 height=121 src="Logging%20HOWTO_files/image033.gif"></span></span>It
is strongly advised that you <i>do not add any handlers other than </i><span
style='font-size:9.0pt;line-height:108%'>NullHandler </span><i>to your
librarys loggers</i>. This is because the configuration of handlers is the
prerogative of the application developer who uses your library. The application
developer knows their target audience and what handlers are most appropriate
for their application: if you add handlers under the hood, you might well
interfere with their ability to carry out unit tests and deliver logs which
suit their requirements.</p>

<h1 style='margin-left:.2in;text-indent:-15.15pt'><span style='line-height:
107%'>3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Logging
Levels</h1>

<p class=MsoNormal style='margin-left:-.25pt'>The numeric values of logging
levels are given in the following table. These are primarily of interest if you
want to define your own levels, and need them to have specific values relative
to the predefined levels. If you define a level with the same numeric value, it
overwrites the predefined value; the predefined name is lost.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=172
 style='width:128.65pt;margin-left:161.3pt;border-collapse:collapse'>
 <tr style='height:16.3pt'>
  <td width=73 valign=top style='width:55.1pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.75pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-family:"Calibri",sans-serif'>Level</span></p>
  </td>
  <td width=98 valign=top style='width:73.55pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.75pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>Numeric
  value</span></p>
  </td>
 </tr>
 <tr style='height:14.55pt'>
  <td width=73 valign=top style='width:55.1pt;border:none;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.0pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>CRITICAL</span></p>
  </td>
  <td width=98 valign=top style='width:73.55pt;border:none;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.0pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>50</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=73 valign=top style='width:55.1pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>ERROR</span></p>
  </td>
  <td width=98 valign=top style='width:73.55pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>40</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=73 valign=top style='width:55.1pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>WARNING</span></p>
  </td>
  <td width=98 valign=top style='width:73.55pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>30</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=73 valign=top style='width:55.1pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>INFO</span></p>
  </td>
  <td width=98 valign=top style='width:73.55pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>20</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=73 valign=top style='width:55.1pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>DEBUG</span></p>
  </td>
  <td width=98 valign=top style='width:73.55pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>10</p>
  </td>
 </tr>
 <tr style='height:13.15pt'>
  <td width=73 valign=top style='width:55.1pt;border:none;border-bottom:solid black 1.0pt;
  background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;height:13.15pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>NOTSET</span></p>
  </td>
  <td width=98 valign=top style='width:73.55pt;border:none;border-bottom:solid black 1.0pt;
  background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;height:13.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>0</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-left:-.25pt'>Levels can also be associated
with loggers, being set either by the developer or through loading a saved
logging configuration. When a logging method is called on a logger, the logger
compares its own level with the level associated with the method call. If the
loggers level is higher than the method calls, no logging message is actually
generated. This is the basic mechanism controlling the verbosity of logging
output.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Logging messages are encoded as
instances of the <span style='font-size:9.0pt;line-height:108%'>LogRecord </span>class.
When a logger decides to actually log an event, a <span style='font-size:9.0pt;
line-height:108%'>LogRecord </span>instance is created from the logging
message.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Logging messages are subjected to
a dispatch mechanism through the use of <i>handlers</i>, which are instances of
subclasses of the <span style='font-size:9.0pt;line-height:108%'>Handler </span>class.
Handlers are responsible for ensuring that a logged message (in the form of a <span
style='font-size:9.0pt;line-height:108%'>LogRecord</span>) ends up in a
particular location (or set of locations) which is useful for the target
audience for that message (such as end users, support desk staff, system
administrators, developers). Handlers are passed <span style='font-size:9.0pt;
line-height:108%'>LogRecord </span>instances intended for particular
destinations. Each logger can have zero, one or more handlers associated with
it (via the <span style='font-size:9.0pt;line-height:108%'>addHandler() </span>method
of <span style='font-size:9.0pt;line-height:108%'>Logger</span>). In addition
to any handlers directly associated with a logger, <i>all handlers associated
with all ancestors of the logger </i>are called to dispatch the message (unless
the <i>propagate </i>flag for a logger is set to a false value, at which point
the passing to ancestor handlers stops).</p>

<p class=MsoNormal style='margin-left:-.25pt'>Just as for loggers, handlers can
have levels associated with them. A handlers level acts as a filter in the
same way as a loggers level does. If a handler decides to actually dispatch an
event, the <span style='font-size:9.0pt;line-height:108%'>emit() </span>method
is used to send the message to its destination. Most user-defined subclasses of
<span style='font-size:9.0pt;line-height:108%'>Handler </span>will need to
override this <span style='font-size:9.0pt;line-height:108%'>emit()</span>.</p>

<h2 style='margin-left:21.5pt;text-indent:-22.25pt'>3.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span>Custom Levels</h2>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>Defining your own levels is possible, but should not be
necessary, as the existing levels have been chosen on the basis of practical
experience. However, if you are convinced that you need custom levels, great
care should be exercised when doing this, and it is possibly <i>a very bad idea
to define custom levels if you are developing a library</i>. Thats because if
multiple library authors all define their own custom levels, there is a chance
that the logging output from such multiple libraries used together will be
difficult for the using developer to control and/or interpret, because a given
numeric value might mean different things for different libraries.</p>

<h1 style='margin-left:.2in;text-indent:-15.15pt'><span style='line-height:
107%'>4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Useful
Handlers</h1>

<p class=MsoNormal style='margin-left:-.25pt'>In addition to the base <span
style='font-size:9.0pt;line-height:108%'>Handler </span>class, many useful
subclasses are provided:</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>StreamHandler </span>instances
send messages to streams (file-like objects).</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>FileHandler </span>instances
send messages to disk files.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>BaseRotatingHandler
</span>is the base class for handlers that rotate log files at a certain point.
It is not meant to be instantiated directly. Instead, use <span
style='font-size:9.0pt;line-height:108%'>RotatingFileHandler </span>or <span
style='font-size:9.0pt;line-height:108%'>TimedRotatingFileHandler</span>.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>4.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>RotatingFileHandler
</span>instances send messages to disk files, with support for maximum log file
sizes and log file rotation.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>TimedRotatingFileHandler
</span>instances send messages to disk files, rotating the log file at certain
timed intervals.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>6.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>SocketHandler </span>instances
send messages to TCP/IP sockets. Since 3.4, Unix domain sockets are also
supported.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>7.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>DatagramHandler </span>instances
send messages to UDP sockets. Since 3.4, Unix domain sockets are also
supported.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>8.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>SMTPHandler </span>instances
send messages to a designated email address.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>9.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>SysLogHandler </span>instances
send messages to a Unix syslog daemon, possibly on a remote machine.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>10.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>NTEventLogHandler </span>instances
send messages to a Windows NT/2000/XP event log.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>11.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>MemoryHandler </span>instances
send messages to a buffer in memory, which is flushed whenever specific
criteria are met.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>12.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>HTTPHandler </span>instances
send messages to an HTTP server using either <span style='font-size:9.0pt;
line-height:108%'>GET </span>or <span style='font-size:9.0pt;line-height:108%'>POST
</span>semantics.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>13.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>WatchedFileHandler
</span>instances watch the file they are logging to. If the file changes, it is
closed and reopened using the file name. This handler is only useful on
Unix-like systems; Windows does not support the underlying mechanism used.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>14.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>QueueHandler </span>instances
send messages to a queue, such as those implemented in the <span
style='font-size:9.0pt;line-height:108%'>queue </span>or <span
style='font-size:9.0pt;line-height:108%'>multiprocessing </span>modules.</p>

<p class=MsoNormal style='margin-left:29.9pt;text-indent:-17.45pt'><span
style='line-height:108%'>15.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>NullHandler </span>instances
do nothing with error messages. They are used by library developers who want to
use logging, but want to avoid the No handlers could be found for logger <i>XXX</i>
message which can be displayed if the library user has not configured logging.
See <i><span style='color:#355F7C'>Configuring Logging for a Library </span></i>for
more information.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Added in version 3.1: The <span
style='font-size:9.0pt;line-height:108%'>NullHandler </span>class.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Added in version 3.2: The <span
style='font-size:9.0pt;line-height:108%'>QueueHandler </span>class.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The <span style='font-size:9.0pt;
line-height:108%'>NullHandler</span>, <span style='font-size:9.0pt;line-height:
108%'>StreamHandler </span>and <span style='font-size:9.0pt;line-height:108%'>FileHandler
</span>classes are defined in the core logging package. The other handlers are
defined in a sub-module, <span style='font-size:9.0pt;line-height:108%'>logging.handlers</span>.
(There is also another sub-module, <span style='font-size:9.0pt;line-height:
108%'>logging.config</span>, for configuration functionality.)</p>

<p class=MsoNormal style='margin-left:-.25pt'>Logged messages are formatted for
presentation through instances of the <span style='font-size:9.0pt;line-height:
108%'>Formatter </span>class. They are initialized with a format string
suitable for use with the % operator and a dictionary.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For formatting multiple messages
in a batch, instances of <span style='font-size:9.0pt;line-height:108%'>BufferingFormatter
</span>can be used. In addition to the format string (which is applied to each
message in the batch), there is provision for header and trailer format
strings.</p>

<p class=MsoNormal style='margin-left:-.25pt'>When filtering based on logger
level and/or handler level is not enough, instances of <span style='font-size:
9.0pt;line-height:108%'>Filter </span>can be added to both <span
style='font-size:9.0pt;line-height:108%'>Logger </span>and <span
style='font-size:9.0pt;line-height:108%'>Handler </span>instances (through
their <span style='font-size:9.0pt;line-height:108%'>addFilter() </span>method).
Before deciding to process a message further, both loggers and handlers consult
all their filters for permission. If any filter returns a false value, the
message is not processed further.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>The basic <span style='font-size:9.0pt;line-height:108%'>Filter
</span>functionality allows filtering by specific logger name. If this feature
is used, messages sent to the named logger and its children are allowed through
the filter, and all others dropped.</p>

<h1 style='margin-left:.2in;text-indent:-15.15pt'><span style='line-height:
107%'>5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Exceptions
raised during logging</h1>

<p class=MsoNormal style='margin-left:-.25pt'>The logging package is designed
to swallow exceptions which occur while logging in production. This is so that
errors which occur while handling logging events - such as logging
misconfiguration, network or other similar errors - do not cause the application
using logging to terminate prematurely.</p>

<p class=MsoNormal style='margin-left:-.25pt'><span style='font-size:9.0pt;
line-height:108%'>SystemExit </span>and <span style='font-size:9.0pt;
line-height:108%'>KeyboardInterrupt </span>exceptions are never swallowed.
Other exceptions which occur during the <span style='font-size:9.0pt;
line-height:108%'>emit() </span>method of a <span style='font-size:9.0pt;
line-height:108%'>Handler </span>subclass are passed to its <span
style='font-size:9.0pt;line-height:108%'>handleError() </span>method.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:3.45pt;
margin-left:-.25pt'>The default implementation of <span style='font-size:9.0pt;
line-height:108%'>handleError() </span>in <span style='font-size:9.0pt;
line-height:108%'>Handler </span>checks to see if a module-level variable, <span
style='font-size:9.0pt;line-height:108%'>raiseExceptions</span>, is set. If
set, a traceback is printed to <span style='font-size:9.0pt;line-height:108%'>sys.stderr</span>.
If not set, the exception is swallowed.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:22.15pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=89
src="Logging%20HOWTO_files/image034.gif"></span></p>

<h1 style='margin-left:.2in;text-indent:-15.15pt'><span style='line-height:
107%'>6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Using
arbitrary objects as messages</h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>In the preceding sections and examples, it has been assumed
that the message passed when logging the event is a string. However, this is
not the only possibility. You can pass an arbitrary object as a message, and
its <span style='font-size:9.0pt;line-height:108%'>__str__() </span>method will
be called when the logging system needs to convert it to a string
representation. In fact, if you want to, you can avoid computing a string
representation altogether - for example, the <span style='font-size:9.0pt;
line-height:108%'>SocketHandler </span>emits an event by pickling it and
sending it over the wire.</p>

<h1 style='margin-left:.2in;text-indent:-15.15pt'><span style='line-height:
107%'>7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Optimization</h1>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Formatting of message arguments is deferred until it cannot
be avoided. However, computing the arguments passed to the logging method can
also be expensive, and you may want to avoid doing it if the logger will just
throw away your event. To decide what to do, you can call the <span
style='font-size:9.0pt;line-height:108%'>isEnabledFor() </span>method which
takes a level argument and returns true if the event would be created by the
Logger for that level of call. You can write code like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.3pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Logging%20HOWTO_files/image035.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:19.95pt;
margin-left:-.25pt'>so that if the loggers threshold is set above <span
style='font-size:9.0pt;line-height:108%'>DEBUG</span>, the calls to <span
style='font-size:9.0pt;line-height:108%'>expensive_func1 </span>and <span
style='font-size:9.0pt;line-height:108%'>expensive_func2 </span>are never made.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.8pt;margin-left:.1in;text-align:left;line-height:107%'><span
style='color:#145DEA'>® </span><b>Note</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.5pt;margin-bottom:5.65pt;
margin-left:7.95pt'><span style='position:relative;z-index:-1895814144'><span
style='left:0px;position:absolute;left:0px;top:-36px;width:602px;height:121px'><img
width=602 height=121 src="Logging%20HOWTO_files/image036.gif"></span></span>In
some cases, <span style='font-size:9.0pt;line-height:108%'>isEnabledFor() </span>can
itself be more expensive than youd like (e.g. for deeply nested loggers where
an explicit level is only set high up in the logger hierarchy). In such cases
(or if you want to avoid calling a method in tight loops), you can cache the
result of a call to <span style='font-size:9.0pt;line-height:108%'>isEnabledFor()
</span>in a local or instance variable, and use that instead of calling the
method each time. Such a cached value would only need to be recomputed when the
logging configuration changes dynamically while the application is running
(which is not all that common).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'>There are other optimizations which can be made for specific
applications which need more precise control over what logging information is
collected. Heres a list of things you can do to avoid processing during
logging which you dont need:</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=602
 style='width:451.5pt;margin-left:-.1pt;border-collapse:collapse'>
 <tr style='height:16.3pt'>
  <td width=186 valign=top style='width:139.2pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.95pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-family:"Calibri",sans-serif'>What you
  dont want to collect</span></p>
  </td>
  <td width=416 valign=top style='width:312.3pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.95pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>How to
  avoid collecting it</span></p>
  </td>
 </tr>
 <tr style='height:38.45pt'>
  <td width=186 valign=top style='width:139.2pt;border:none;background:#EBEBEB;
  padding:.4pt 5.95pt 0in 6.0pt;height:38.45pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:.1pt;text-indent:0in;line-height:107%'>Information about where
  calls were made from.</p>
  </td>
  <td width=416 valign=top style='width:312.3pt;border:none;background:#EBEBEB;
  padding:.4pt 5.95pt 0in 6.0pt;height:38.45pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:.1pt;margin-bottom:
  0in;margin-left:0in;text-indent:0in;line-height:107%'>Set <span
  style='font-size:9.0pt;line-height:107%'>logging._srcfile </span>to <span
  style='font-size:9.0pt;line-height:107%'>None</span>. This avoids calling <span
  style='font-size:9.0pt;line-height:107%'>sys._getframe()</span>, which may
  help to speed up your code in environments like PyPy (which cant speed up
  code that uses <span style='font-size:9.0pt;line-height:107%'>sys._getframe()</span>).</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=186 valign=top style='width:139.2pt;background:#FAFAFA;padding:
  .4pt 5.95pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>Threading information.</p>
  </td>
  <td width=416 valign=top style='width:312.3pt;background:#FAFAFA;padding:
  .4pt 5.95pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>Set <span style='font-size:9.0pt;line-height:107%'>logging.logThreads
  </span>to <span style='font-size:9.0pt;line-height:107%'>False</span>.</p>
  </td>
 </tr>
 <tr style='height:23.9pt'>
  <td width=186 valign=top style='width:139.2pt;background:#EBEBEB;padding:
  .4pt 5.95pt 0in 6.0pt;height:23.9pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>Current  process   ID            (<span style='font-size:
  9.0pt;line-height:107%'>os. getpid()</span>)</p>
  </td>
  <td width=416 valign=top style='width:312.3pt;background:#EBEBEB;padding:
  .4pt 5.95pt 0in 6.0pt;height:23.9pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>Set <span style='font-size:9.0pt;line-height:107%'>logging.logProcesses
  </span>to <span style='font-size:9.0pt;line-height:107%'>False</span>.</p>
  </td>
 </tr>
 <tr style='height:35.85pt'>
  <td width=186 valign=top style='width:139.2pt;background:#FAFAFA;padding:
  .4pt 5.95pt 0in 6.0pt;height:35.85pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:.1pt;text-indent:0in;line-height:107%'>Current process name when
  using <span style='font-size:9.0pt;line-height:107%'>multiprocessing </span>to
  manage multiple processes.</p>
  </td>
  <td width=416 valign=top style='width:312.3pt;background:#FAFAFA;padding:
  .4pt 5.95pt 0in 6.0pt;height:35.85pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>Set <span style='font-size:9.0pt;line-height:107%'>logging.logMultiprocessing
  </span>to <span style='font-size:9.0pt;line-height:107%'>False</span>.</p>
  </td>
 </tr>
 <tr style='height:25.1pt'>
  <td width=186 valign=top style='width:139.2pt;border:none;border-bottom:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.95pt 0in 6.0pt;height:25.1pt'>
  <p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
  margin-left:.1pt;text-indent:0in;line-height:107%'>Current <span
  style='font-size:9.0pt;line-height:107%'>asyncio.Task </span>name when using <span
  style='font-size:9.0pt;line-height:107%'>asyncio</span>.</p>
  </td>
  <td width=416 valign=top style='width:312.3pt;border:none;border-bottom:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.95pt 0in 6.0pt;height:25.1pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>Set <span style='font-size:9.0pt;line-height:107%'>logging.logAsyncioTasks
  </span>to <span style='font-size:9.0pt;line-height:107%'>False</span>.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.8pt;
margin-left:-.25pt'>Also note that the core logging module only includes the
basic handlers. If you dont import <span style='font-size:9.0pt;line-height:
108%'>logging.handlers </span>and <span style='font-size:9.0pt;line-height:
108%'>logging.config</span>, they wont take up any memory.</p>

<h1 style='margin-top:0in;margin-right:0in;margin-bottom:.75pt;margin-left:
.2in;text-indent:-15.15pt'><span style='line-height:107%'>8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span>Other
resources</h1>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=601
 style='width:450.8pt;margin-left:.25pt;border-collapse:collapse'>
 <tr style='height:20.15pt'>
  <td width=601 valign=top style='width:450.8pt;border:solid #86989B 1.0pt;
  border-bottom:none;background:#DCEFE6;padding:5.45pt 5.75pt 0in .1in;
  height:20.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='color:#51AE80'>µ </span><b>See also</b></p>
  </td>
 </tr>
 <tr style='height:113.45pt'>
  <td width=601 style='width:450.8pt;border:solid #86989B 1.0pt;border-top:
  none;background:#F7F7F7;padding:5.45pt 5.75pt 0in .1in;height:113.45pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><b>Module </b><b><span style='font-size:9.0pt;
  line-height:107%'>logging</span></b></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:6.2pt;margin-left:24.9pt;text-align:left;text-indent:0in;
  line-height:107%'>API reference for the logging module.</p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:.05pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'><b>Module </b><b><span style='font-size:9.0pt;line-height:
  107%'>logging.config</span></b></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:6.2pt;margin-left:24.9pt;text-align:left;text-indent:0in;
  line-height:107%'>Configuration API for the logging module.</p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:.05pt;margin-left:0in;text-align:left;text-indent:0in;
  line-height:107%'><b>Module </b><b><span style='font-size:9.0pt;line-height:
  107%'>logging.handlers</span></b></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:5.45pt;margin-left:24.9pt;text-align:left;text-indent:0in;
  line-height:107%'>Useful handlers included with the logging module.</p>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>A logging cookbook</p>
  </td>
 </tr>
</table>

<h1 style='margin-top:0in;margin-right:0in;margin-bottom:7.25pt;margin-left:
-.25pt;text-indent:0in'>Index</h1>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>Non-alphabetical</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>__init__() </span>(<i>logging.logging.Formatter
method</i>), <span style='color:#355F7C'>9</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>R</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>RFC</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.95pt;margin-left:20.45pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>RFC 3339</span>, <span
style='color:#355F7C'>5</span></p>

</div>

</body>

</html>
