<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 15 (filtered)">
<title>Python Frequently Asked Questions</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Helvetica;
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:Courier;
	panose-1:2 7 4 9 2 2 5 2 4 4;}
@font-face
	{font-family:"Tms Rmn";
	panose-1:2 2 6 3 4 5 5 2 3 4;}
@font-face
	{font-family:Helv;
	panose-1:2 11 6 4 2 2 2 3 2 4;}
@font-face
	{font-family:"New York";
	panose-1:2 4 5 3 6 5 6 2 3 4;}
@font-face
	{font-family:System;
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"MS Mincho";
	panose-1:2 2 6 9 4 2 5 8 3 4;}
@font-face
	{font-family:Batang;
	panose-1:2 3 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:SimSun;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:PMingLiU;
	panose-1:2 1 6 1 0 1 1 1 1 1;}
@font-face
	{font-family:"MS Gothic";
	panose-1:2 11 6 9 7 2 5 8 2 4;}
@font-face
	{font-family:Dotum;
	panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:SimHei;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:MingLiU;
	panose-1:2 1 6 9 0 1 1 1 1 1;}
@font-face
	{font-family:Mincho;
	panose-1:2 2 6 9 4 3 5 8 3 5;}
@font-face
	{font-family:Gulim;
	panose-1:2 11 6 0 0 1 1 1 1 1;}
@font-face
	{font-family:Century;
	panose-1:2 4 6 4 5 5 5 2 3 4;}
@font-face
	{font-family:"Angsana New";
	panose-1:2 2 6 3 5 4 5 2 3 4;}
@font-face
	{font-family:"Cordia New";
	panose-1:2 11 3 4 2 2 2 2 2 4;}
@font-face
	{font-family:Mangal;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Latha;
	panose-1:2 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Sylfaen;
	panose-1:1 10 5 2 5 3 6 3 3 3;}
@font-face
	{font-family:Vrinda;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Raavi;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Shruti;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Sendnya;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:Gautami;
	panose-1:2 0 5 0 0 0 0 0 0 0;}
@font-face
	{font-family:Tunga;
	panose-1:0 0 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Estrangelo Edessa";
	panose-1:0 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:"Yu Gothic";
	panose-1:2 11 4 0 0 0 0 0 0 0;}
@font-face
	{font-family:DengXian;
	panose-1:2 1 6 0 3 1 1 1 1 1;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Calibri Light";
	panose-1:2 15 3 2 2 2 4 3 2 4;}
@font-face
	{font-family:"Palatino Linotype";
	panose-1:2 4 5 2 5 5 5 3 3 4;}
@font-face
	{font-family:Verdana;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"Arial Unicode MS";
	panose-1:2 11 6 4 2 2 2 2 2 4;}
@font-face
	{font-family:"Aptos Display";}
@font-face
	{font-family:Aptos;}
@font-face
	{font-family:"Segoe UI Emoji";
	panose-1:2 11 5 2 4 2 4 2 2 3;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0in;
	margin-right:0in;
	margin-bottom:5.65pt;
	margin-left:.5pt;
	text-align:justify;
	text-justify:inter-ideograph;
	text-indent:-.5pt;
	line-height:108%;
	font-size:10.0pt;
	font-family:"Times New Roman",serif;
	color:black;}
span.msoIns
	{mso-style-name:"";
	text-decoration:underline;
	color:#65B4B4;}
span.msoDel
	{mso-style-name:"";
	text-decoration:line-through;
	color:#FF4B4B;}
.MsoChpDefault
	{font-size:12.0pt;}
.MsoPapDefault
	{margin-bottom:8.0pt;
	line-height:115%;}
 /* Page Definitions */
 @page WordSection1
	{size:595.3pt 841.9pt;
	margin:1.0in 1.0in 1.0in 85.8pt;}
div.WordSection1
	{page:WordSection1;}
@page WordSection2
	{size:595.3pt 841.9pt;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection2
	{page:WordSection2;}
@page WordSection3
	{size:595.3pt 841.9pt;
	margin:74.0pt 1.0in 40.1pt 1.0in;}
div.WordSection3
	{page:WordSection3;}
@page WordSection4
	{size:595.3pt 841.9pt;
	margin:35.55pt 1.0in 40.1pt 1.0in;}
div.WordSection4
	{page:WordSection4;}
@page WordSection5
	{size:595.3pt 841.9pt;
	margin:74.0pt 1.0in 40.1pt 1.0in;}
div.WordSection5
	{page:WordSection5;}
@page WordSection6
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 70.0pt 1.0in;}
div.WordSection6
	{page:WordSection6;}
@page WordSection7
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 40.1pt 1.0in;}
div.WordSection7
	{page:WordSection7;}
@page WordSection8
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 1.05in 1.0in;}
div.WordSection8
	{page:WordSection8;}
@page WordSection9
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 79.3pt 1.0in;}
div.WordSection9
	{page:WordSection9;}
@page WordSection10
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 40.1pt 1.0in;}
div.WordSection10
	{page:WordSection10;}
@page WordSection11
	{size:595.3pt 841.9pt;
	margin:73.1pt 1.0in 40.1pt 1.0in;}
div.WordSection11
	{page:WordSection11;}
@page WordSection12
	{size:595.3pt 841.9pt;
	margin:73.1pt 1.0in 28.15pt 1.0in;}
div.WordSection12
	{page:WordSection12;}
@page WordSection13
	{size:595.3pt 841.9pt;
	margin:74.0pt 1.0in 40.1pt 1.0in;}
div.WordSection13
	{page:WordSection13;}
@page WordSection14
	{size:595.3pt 841.9pt;
	margin:35.55pt 1.0in 40.1pt 1.0in;}
div.WordSection14
	{page:WordSection14;}
@page WordSection15
	{size:595.3pt 841.9pt;
	margin:91.9pt 1.0in 40.1pt 1.0in;}
div.WordSection15
	{page:WordSection15;}
@page WordSection16
	{size:595.3pt 841.9pt;
	margin:74.0pt 1.0in 40.1pt 1.0in;}
div.WordSection16
	{page:WordSection16;}
@page WordSection17
	{size:595.3pt 841.9pt;
	margin:74.0pt 1.0in 70.1pt 1.0in;}
div.WordSection17
	{page:WordSection17;}
@page WordSection18
	{size:595.3pt 841.9pt;
	margin:91.9pt 1.0in 40.1pt 1.0in;}
div.WordSection18
	{page:WordSection18;}
@page WordSection19
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 40.1pt 1.0in;}
div.WordSection19
	{page:WordSection19;}
@page WordSection20
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 72.15pt 1.0in;}
div.WordSection20
	{page:WordSection20;}
@page WordSection21
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 117.8pt 1.0in;}
div.WordSection21
	{page:WordSection21;}
@page WordSection22
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 1.1in 1.0in;}
div.WordSection22
	{page:WordSection22;}
@page WordSection23
	{size:595.3pt 841.9pt;
	margin:72.4pt 1.0in 72.15pt 1.0in;}
div.WordSection23
	{page:WordSection23;}
@page WordSection24
	{size:595.3pt 841.9pt;
	margin:91.9pt 1.0in 40.1pt 1.0in;}
div.WordSection24
	{page:WordSection24;}
@page WordSection25
	{size:595.3pt 841.9pt;
	margin:74.65pt 1.0in 40.1pt 1.0in;}
div.WordSection25
	{page:WordSection25;}
@page WordSection26
	{size:595.3pt 841.9pt;
	margin:1.0in 1.0in 1.0in 1.0in;}
div.WordSection26
	{page:WordSection26;}
 /* List Definitions */
 ol
	{margin-bottom:0in;}
ul
	{margin-bottom:0in;}
-->
</style>

</head>

<body lang=EN-US style='word-wrap:break-word'>

<div class=WordSection1>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:28.5pt;margin-left:-13.8pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=603 height=1 id="Group 116969"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:15.9pt;text-align:left;text-indent:0in;
line-height:107%'><b><span style='font-size:25.0pt;line-height:107%;font-family:
"Calibri",sans-serif'>Python Frequently Asked Questions</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:.05pt;
margin-bottom:137.25pt;margin-left:0in;text-align:right;text-indent:0in;
line-height:107%'><b><i><span style='font-size:17.0pt;line-height:107%;
font-family:"Calibri",sans-serif'>Release 3.13.2</span></i></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:263.65pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><b><span style='font-size:17.0pt;line-height:107%;font-family:
"Calibri",sans-serif'>Guido van Rossum and the Python development team</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:137.7pt;margin-left:242.7pt;text-align:right;line-height:95%'><b><span
style='font-size:12.0pt;line-height:95%;font-family:"Calibri",sans-serif'>February
15, 2025</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:34.8pt;margin-left:242.7pt;text-align:right;line-height:95%'><b><span
style='font-size:12.0pt;line-height:95%;font-family:"Calibri",sans-serif'>Python
Software Foundation Email: docs@python.org</span></b></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection2>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:107%'>&nbsp;</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection3>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:71.5pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>CONTENTS</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>General Python FAQ  </span>1</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>1.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>General Information           </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .      1</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is Python? </span>. . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             1</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is the Python Software
Foundation?     </span>. . . . . . . . . . . . . . . . . . . . . . . . .          1</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Are there copyright restrictions on
the use of Python? </span>. . . . . . . . . . . . . . . . . . .       1</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why was Python created in the first
place?    </span>. . . . . . . . . . . . . . . . . . . . . . . . .          1</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is Python good for? </span>. . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .       2</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How does the Python version numbering
scheme work?             </span>. . . . . . . . . . . . . . . . . .         2</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I obtain a copy of the Python
source?               </span>. . . . . . . . . . . . . . . . . . . . . . .              3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I get documentation on Python?        </span>.
. . . . . . . . . . . . . . . . . . . . . . . . .       3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.9<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Ive never programmed before. Is
there a Python tutorial?         </span>. . . . . . . . . . . . . . . . .           3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.10<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Is there a newsgroup or mailing list devoted to Python? </span>.
. . . . . . . . . . . . . . . . . .    3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.11<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How do I get a beta test version of Python? </span>. . .
. . . . . . . . . . . . . . . . . . . . . .            3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.12<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How do I submit bug reports and patches for Python? </span>.
. . . . . . . . . . . . . . . . . .       3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.13<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Are there any published articles about Python that I can
reference?          </span>. . . . . . . . . . . .       3</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.14<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Are there any books on Python?       </span>. . . . . . .
. . . . . . . . . . . . . . . . . . . . . . .               4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.15<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Where in the world is www.python.org located?           </span>.
. . . . . . . . . . . . . . . . . . . . . 4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.16<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why is it called Python? </span>. . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .       4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.1.17<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Do I have to like Monty Pythons Flying Circus?      </span>.
. . . . . . . . . . . . . . . . . . . .   4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>1.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Python in the real world     </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.2.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How stable is Python? </span>. . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .         4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.2.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How many people are using Python?               </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . .   4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.2.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Have any significant projects been
done in Python? </span>. . . . . . . . . . . . . . . . . . . . .       4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.2.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What new developments are expected
for Python in the future? </span>. . . . . . . . . . . . . .  4</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.2.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Is it reasonable to propose
incompatible changes to Python?     </span>. . . . . . . . . . . . . . . .              5</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>1.2.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Is Python a good language for
beginning programmers?             </span>. . . . . . . . . . . . . . . . . .         5</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Programming FAQ     </span>7</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>2.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>General Questions               </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.    7</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.1.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Is there a source code level debugger
with breakpoints, single-stepping, etc.?        </span>. . . . . . .  7</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.1.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Are there tools to help find bugs or
perform static analysis?      </span>. . . . . . . . . . . . . . . .              7</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.1.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How can I create a stand-alone binary
from a Python script? </span>. . . . . . . . . . . . . . . .  7</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.1.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Are there coding standards or a style
guide for Python programs?             </span>. . . . . . . . . . . . .    8</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>2.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Core Language    </span>. . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .               8</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why am I getting an UnboundLocalError
when the variable has a value?               </span>. . . . . . . . .             8</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What are the rules for local and
global variables in Python?      </span>. . . . . . . . . . . . . . . .              9</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why do lambdas defined in a loop with
different values all return the same result? </span>. . . . .   9</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I share global variables
across modules?         </span>. . . . . . . . . . . . . . . . . . . . . . 10</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What are the best practices for
using import in a module?      </span>. . . . . . . . . . . . . . . .              10</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why are default values shared between
objects?           </span>. . . . . . . . . . . . . . . . . . . . . . 11</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How can I pass optional or keyword
parameters from one function to another?     </span>. . . . . .    12</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is the difference between
arguments and parameters?        </span>. . . . . . . . . . . . . . . .              12</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.9<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why did changing list y also change
list x?               </span>. . . . . . . . . . . . . . . . . . . . . . . .            12</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.10<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How do I write a function with output parameters (call by
reference)? </span>. . . . . . . . . . .            13</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.11<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How do you make a higher order function in Python? </span>.
. . . . . . . . . . . . . . . . . .       14</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.12<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How do I copy an object in Python? </span>. . . . . . . .
. . . . . . . . . . . . . . . . . . . . .                15</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.13<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How can I find the methods or attributes of an object? </span>.
. . . . . . . . . . . . . . . . . .       15</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.14<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How can my code discover the name of an object? </span>.
. . . . . . . . . . . . . . . . . . . .        16</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.15<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Whats up with the comma operators precedence?      </span>.
. . . . . . . . . . . . . . . . . . . .   16</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.16<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Is there an equivalent of Cs ?: ternary operator? </span>.
. . . . . . . . . . . . . . . . . . . .        16</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.17<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Is it possible to write obfuscated one-liners in Python? </span>.
. . . . . . . . . . . . . . . . . .      17</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.2.18<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>What does the slash(/) in the parameter list of a
function mean?                </span>. . . . . . . . . . . . . .  17</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>2.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Numbers and strings           </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .      18</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I specify hexadecimal and
octal integers?        </span>. . . . . . . . . . . . . . . . . . . . .   18</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why does -22 // 10 return -3? </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     18</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I get int literal attribute
instead of SyntaxError? </span>. . . . . . . . . . . . . . . . . .     18</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I convert a string to a
number? </span>. . . . . . . . . . . . . . . . . . . . . . . . . . .               18</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I convert a number to a
string? </span>. . . . . . . . . . . . . . . . . . . . . . . . . . .               19</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I modify a string in place?  </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 19</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I use strings to call
functions/methods? </span>. . . . . . . . . . . . . . . . . . . . . . .         19</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Is there an equivalent to Perls
chomp() for removing trailing newlines from strings? </span>. . . . 20</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.9<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Is there a scanf() or sscanf()
equivalent?        </span>. . . . . . . . . . . . . . . . . . . . . . . . . .       20</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.10<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>What does UnicodeDecodeError or UnicodeEncodeError
error mean? </span>. . . . . . . . . .         21</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.3.11<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Can I end a raw string with an odd number of backslashes?       </span>.
. . . . . . . . . . . . . . .              21</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>2.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Performance          </span>. . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             21</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.4.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>My program is too slow. How do I
speed it up? </span>. . . . . . . . . . . . . . . . . . . . . . .          21</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.4.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is the most efficient way to
concatenate many strings together? </span>. . . . . . . . . . . .           22</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>2.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Sequences (Tuples/Lists) </span>. . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             22</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I convert between tuples and
lists?    </span>. . . . . . . . . . . . . . . . . . . . . . . . .          22</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Whats a negative index?   </span>. .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .      23</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I iterate over a sequence in
reverse order?       </span>. . . . . . . . . . . . . . . . . . . . .   23</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do you remove duplicates from a
list? </span>. . . . . . . . . . . . . . . . . . . . . . . . .            23</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do you remove multiple items from
a list              </span>. . . . . . . . . . . . . . . . . . . . . . .              23</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do you make an array in Python?            </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . .     23</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I create a multidimensional
list?        </span>. . . . . . . . . . . . . . . . . . . . . . . . . .       24</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I apply a method or function
to a sequence of objects? </span>. . . . . . . . . . . . . . .                24</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.9<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why does a_tuple[i] += [item] raise
an exception when the addition works?       </span>. . . . . . .  25</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.10<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>I want to do a complicated sort: can you do a Schwartzian
Transform in Python? </span>. . . . .      26</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.5.11<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How can I sort one list by values from another list? </span>.
. . . . . . . . . . . . . . . . . . . .       26</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>2.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Objects  </span>. . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .       26</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is a class?    </span>. . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           26</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is a method? </span>. . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           27</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is self?         </span>. . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .        27</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I check if an object is an
instance of a given class or of a subclass of it? </span>. . . . . .     27</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is delegation?            </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .               28</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I call a method defined in a
base class from a derived class that extends it?            </span>. . . .        29</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How can I organize my code to make it
easier to change the base class? </span>. . . . . . . . . .           29</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I create static class data and
static class methods?         </span>. . . . . . . . . . . . . . . . .           29</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.9<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How can I overload constructors (or
methods) in Python?          </span>. . . . . . . . . . . . . . . . .           30</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.10<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>I try to use __spam and I get an error about
_SomeClassName__spam.   </span>. . . . . . . . . .           30</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.11<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>My class defines __del__ but it is not called when I
delete the object.     </span>. . . . . . . . . . .         31</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.12<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How do I get a list of all instances of a given class? </span>.
. . . . . . . . . . . . . . . . . . . .       31</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.13<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why does the result of </span><span style='font-size:
9.0pt;line-height:107%;color:#355F7C'>id() </span><span style='color:#355F7C'>appear
to be not unique?    </span>. . . . . . . . . . . . . . . . . . .       31</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.14<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>When can I rely on identity tests with the <i>is </i>operator? </span>.
. . . . . . . . . . . . . . . . . .       32</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.15<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How can a subclass control what data is stored in an
immutable instance?             </span>. . . . . . . . .             33</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.6.16<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How do I cache method calls? </span>. . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . .    34</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>2.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Modules </span>. . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .      35</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.7.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I create a .pyc file?               </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .        35</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.7.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I find the current module
name?        </span>. . . . . . . . . . . . . . . . . . . . . . . . . .       35</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.7.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How can I have modules that mutually
import each other?         </span>. . . . . . . . . . . . . . . . .           36</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.7.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>__import__(x.y.z) returns
&lt;module x&gt;; how do I get z?        </span>. . . . . . . . . . . . . . .
. .           36</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>ii</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-1.0in;text-align:left;text-indent:0in;
line-height:107%'>&nbsp;</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>2.7.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>When I edit an imported module and
reimport it, the changes dont show up. Why does</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'>                                                        </span><span
style='color:#355F7C'>this happen? </span>. . . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . .                           37</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Design and History FAQ           </span>39</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>3.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why does Python use indentation for
grouping of statements? </span>. . . . . . . . . . . . . . . . . . . .      39</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>3.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why am I getting strange results with
simple arithmetic operations? </span>. . . . . . . . . . . . . . . . . 39</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>3.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why are floating-point calculations
so inaccurate? </span>. . . . . . . . . . . . . . . . . . . . . . . . . .             39</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>3.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why are Python strings immutable?                </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .        40</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>3.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why must self be used explicitly in
method definitions and calls? </span>. . . . . . . . . . . . . . . . . . 40</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>3.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why cant I use an assignment in an
expression? </span>. . . . . . . . . . . . . . . . . . . . . . . . . . . 41 <span
style='color:#355F7C'>3.7 Why does Python use methods for some functionality
(e.g. list.index()) but functions for other (e.g.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'>                  </span><span
style='color:#355F7C'>len(list))?                            </span>. . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.                              41</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why is join() a string method instead
of a list or tuple method? </span>. . . . . . . . . . . . . . . . . . .          41</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.9<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How fast are exceptions?       </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           42</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.10<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why isnt there a switch or case statement in Python?    </span>.
. . . . . . . . . . . . . . . . . . . . . . .            42</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.11<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Cant you emulate threads in the interpreter instead of
relying on an OS-specific thread implemen-</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'>                  </span><span
style='color:#355F7C'>tation?                              </span>. . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.                              43</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.12<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why cant lambda expressions contain statements? </span>.
. . . . . . . . . . . . . . . . . . . . . . . . .                43</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.13<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Can Python be compiled to machine code, C or some other
language?        </span>. . . . . . . . . . . . . . .                43</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.14<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How does Python manage memory?    </span>. . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . .        43</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.15<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why doesnt CPython use a more traditional garbage
collection scheme?  </span>. . . . . . . . . . . . . .  44</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.16<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why isnt all memory freed when CPython exits?            </span>.
. . . . . . . . . . . . . . . . . . . . . . . . .       44</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.17<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why are there separate tuple and list data types? </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . .  44</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.18<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How are lists implemented in CPython?             </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            44</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.19<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How are dictionaries implemented in CPython?               </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . .     44</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.20<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why must dictionary keys be immutable?          </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .               45</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.21<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why doesnt list.sort() return the sorted list?     </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 46</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.22<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>How do you specify and enforce an interface spec in
Python?       </span>. . . . . . . . . . . . . . . . . . . .     46</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.23<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why is there no goto?             </span>. . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .        46</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.24<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why cant raw strings (r-strings) end with a backslash?  </span>.
. . . . . . . . . . . . . . . . . . . . . .              47</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.25<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why doesnt Python have a with statement for attribute
assignments?     </span>. . . . . . . . . . . . . . .                47</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.26<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why dont generators support the with statement?           </span>.
. . . . . . . . . . . . . . . . . . . . . . . . .       48</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.27<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why are colons required for the if/while/def/class
statements? </span>. . . . . . . . . . . . . . . . . . . .          48</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:25.9pt;text-align:left;text-indent:-25.9pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>3.28<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='color:#355F7C'>Why does Python allow commas at the end of lists and
tuples?     </span>. . . . . . . . . . . . . . . . . . .       49</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Library and Extension FAQ    </span>51</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>4.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>General Library Questions </span>. .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             51</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.1.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I find a module or application
to perform task X?          </span>. . . . . . . . . . . . . . . . .           51</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.1.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Where is the math.py (socket.py,
regex.py, etc.) source file?      </span>. . . . . . . . . . . . . . . .              51</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.1.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I make a Python script
executable on Unix?   </span>. . . . . . . . . . . . . . . . . . . .     51</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.1.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Is there a curses/termcap package for
Python?              </span>. . . . . . . . . . . . . . . . . . . . . . .              52</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.1.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Is there an equivalent to Cs
onexit() in Python?           </span>. . . . . . . . . . . . . . . . . . . . .
. 52</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.1.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why dont my signal handlers work?               </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . .   52</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>4.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Common tasks     </span>. . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .               52</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.2.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I test a Python program or
component?           </span>. . . . . . . . . . . . . . . . . . . . . . 52</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.2.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I create documentation from
doc strings?        </span>. . . . . . . . . . . . . . . . . . . . .   53</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.2.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I get a single keypress at a
time?       </span>. . . . . . . . . . . . . . . . . . . . . . . . . .       53</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>4.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Threads </span>. . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .       53</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.3.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I program using threads? </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . .  53</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.3.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>None of my threads seem to run: why? </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . .                53</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.3.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I parcel out work among a
bunch of worker threads?    </span>. . . . . . . . . . . . . . .                54</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.3.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What kinds of global value mutation
are thread-safe? </span>. . . . . . . . . . . . . . . . . . . .      55</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.3.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Cant we get rid of the Global
Interpreter Lock?           </span>. . . . . . . . . . . . . . . . . . . . . . 55</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>4.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Input and Output </span>. . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  56</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.4.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I delete a file? (And other
file questions)    </span>. . . . . . . . . . . . . . . . . . . .     56</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.4.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I copy a file?          </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 56</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.4.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I read (or write) binary data?
</span>. . . . . . . . . . . . . . . . . . . . . . . . . . . .                56</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.4.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>I cant seem to use os.read() on a
pipe created with os.popen(); why? </span>. . . . . . . . . . . .            57</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.4.5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I access the serial (RS232)
port? </span>. . . . . . . . . . . . . . . . . . . . . . . . . .              57</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.4.6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why doesnt closing sys.stdout
(stdin, stderr) really close it?     </span>. . . . . . . . . . . . . . . .              57</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>4.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Network/Internet Programming        </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   57</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.5.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What WWW tools are there for Python?         </span>.
. . . . . . . . . . . . . . . . . . . . . . . . .       57</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.5.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What module should I use to help with
generating HTML? </span>. . . . . . . . . . . . . . . . .  58</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.5.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I send mail from a Python
script?      </span>. . . . . . . . . . . . . . . . . . . . . . . . .          58</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.5.4<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I avoid blocking in the
connect() method of a socket? </span>. . . . . . . . . . . . . . . 58</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>4.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Databases </span>. . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .      59</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.6.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Are there any interfaces to database
packages in Python? </span>. . . . . . . . . . . . . . . . . .   59</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.6.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do you implement persistent
objects in Python? </span>. . . . . . . . . . . . . . . . . . . .      59</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>4.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Mathematics and Numerics </span>. . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .           59</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>4.7.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I generate random numbers in
Python? </span>. . . . . . . . . . . . . . . . . . . . . . .         59</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>5<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Extending/Embedding FAQ     </span>61</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Can I create my own functions in C? </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .     61</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Can I create my own functions in C++?          </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            61</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Writing C is hard; are there any
alternatives? </span>. . . . . . . . . . . . . . . . . . . . . . . . . . . . .                61</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How can I execute arbitrary Python
statements from C? </span>. . . . . . . . . . . . . . . . . . . . . . .          61</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How can I evaluate an arbitrary
Python expression from C?      </span>. . . . . . . . . . . . . . . . . . . . .   61</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I extract C values from a
Python object?        </span>. . . . . . . . . . . . . . . . . . . . . . . . .
.       61</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I use Py_BuildValue() to
create a tuple of arbitrary length? </span>. . . . . . . . . . . . . . . . .   62</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I call an objects method from
C?     </span>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . .               62</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.9<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I catch the output from
PyErr_Print() (or anything that prints to stdout/stderr)?     </span>. . . . .
.    62</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.10<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I access a module written in
Python from C? </span>. . . . . . . . . . . . . . . . . . . . . . . .            63</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.11<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I interface to C++ objects
from Python? </span>. . . . . . . . . . . . . . . . . . . . . . . . . . .              63</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.12<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>I added a module using the Setup file
and the make fails; why?                </span>. . . . . . . . . . . . . . . .
. . .       63</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.13<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I debug an extension?         </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 63</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.14<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>I want to compile a Python module on
my Linux system, but some files are missing. Why? </span>. . . . .   64</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.15<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I tell incomplete input from
invalid input?             </span>. . . . . . . . . . . . . . . . . . . . . .
.              64</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.16<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I find undefined g++ symbols
__builtin_new or __pure_virtual?              </span>. . . . . . . . . . . . .
.  64</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>5.17<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Can I create an object class with
some methods implemented in C and others in Python (e.g. through</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'>                  </span><span
style='color:#355F7C'>inheritance)?                           </span>. . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .                            64</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>6<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Python on Windows FAQ         </span>65</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I run a Python program under
Windows?        </span>. . . . . . . . . . . . . . . . . . . . . . . . . .       65</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I make Python scripts
executable? </span>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 66</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why does Python sometimes take so
long to start? </span>. . . . . . . . . . . . . . . . . . . . . . . . . .             66</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I make an executable from a
Python script? </span>. . . . . . . . . . . . . . . . . . . . . . . . .            66</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Is a </span><span style='font-size:
9.0pt;line-height:107%;color:#355F7C'>*.pyd </span><span style='color:#355F7C'>file
the same as a DLL?    </span>. . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . . . .        66</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How can I embed Python into a Windows
application?              </span>. . . . . . . . . . . . . . . . . . . . . . .              67</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I keep editors from inserting
tabs into my Python source?          </span>. . . . . . . . . . . . . . . . .           68</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I check for a keypress without
blocking?       </span>. . . . . . . . . . . . . . . . . . . . . . . . . .       68</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>6.9<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I solve the missing
api-ms-win-crt-runtime-l1-1-0.dll error?       </span>. . . . . . . . . . . . .
. . .              68</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>7<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Graphic User Interface FAQ   </span>69</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>7.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>General GUI Questions </span>. . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .             69</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>7.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What GUI toolkits exist for Python?               </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .        69</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>7.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Tkinter questions </span>. . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  69</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>7.3.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>How do I freeze Tkinter applications?
</span>. . . . . . . . . . . . . . . . . . . . . . . . . . . .               69</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>7.3.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Can I have Tk events handled while
waiting for I/O? </span>. . . . . . . . . . . . . . . . . . . .       69</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:34.85pt;text-align:left;text-indent:-34.85pt;
line-height:107%'><span style='line-height:107%;color:#355F7C'>7.3.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>I cant get key bindings to work in
Tkinter: why? </span>. . . . . . . . . . . . . . . . . . . . . .        69</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>8<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Why is Python Installed on my Computer? FAQ          </span>71</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>8.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>What is Python?  </span>. . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  71</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>8.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Why is Python installed on my
machine? </span>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  71</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.0pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='line-height:107%;color:#355F7C'>8.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Can I delete Python?          </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .      71</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:8.0pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>A<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Glossary        </span>73</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.5pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>iv</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>B<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>About this documentation        </span>91</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.0pt;margin-left:25.9pt;text-align:right;text-indent:-25.9pt;
line-height:108%'><span style='line-height:108%;color:#355F7C'>B.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Contributors to the Python
documentation </span>. . . . . . . . . . . . . . . . . . . . . . . . . . . . .
.       91</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>C<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>History and License   </span>93</b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.05pt;margin-left:25.9pt;text-align:right;text-indent:-25.9pt;
line-height:108%'><span style='line-height:108%;color:#355F7C'>C.1<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>History of the software </span>. . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .  93</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.05pt;margin-left:25.9pt;text-align:right;text-indent:-25.9pt;
line-height:108%'><span style='line-height:108%;color:#355F7C'>C.2<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Terms and conditions for accessing or
otherwise using Python </span>. . . . . . . . . . . . . . . . . . . .          94</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.05pt;margin-left:19.75pt;text-align:right;line-height:108%'><span
style='line-height:108%;color:#355F7C'>C.2.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>PYTHON SOFTWARE FOUNDATION LICENSE
VERSION 2 </span>. . . . . . . . . . . . .                94 <span
style='color:#355F7C'>C.2.2       BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0 </span>.
. . . . . . . . . . . . .  95 <span style='color:#355F7C'>C.2.3 CNRI LICENSE
AGREEMENT FOR PYTHON 1.6.1  </span>. . . . . . . . . . . . . . . . . .         95
<span style='color:#355F7C'>C.2.4 CWI LICENSE AGREEMENT FOR PYTHON 0.9.0
THROUGH 1.2       </span>. . . . . . . . . .           96</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.05pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
108%'><span style='font-size:11.0pt;line-height:108%;font-family:"Calibri",sans-serif'>                  </span><span
style='color:#355F7C'>C.2.5      ZERO-CLAUSE BSD LICENSE FOR CODE IN THE PYTHON
DOCUMENTATION </span>.    97</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.05pt;margin-left:25.9pt;text-align:right;text-indent:-25.9pt;
line-height:108%'><span style='line-height:108%;color:#355F7C'>C.3<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Licenses and Acknowledgements for
Incorporated Software </span>. . . . . . . . . . . . . . . . . . . . .           97</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.05pt;margin-left:19.75pt;text-align:right;line-height:108%'><span
style='line-height:108%;color:#355F7C'>C.3.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span style='color:#355F7C'>Mersenne Twister </span>. . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .            97 <span
style='color:#355F7C'>C.3.2 Sockets  </span>. . . . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . .     98 <span
style='color:#355F7C'>C.3.3 Asynchronous socket services </span>. . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . .   99 <span style='color:#355F7C'>C.3.4       Cookie
management </span>. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .
. . . . . .         99 <span style='color:#355F7C'>C.3.5 Execution tracing </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 99 <span
style='color:#355F7C'>C.3.6 UUencode and UUdecode functions               </span>.
. . . . . . . . . . . . . . . . . . . . . . . . . . . 100 <span
style='color:#355F7C'>C.3.7 XML Remote Procedure Calls            </span>. . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 101 <span
style='color:#355F7C'>C.3.8          test_epoll              </span>. . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 101 <span
style='color:#355F7C'>C.3.9     Select kqueue       </span>. . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 102 <span
style='color:#355F7C'>C.3.10       SipHash24 </span>. . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . 102 <span
style='color:#355F7C'>C.3.11           strtod and dtoa </span>. . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103 <span
style='color:#355F7C'>C.3.12            OpenSSL               </span>. . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 103 <span
style='color:#355F7C'>C.3.13       expat </span>. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 106 <span
style='color:#355F7C'>C.3.14             libffi </span>. . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107 <span
style='color:#355F7C'>C.3.15  zlib         </span>. . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 107 <span
style='color:#355F7C'>C.3.16        cfuhash  </span>. . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108 <span
style='color:#355F7C'>C.3.17 libmpdec               </span>. . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 108 <span
style='color:#355F7C'>C.3.18    W3C C14N test suite          </span>. . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 109 <span
style='color:#355F7C'>C.3.19            mimalloc               </span>. . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 110 <span
style='color:#355F7C'>C.3.20    asyncio  </span>. . . . . . . . . . . . . . . .
. . . . . . . . . . . . . . . . . . . . . . . . . . . 110</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.0pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:108%'><span style='font-size:11.0pt;line-height:108%;font-family:
"Calibri",sans-serif'>                  </span><span style='color:#355F7C'>C.3.21                                  Global
Unbounded Sequences (GUS) </span>. . . . . . . . . . . . . . . . . . . . . . .
. . . . . 110</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.05pt;margin-left:14.95pt;text-align:left;text-indent:-14.95pt;
line-height:107%'><b><span style='line-height:107%;color:#355F7C'>D<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='color:#355F7C'>Copyright      </span>113</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:-.75pt;text-align:left;text-indent:0in;
line-height:107%'><b><span style='color:#355F7C'>Index                                                                                                                                                                                       </span>115</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-family:"Calibri",sans-serif'>vi</span></b></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection4>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=603 height=1 id="Group 123490"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>CHAPTER</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>ONE</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img width=603 height=1 id="Group 123491"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>GENERAL
PYTHON FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>1.1 General Information</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>What is Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python is an interpreted,
interactive, object-oriented programming language. It incorporates modules,
exceptions, dynamic typing, very high level dynamic data types, and classes. It
supports multiple programming paradigms beyond object-oriented programming,
such as procedural and functional programming. Python combines remarkable power
with very clear syntax. It has interfaces to many system calls and libraries,
as well as to various window systems, and is extensible in C or C++. It is also
usable as an extension language for applications that need a programmable
interface. Finally, Python is portable: it runs on many Unix variants including
Linux and macOS, and on Windows.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>To find out more, start with tutorial-index. The <a
href="https://wiki.python.org/moin/BeginnersGuide"><span style='color:#377063;
text-decoration:none'>Beginners Guide to Python</span></a><span
style='color:#377063'> </span>links to other introductory tutorials and
resources for learning Python.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>What is the Python Software Foundation?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The Python Software Foundation is
an independent non-profit organization that holds the copyright on Python
versions 2.1 and newer. The PSFs mission is to advance open source technology
related to the Python programming language and to publicize the use of Python.
The PSFs home page is at <a href="https://www.python.org/psf/"><span
style='color:#377063;text-decoration:none'>https://www.python.org/psf/</span></a>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>Donations to the PSF are tax-exempt in the US. If you use
Python and find it helpful, please contribute via <a
href="https://www.python.org/psf/donations/"><span style='color:#377063;
text-decoration:none'>the PSF </span></a><a
href="https://www.python.org/psf/donations/"><span style='color:#377063;
text-decoration:none'>donation page</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Are there copyright restrictions on the use
of Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>You can do anything you want with
the source, as long as you leave the copyrights in and display those copyrights
in any documentation about Python that you produce. If you honor the copyright
rules, its OK to use Python for commercial use, to sell copies of Python in
source or binary form (modified or unmodified), or to sell products that
incorporate Python in some form. We would still like to know about all
commercial use of Python, of course.</p>

<p class=MsoNormal style='margin-left:-.25pt'>See <a
href="https://docs.python.org/3/license.html"><span style='color:#377063;
text-decoration:none'>the license page</span></a><span style='color:#377063'> </span>to
find further explanations and the full text of the PSF License.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>The Python logo is trademarked, and in certain cases
permission is required to use it. Consult <a
href="https://www.python.org/psf/trademarks/"><span style='color:#377063;
text-decoration:none'>the Trademark Usage </span></a><a
href="https://www.python.org/psf/trademarks/"><span style='color:#377063;
text-decoration:none'>Policy</span></a><span style='color:#377063'> </span>for
more information.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Why was Python created in the first place?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Heres a <i>very </i>brief
summary of what started it all, written by Guido van Rossum:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'>I had extensive experience with implementing an
interpreted language in the ABC group at CWI, and from working with this group
I had learned a lot about language design. This is the origin of many Python
features, including the use of indentation for statement grouping and the
inclusion of very-high-level data types (although the details are all different
in Python).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'>I had a number of gripes about the ABC language, but
also liked many of its features. It was impossible to extend the ABC language
(or its implementation) to remedy my complaints  in fact its lack of
extensibility was one of its biggest problems. I had some experience with using
Modula-2+ and talked with the designers of Modula-3 and read the Modula-3
report. Modula-3 is the origin of the syntax and semantics used for exceptions,
and some other Python features.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'>I was working in the Amoeba distributed operating
system group at CWI. We needed a better way to do system administration than by
writing either C programs or Bourne shell scripts, since Amoeba had its own
system call interface which wasnt easily accessible from the Bourne shell. My
experience with error handling in Amoeba made me acutely aware of the
importance of exceptions as a programming language feature.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'>It occurred to me that a scripting language with a
syntax like ABC but with access to the Amoeba system calls would fill the need.
I realized that it would be foolish to write an Amoeba-specific language, so I
decided that I needed a language that was generally extensible.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'>During the 1989 Christmas holidays, I had a lot of
time on my hand, so I decided to give it a try. During the next year, while
still mostly working on it in my own time, Python was used in the Amoeba
project with increasing success, and the feedback from colleagues made me add
many early improvements.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:12.8pt;margin-bottom:
16.75pt;margin-left:25.4pt'>In February 1991, after just over a year of
development, I decided to post to USENET. The rest is in the <span
style='font-size:9.0pt;line-height:108%'>Misc/HISTORY </span>file.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>What is Python good for?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python is a high-level
general-purpose programming language that can be applied to many different
classes of problems.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>The language comes with a large standard library that
covers areas such as string processing (regular expressions, Unicode,
calculating differences between files), internet protocols (HTTP, FTP, SMTP,
XML-RPC, POP, IMAP), software engineering (unit testing, logging, profiling,
parsing Python code), and operating system interfaces (system calls,
filesystems, TCP/IP sockets). Look at the table of contents for library-index
to get an idea of whats available. A wide variety of third-party extensions
are also available. Consult <a href="https://pypi.org/"><span style='color:
#377063;text-decoration:none'>the Python Package Index</span></a><span
style='color:#377063'> </span>to find packages of interest to you.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How does the Python version numbering
scheme work?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python versions are numbered
A.B.C or A.B:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><i>A </i>is the major version number  it is only incremented for
really major changes in the language.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><i>B </i>is the minor version number  it is incremented for less
earth-shattering changes.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><i>C </i>is the micro version number  it is incremented for each
bugfix release.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Not all releases are bugfix
releases. In the run-up to a new feature release, a series of development
releases are made, denoted as alpha, beta, or release candidate. Alphas are
early releases in which interfaces arent yet finalized; its not unexpected to
see an interface change between two alpha releases. Betas are more stable,
preserving existing interfaces but possibly adding new modules, and release
candidates are frozen, making no changes except as needed to fix critical bugs.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Alpha, beta and release candidate
versions have an additional suffix:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The suffix for an alpha version is aN for some small number <i>N</i>.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The suffix for a beta version is bN for some small number <i>N</i>.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The suffix for a release candidate version is rcN for some
small number <i>N</i>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>In other words, all versions
labeled <i>2.0aN </i>precede the versions labeled <i>2.0bN</i>, which precede
versions labeled <i>2.0rcN</i>, and <i>those </i>precede 2.0.</p>

<p class=MsoNormal style='margin-left:-.25pt'>You may also find version numbers
with a + suffix, e.g. 2.2+. These are unreleased versions, built directly
from the CPython development repository. In practice, after a final minor
release is made, the version is incremented to the next minor version, which
becomes the a0 version, e.g. 2.4a0.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:-.25pt;text-align:left;line-height:107%'>See
the <a href="https://devguide.python.org/developer-workflow/development-cycle/"><span
style='color:#377063;text-decoration:none'>Developers Guide</span></a><span
style='color:#377063'> </span>for more information about the development cycle,
and <a href="https://peps.python.org/pep-0387/"><b><span style='color:#377063;
text-decoration:none'>PEP 387</span></b></a><b><span style='color:#377063'> </span></b>to
learn more about Pythons backward compatibility policy. See also the
documentation for <span style='font-size:9.0pt;line-height:107%'>sys.version</span>,
<span style='font-size:9.0pt;line-height:107%'>sys.hexversion</span>, and <span
style='font-size:9.0pt;line-height:107%'>sys.version_info</span>.</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:25.25pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Python Frequently Asked Questions,
Release 3.13.2</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I obtain a copy of the Python
source?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The latest Python source
distribution is always available from python.org, at <a
href="https://www.python.org/downloads/"><span style='color:#377063;text-decoration:
none'>https://www.python.org/downloads/</span></a>. The latest development
sources can be obtained at <a href="https://github.com/python/cpython/"><span
style='color:#377063;text-decoration:none'>https://github.com/python/cpython/</span></a>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The source distribution is a
gzipped tar file containing the complete C source, Sphinx-formatted
documentation, Python library modules, example programs, and several useful
pieces of freely distributable software. The source will compile and run out of
the box on most UNIX platforms.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>Consult the <a href="https://devguide.python.org/setup/"><span
style='color:#377063;text-decoration:none'>Getting Started section of the
Python Developers Guide</span></a><span style='color:#377063'> </span>for more
information on getting the source code and compiling it.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I get documentation on Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The standard documentation for
the current stable version of Python is available at <a
href="https://docs.python.org/3/"><span style='color:#377063;text-decoration:
none'>https://docs.python.org/3/</span></a>. PDF, plain text, and downloadable
HTML versions are also available at <a
href="https://docs.python.org/3/download.html"><span style='color:#377063;
text-decoration:none'>https://docs.python.org/3/download.html</span></a>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>The documentation is written in reStructuredText and
processed by <a href="https://www.sphinx-doc.org/"><span style='color:#377063;
text-decoration:none'>the Sphinx documentation tool</span></a>. The
reStructuredText source for the documentation is part of the Python source
distribution.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.9<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Ive never programmed before. Is there a
Python tutorial?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are numerous tutorials and
books available. The standard documentation includes tutorial-index.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>Consult <a
href="https://wiki.python.org/moin/BeginnersGuide"><span style='color:#377063;
text-decoration:none'>the Beginners Guide</span></a><span style='color:#377063'>
</span>to find information for beginning Python programmers, including lists of
tutorials.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.10<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Is there a newsgroup or mailing list
devoted to Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>There is a newsgroup, <i><span
style='font-size:9.0pt;line-height:108%'>comp.lang.python</span></i>, and a
mailing list, <a href="https://mail.python.org/mailman/listinfo/python-list"><span
style='color:#377063;text-decoration:none'>python-list</span></a>. The
newsgroup and mailing list are gatewayed into each other  if you can read news
its unnecessary to subscribe to the mailing list. <i><span style='font-size:
9.0pt;line-height:108%'>comp.lang. python </span></i>is high-traffic, receiving
hundreds of postings every day, and Usenet readers are often more able to cope
with this volume.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Announcements of new software
releases and events can be found in comp.lang.python.announce, a low-traffic
moderated list that receives about five postings per day. Its available as <a
href="https://mail.python.org/mailman3/lists/python-announce-list.python.org/"><span
style='color:#377063;text-decoration:none'>the python-announce mailing list</span></a>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>More info about other mailing lists and newsgroups can be
found at <a href="https://www.python.org/community/lists/"><span
style='color:#377063;text-decoration:none'>https://www.python.org/community/lists/</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.11<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I get a beta test version of Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Alpha and beta releases are available from <a
href="https://www.python.org/downloads/"><span style='color:#377063;text-decoration:
none'>https://www.python.org/downloads/</span></a>. All releases are announced
on the comp.lang.python and comp.lang.python.announce newsgroups and on the
Python home page at <a href="https://www.python.org/"><span style='color:#377063;
text-decoration:none'>https://www.python.</span></a></p>

<p class=MsoNormal style='margin-left:-.25pt'><a href="https://www.python.org/"><span
style='color:#377063;text-decoration:none'>org/</span></a>; an RSS feed of news
is available.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>You can also access the development version of Python
through Git. See <a href="https://devguide.python.org/"><span style='color:
#377063;text-decoration:none'>The Python Developers Guide</span></a><span
style='color:#377063'> </span>for details.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.12<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I submit bug reports and patches for
Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>To report a bug or submit a
patch, use the issue tracker at <a
href="https://github.com/python/cpython/issues"><span style='color:#377063;
text-decoration:none'>https://github.com/python/cpython/issues</span></a>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>For more information on how Python is developed, consult <a
href="https://devguide.python.org/"><span style='color:#377063;text-decoration:
none'>the Python Developers Guide</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.13<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Are there any published articles about
Python that I can reference?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Its probably best to cite your
favorite book about Python.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The <a
href="https://ir.cwi.nl/pub/18204"><span style='color:#377063;text-decoration:
none'>very first article</span></a><span style='color:#377063'> </span>about
Python was written in 1991 and is now quite outdated.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:68.75pt;
margin-left:25.4pt'>Guido van Rossum and Jelke de Boer, Interactively Testing
Remote Servers Using the Python Programming Language, CWI Quarterly, Volume 4,
Issue 4 (December 1991), Amsterdam, pp 283303.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>1.1. General Information</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.14<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Are there any books on Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Yes, there are many, and more are
being published. See the python.org wiki at <a
href="https://wiki.python.org/moin/PythonBooks"><span style='color:#377063;
text-decoration:none'>https://wiki.python.org/moin/ </span></a><a
href="https://wiki.python.org/moin/PythonBooks"><span style='color:#377063;
text-decoration:none'>PythonBooks</span></a><span style='color:#377063'> </span>for
a list.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>You can also search online bookstores for Python and
filter out the Monty Python references; or perhaps search for Python and
language.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.15<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Where in the world is www.python.org
located?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>The Python projects infrastructure is located all over the
world and is managed by the Python Infrastructure Team. Details <a
href="https://infra.psf.io/"><span style='color:#377063;text-decoration:none'>here</span></a><a
href="https://infra.psf.io/"><span style='color:black;text-decoration:none'>.</span></a></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.16<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Why is it called Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>When he began implementing Python, Guido van Rossum was
also reading the published scripts from <a
href="https://en.wikipedia.org/wiki/Monty_Python"><span style='color:#377063;
text-decoration:none'>Monty </span></a><a
href="https://en.wikipedia.org/wiki/Monty_Python"><span style='color:#377063;
text-decoration:none'>Pythons Flying Circus</span></a>, a BBC comedy series
from the 1970s. Van Rossum thought he needed a name that was short, unique, and
slightly mysterious, so he decided to call the language Python.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.1.17<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Do I have to like Monty Pythons Flying
Circus?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>No, but it helps. :)</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>1.2 Python in the real world</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.2.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How stable is Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Very stable. New, stable releases
have been coming out roughly every 6 to 18 months since 1991, and this seems
likely to continue. As of version 3.9, Python will have a new feature release
every 12 months (<a href="https://peps.python.org/pep-0602/"><b><span
style='color:#377063;text-decoration:none'>PEP 602</span></b></a>).</p>

<p class=MsoNormal style='margin-left:-.25pt'>The developers issue bugfix
releases of older versions, so the stability of existing releases gradually
improves. Bugfix releases, indicated by a third component of the version number
(e.g. 3.5.3, 3.6.2), are managed for stability; only fixes for known problems
are included in a bugfix release, and its guaranteed that interfaces will
remain the same throughout a series of bugfix releases.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>The latest stable releases can always be found on the <a
href="https://www.python.org/downloads/"><span style='color:#377063;text-decoration:
none'>Python download page</span></a>. Python 3.x is the recommended version
and supported by most widely used libraries. Python 2.x <a
href="https://peps.python.org/pep-0373/"><b><span style='color:#377063;
text-decoration:none'>is not maintained anymore</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.2.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How many people are using Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are probably millions of
users, though its difficult to obtain an exact count.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Python is available for free
download, so there are no sales figures, and its available from many different
sites and packaged with many Linux distributions, so download statistics dont
tell the whole story either.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>The comp.lang.python newsgroup is very active, but not all
Python users post to the group or even read it.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.2.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Have any significant projects been done in
Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>See <a
href="https://www.python.org/about/success"><span style='color:#377063;
text-decoration:none'>https://www.python.org/about/success</span></a><span
style='color:#377063'> </span>for a list of projects that use Python.
Consulting the proceedings for <a
href="https://www.python.org/community/workshops/"><span style='color:#377063;
text-decoration:none'>past </span></a><a
href="https://www.python.org/community/workshops/"><span style='color:#377063;
text-decoration:none'>Python conferences</span></a><span style='color:#377063'>
</span>will reveal contributions from many different companies and
organizations.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>High-profile Python projects include <a
href="https://www.list.org/"><span style='color:#377063;text-decoration:none'>the
Mailman mailing list manager</span></a><span style='color:#377063'> </span>and <a
href="https://www.zope.dev/"><span style='color:#377063;text-decoration:none'>the
Zope application server</span></a>. Several Linux distributions, most notably <a
href="https://www.redhat.com/"><span style='color:#377063;text-decoration:none'>Red
Hat</span></a>, have written part or all of their installer and system
administration software in Python. Companies that use Python internally include
Google, Yahoo, and Lucasfilm Ltd.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.2.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>What new developments are expected for
Python in the future?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>See <a
href="https://peps.python.org/"><span style='color:#377063;text-decoration:
none'>https://peps.python.org/</span></a><span style='color:#377063'> </span>for
the Python Enhancement Proposals (PEPs). PEPs are design documents describing a
suggested new feature for Python, providing a concise technical specification
and a rationale. Look for a PEP titled Python X.Y Release Schedule, where X.Y
is a version that hasnt been publicly released yet.</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:25.25pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Python Frequently Asked Questions,
Release 3.13.2</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>New development is discussed on <a
href="https://mail.python.org/mailman3/lists/python-dev.python.org/"><span
style='color:#377063;text-decoration:none'>the python-dev mailing list</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.2.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Is it reasonable to propose incompatible
changes to Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>In general, no. There are already
millions of lines of Python code around the world, so any change in the
language that invalidates more than a very small fraction of existing programs
has to be frowned upon. Even if you can provide a conversion program, theres
still the problem of updating all documentation; many books have been written
about Python, and we dont want to invalidate them all at a single stroke.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>Providing a gradual upgrade path is necessary if a feature
has to be changed. <a href="https://peps.python.org/pep-0005/"><b><span
style='color:#377063;text-decoration:none'>PEP</span></b></a><b><span
style='color:#377063'> </span></b><a href="https://peps.python.org/pep-0005/"><b><span
style='color:#377063;text-decoration:none'>5</span></b></a><b><span
style='color:#377063'> </span></b>describes the procedure followed for
introducing backward-incompatible changes while minimizing disruption for
users.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>1.2.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Is Python a good language for beginning
programmers?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Yes.</p>

<p class=MsoNormal style='margin-left:-.25pt'>It is still common to start
students with a procedural and statically typed language such as Pascal, C, or
a subset of C++ or Java. Students may be better served by learning Python as
their first language. Python has a very simple and consistent syntax and a
large standard library and, most importantly, using Python in a beginning
programming course lets students concentrate on important programming skills
such as problem decomposition and data type design. With Python, students can
be quickly introduced to basic concepts such as loops and procedures. They can
probably even work with user-defined objects in their very first course.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For a student who has never
programmed before, using a statically typed language seems unnatural. It
presents additional complexity that the student must master and slows the pace
of the course. The students are trying to learn to think like a computer, decompose
problems, design consistent interfaces, and encapsulate data. While learning to
use a statically typed language is important in the long term, it is not
necessarily the best topic to address in the students first programming
course.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Many other aspects of Python make
it a good first language. Like Java, Python has a large standard library so
that students can be assigned programming projects very early in the course
that <i>do </i>something. Assignments arent restricted to the standard
four-function calculator and check balancing programs. By using the standard
library, students can gain the satisfaction of working on realistic
applications as they learn the fundamentals of programming. Using the standard
library also teaches students about code reuse. Third-party modules such as
PyGame are also helpful in extending the students reach.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.35pt;
margin-left:-.25pt'>Pythons interactive interpreter enables students to test
language features while theyre programming. They can keep a window with the
interpreter running while they enter their programs source in another window.
If they cant remember the methods for a list, they can do something like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><b><span
style='font-size:9.0pt;line-height:112%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span
style='font-size:9.0pt;line-height:112%'>L </span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>= </span><span style='font-size:9.0pt;
line-height:112%'>[]</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><b><span
style='font-size:9.0pt;line-height:112%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>dir</span><span
style='font-size:9.0pt;line-height:112%'>(L)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>['__add__', '__class__',
'__contains__', '__delattr__', '__delitem__',</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'__dir__', '__doc__',
'__eq__', '__format__', '__ge__',</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'__getattribute__',
'__getitem__', '__gt__', '__hash__', '__iadd__',</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'__imul__', '__init__',
'__iter__', '__le__', '__len__', '__lt__',</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'__mul__', '__ne__',
'__new__', '__reduce__', '__reduce_ex__',</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'__repr__',
'__reversed__', '__rmul__', '__setattr__', '__setitem__',</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'__sizeof__', '__str__',
'__subclasshook__', 'append', 'clear',</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'copy', 'count',
'extend', 'index', 'insert', 'pop', 'remove',</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'reverse', 'sort']</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.1pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span
style='font-size:9.0pt;line-height:107%'>[d </span><b><span style='font-size:
9.0pt;line-height:107%;color:#007021'>for </span></b><span style='font-size:
9.0pt;line-height:107%'>d </span><b><span style='font-size:9.0pt;line-height:
107%;color:#007021'>in </span></b><span style='font-size:9.0pt;line-height:
107%;color:#007021'>dir</span><span style='font-size:9.0pt;line-height:107%'>(L)
</span><b><span style='font-size:9.0pt;line-height:107%;color:#007021'>if </span></b><span
style='font-size:9.0pt;line-height:107%;color:#4070A1'>'__' </span><b><span
style='font-size:9.0pt;line-height:107%;color:#007021'>not in </span></b><span
style='font-size:9.0pt;line-height:107%'>d]</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:15.0pt;margin-left:2.15pt;text-align:left;text-indent:-2.9pt;
line-height:112%'><span style='position:relative;z-index:-1895825408'><span
style='left:0px;position:absolute;left:-5px;top:-197px;width:611px;height:327px'><img
width=611 height=327
src="Python%20Frequently%20Asked%20Questions_files/image002.gif"></span></span><span
style='font-size:9.0pt;line-height:112%;color:#333333'>['append', 'clear',
'copy', 'count', 'extend', 'index', 'insert', 'pop', 'remove', </span><i><span
style='font-size:5.0pt;line-height:112%;font-family:"Cambria",serif;color:red'>,</span></i><sub><span
style='font-size:7.5pt;line-height:112%;font-family:"Cambria",serif;color:red'>&#8594;</span></sub><span
style='font-size:9.0pt;line-height:112%;color:#333333'>'reverse', 'sort']</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><b><span
style='font-size:9.0pt;line-height:112%;color:#C75C0A'>&gt;&gt;&gt; </span></b><span
style='font-size:9.0pt;line-height:112%'>help(L</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>.</span><span style='font-size:9.0pt;
line-height:112%'>append)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:12.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>Help on built-in
function append:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>append(...)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:22.0pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>L.append(object) -&gt;
None -- append object to end</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:24.6pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continues on next page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>1.2. Python in the real world</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=612 height=85
src="Python%20Frequently%20Asked%20Questions_files/image003.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>With the interpreter,
documentation is never far from the student as they are programming.</p>

<p class=MsoNormal style='margin-left:-.25pt'>There are also good IDEs for
Python. IDLE is a cross-platform IDE for Python that is written in Python using
Tkinter. Emacs users will be happy to know that there is a very good Python
mode for Emacs. All of these programming environments provide syntax highlighting,
auto-indenting, and access to the interactive interpreter while coding. Consult
<a href="https://wiki.python.org/moin/PythonEditors"><span style='color:#377063;
text-decoration:none'>the Python wiki</span></a><span style='color:#377063'> </span>for
a full list of Python editing environments.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If you want to discuss Pythons
use in education, you may be interested in joining <a
href="https://www.python.org/community/sigs/current/edu-sig"><span
style='color:#377063;text-decoration:none'>the edu-sig mailing list</span></a>.</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection5>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 127439"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>CHAPTER</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>TWO</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 127440"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>PROGRAMMING
FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>2.1 General Questions</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:31.15pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.1.1 Is there a source code level debugger
with breakpoints, single-stepping, etc.?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Yes.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Several debuggers for Python are
described below, and the built-in function <span style='font-size:9.0pt;
line-height:108%'>breakpoint() </span>allows you to drop into any of them.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The pdb module is a simple but
adequate console-mode debugger for Python. It is part of the standard Python
library, and is <span style='font-size:9.0pt;line-height:108%'>documented in
the Library Reference Manual</span>. You can also write your own debugger by
using the code for pdb as an example.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The IDLE interactive development
environment, which is part of the standard Python distribution (normally
available as <a
href="https://github.com/python/cpython/blob/main/Tools/scripts/idle3"><span
style='color:#377063;text-decoration:none'>Tools/scripts/idle3</span></a>),
includes a graphical debugger.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:3.25pt;
margin-left:-.25pt;line-height:132%'>PythonWin is a Python IDE that includes a
GUI debugger based on pdb. The PythonWin debugger colors breakpoints and has
quite a few cool features such as debugging non-PythonWin programs. PythonWin
is available as part of <a href="https://github.com/mhammond/pywin32"><span
style='color:#377063;text-decoration:none'>pywin32</span></a><span
style='color:#377063'> </span>project and as a part of the <a
href="https://www.activestate.com/products/python/"><span style='color:#377063;
text-decoration:none'>ActivePython</span></a><span style='color:#377063'> </span>distribution.
<a href="https://eric-ide.python-projects.org/"><span style='color:#377063;
text-decoration:none'>Eric</span></a><span style='color:#377063'> </span>is an
IDE built on PyQt and the Scintilla editing component. <a
href="https://github.com/rocky/python3-trepan/"><span style='color:#377063;
text-decoration:none'>trepan3k</span></a><span style='color:#377063'> </span>is
a gdb-like debugger.</p>

<p class=MsoNormal style='margin-left:-.25pt'><a
href="https://code.visualstudio.com/"><span style='color:#377063;text-decoration:
none'>Visual Studio Code</span></a><span style='color:#377063'> </span>is an
IDE with debugging tools that integrates with version-control software.</p>

<p class=MsoNormal style='margin-left:-.25pt'>There are a number of commercial
Python IDEs that include graphical debuggers. They include:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:24.9pt;text-align:left;text-indent:-8.95pt;
line-height:110%'><span style='line-height:110%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://wingware.com/"><span style='color:#377063;
text-decoration:none'>Wing IDE</span></a></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:24.9pt;text-align:left;text-indent:-8.95pt;
line-height:110%'><span style='line-height:110%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://www.activestate.com/products/komodo-ide/"><span
style='color:#377063;text-decoration:none'>Komodo IDE</span></a></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:16.4pt;margin-left:24.9pt;text-align:left;text-indent:-8.95pt;
line-height:110%'><span style='line-height:110%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://www.jetbrains.com/pycharm/"><span
style='color:#377063;text-decoration:none'>PyCharm</span></a></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.1.2 Are there tools to help find bugs or perform static
analysis?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Yes.</p>

<p class=MsoNormal style='margin-left:-.25pt'><a
href="https://pylint.pycqa.org/en/latest/index.html"><span style='color:#377063;
text-decoration:none'>Pylint</span></a><span style='color:#377063'> </span>and <a
href="https://github.com/PyCQA/pyflakes"><span style='color:#377063;text-decoration:
none'>Pyflakes</span></a><span style='color:#377063'> </span>do basic checking
that will help you catch bugs sooner.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>Static type checkers such as <a
href="https://mypy-lang.org/"><span style='color:#377063;text-decoration:none'>Mypy</span></a>,
<a href="https://pyre-check.org/"><span style='color:#377063;text-decoration:
none'>Pyre</span></a>, and <a href="https://github.com/google/pytype"><span
style='color:#377063;text-decoration:none'>Pytype</span></a><span
style='color:#377063'> </span>can check type hints in Python source code.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.1.3 How can I create a stand-alone binary from a Python
script?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>You dont need the ability to
compile Python to C code if all you want is a stand-alone program that users
can download and run without having to install the Python distribution first.
There are a number of tools that determine the set of modules required by a
program and bind these modules together with a Python binary to produce a
single executable.</p>

<p class=MsoNormal style='margin-left:-.25pt'>One is to use the freeze tool,
which is included in the Python source tree as <a
href="https://github.com/python/cpython/tree/main/Tools/freeze"><span
style='color:#377063;text-decoration:none'>Tools/freeze</span></a>. It converts
Python byte code to C arrays; with a C compiler you can embed all your modules
into a new program, which is then linked with the standard Python modules.</p>

<p class=MsoNormal style='margin-left:-.25pt'>It works by scanning your source
recursively for import statements (in both forms) and looking for the modules
in the standard Python path as well as in the source directory (for built-in
modules). It then turns the bytecode for modules written in Python into C code
(array initializers that can be turned into code objects using the marshal
module) and creates a custom-made config file that only contains those built-in
modules which are actually used in the program. It then compiles the generated
C code and links it with the rest of the Python interpreter to form a
self-contained binary which acts exactly like your script.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The following packages can help
with the creation of console and GUI executables:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://nuitka.net/"><span style='color:#377063;
text-decoration:none'>Nuitka</span></a><span style='color:#377063'> </span>(Cross-platform)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://pyinstaller.org/"><span style='color:#377063;
text-decoration:none'>PyInstaller</span></a><span style='color:#377063'> </span>(Cross-platform)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://pyoxidizer.readthedocs.io/en/stable/"><span
style='color:#377063;text-decoration:none'>PyOxidizer</span></a><span
style='color:#377063'> </span>(Cross-platform)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://marcelotduarte.github.io/cx_Freeze/"><span
style='color:#377063;text-decoration:none'>cx_Freeze</span></a><span
style='color:#377063'> </span>(Cross-platform)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://github.com/ronaldoussoren/py2app"><span
style='color:#377063;text-decoration:none'>py2app</span></a><span
style='color:#377063'> </span>(macOS only)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:24.9pt;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><a
href="https://www.py2exe.org/"><span style='color:#377063;text-decoration:none'>py2exe</span></a><span
style='color:#377063'> </span>(Windows only)</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.1.4 Are there coding standards or a style guide for Python
programs?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.75pt;
margin-left:-.25pt'>Yes. The coding style required for standard library modules
is documented as <a href="https://peps.python.org/pep-0008/"><b><span
style='color:#377063;text-decoration:none'>PEP</span></b></a><b><span
style='color:#377063'> </span></b><a href="https://peps.python.org/pep-0008/"><b><span
style='color:#377063;text-decoration:none'>8</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2 Core Language</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.1 Why am I getting an UnboundLocalError when the variable
has a value?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>It can be a surprise to get the <span
style='font-size:9.0pt;line-height:108%'>UnboundLocalError </span>in previously
working code when it is modified by adding an assignment statement somewhere in
the body of a function.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>This code:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=105
src="Python%20Frequently%20Asked%20Questions_files/image004.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>works, but this code:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:6.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=99
src="Python%20Frequently%20Asked%20Questions_files/image005.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image006.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.1pt;
margin-left:-.25pt'>This is because when you make an assignment to a variable
in a scope, that variable becomes local to that scope and shadows any similarly
named variable in the outer scope. Since the last statement in foo assigns a
new value to <span style='font-size:9.0pt;line-height:108%'>x</span>, the
compiler recognizes it as a local variable. Consequently when the earlier <span
style='font-size:9.0pt;line-height:108%'>print(x) </span>attempts to print the
uninitialized local variable and an error results.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>8</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>In the example above you can access the outer scope
variable by declaring it global:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=137
src="Python%20Frequently%20Asked%20Questions_files/image007.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>This explicit declaration is required in order to remind
you that (unlike the superficially analogous situation with class and instance
variables) you are actually modifying the value of the variable in the outer
scope:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image008.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You can do a similar thing in a nested scope using the <span
style='font-size:9.0pt;line-height:108%'>nonlocal </span>keyword:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:18.8pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=200
src="Python%20Frequently%20Asked%20Questions_files/image009.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.2 What are the rules for local and global variables in
Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>In Python, variables that are
only referenced inside a function are implicitly global. If a variable is
assigned a value anywhere within the functions body, its assumed to be a
local unless explicitly declared as global.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.0pt;
margin-left:-.25pt'>Though a bit surprising at first, a moments consideration
explains this. On one hand, requiring <span style='font-size:9.0pt;line-height:
108%'>global </span>for assigned variables provides a bar against unintended
side-effects. On the other hand, if <span style='font-size:9.0pt;line-height:
108%'>global </span>was required for all global references, youd be using <span
style='font-size:9.0pt;line-height:108%'>global </span>all the time. Youd have
to declare as global every reference to a built-in function or to a component
of an imported module. This clutter would defeat the usefulness of the <span
style='font-size:9.0pt;line-height:108%'>global </span>declaration for
identifying side-effects.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:31.15pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.2.3 Why do lambdas defined in a loop with
different values all return the same result?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Assume you use a for loop to define a few different lambdas
(or even plain functions), e.g.:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image010.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.1pt;
margin-left:-.25pt'>This gives you a list that contains 5 lambdas that
calculate <span style='font-size:9.0pt;line-height:108%'>x**2</span>. You might
expect that, when called, they would return, respectively, <span
style='font-size:9.0pt;line-height:108%'>0</span>, <span style='font-size:9.0pt;
line-height:108%'>1</span>, <span style='font-size:9.0pt;line-height:108%'>4</span>,
<span style='font-size:9.0pt;line-height:108%'>9</span>, and <span
style='font-size:9.0pt;line-height:108%'>16</span>. However, when you actually
try you will see that they all return <span style='font-size:9.0pt;line-height:
108%'>16</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image011.gif"></span></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection6>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
margin-left:-.25pt'>This happens because <span style='font-size:9.0pt;
line-height:108%'>x </span>is not local to the lambdas, but is defined in the
outer scope, and it is accessed when the lambda is called  not when it is
defined. At the end of the loop, the value of <span style='font-size:9.0pt;
line-height:108%'>x </span>is <span style='font-size:9.0pt;line-height:108%'>4</span>,
so all the functions now return <span style='font-size:9.0pt;line-height:108%'>4**2</span>,
i.e. <span style='font-size:9.0pt;line-height:108%'>16</span>. You can also
verify this by changing the value of <span style='font-size:9.0pt;line-height:
108%'>x </span>and see how the results of the lambdas change:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image012.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>In order to avoid this, you need to save the values in
variables local to the lambdas, so that they dont rely on the value of the
global <span style='font-size:9.0pt;line-height:108%'>x</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image013.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
margin-left:-.25pt'>Here, <span style='font-size:9.0pt;line-height:108%'>n=x </span>creates
a new variable <span style='font-size:9.0pt;line-height:108%'>n </span>local to
the lambda and computed when the lambda is defined so that it has the same
value that <span style='font-size:9.0pt;line-height:108%'>x </span>had at that
point in the loop. This means that the value of <span style='font-size:9.0pt;
line-height:108%'>n </span>will be <span style='font-size:9.0pt;line-height:
108%'>0 </span>in the first lambda, <span style='font-size:9.0pt;line-height:
108%'>1 </span>in the second, <span style='font-size:9.0pt;line-height:108%'>2 </span>in
the third, and so on. Therefore each lambda will now return the correct result:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image014.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:15.85pt;
margin-left:-.25pt'>Note that this behaviour is not peculiar to lambdas, but
applies to regular functions too.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.4 How do I share global variables across modules?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.8pt;
margin-left:-.25pt'>The canonical way to share information across modules
within a single program is to create a special module (often called config or
cfg). Just import the config module in all modules of your application; the
module then becomes available as a global name. Because there is only one
instance of each module, any changes made to the module object get reflected
everywhere. For example: config.py:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image015.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>mod.py:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image016.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>main.py:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image017.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:15.85pt;
margin-left:-.25pt'>Note that using a module is also the basis for implementing
the singleton design pattern, for the same reason.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.5 What are the best practices for using import in a
module?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>In general, dont use <span
style='font-size:9.0pt;line-height:108%'>from modulename import *</span>. Doing
so clutters the importers namespace, and makes it much harder for linters to
detect undefined names.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Import modules at the top of a
file. Doing so makes it clear what other modules your code requires and avoids
questions of whether the module name is in scope. Using one import per line
makes it easy to add and delete module imports, but using multiple imports per
line uses less screen space.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Its good practice if you import
modules in the following order:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>standard library modules  e.g. <span style='font-size:9.0pt;
line-height:108%'>sys</span>, <span style='font-size:9.0pt;line-height:108%'>os</span>,
<span style='font-size:9.0pt;line-height:108%'>argparse</span>, <span
style='font-size:9.0pt;line-height:108%'>re</span></p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>third-party library modules (anything installed in Pythons
site-packages directory)  e.g. <span style='font-size:9.0pt;line-height:108%'>dateutil</span>,
<span style='font-size:9.0pt;line-height:108%'>requests</span>, <span
style='font-size:9.0pt;line-height:108%'>PIL.Image</span></p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>locally developed modules</p>

<p class=MsoNormal style='margin-left:-.25pt'>It is sometimes necessary to move
imports to a function or class to avoid problems with circular imports. Gordon
McMillan says:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'>Circular imports are fine where both modules use the
import &lt;module&gt; form of import. They fail when the 2nd module wants to
grab a name out of the first (from module import name) and the import is at
the top level. Thats because names in the 1st are not yet available, because
the first module is busy importing the 2nd.</p>

<p class=MsoNormal style='margin-left:-.25pt'>In this case, if the second
module is only used in one function, then the import can easily be moved into
that function. By the time the import is called, the first module will have
finished initializing, and the second module can do its import.</p>

<p class=MsoNormal style='margin-left:-.25pt'>It may also be necessary to move
imports out of the top level of code if some of the modules are
platform-specific. In that case, it may not even be possible to import all of
the modules at the top of the file. In this case, importing the correct modules
in the corresponding platform-specific code is a good option.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.75pt;
margin-left:-.25pt'>Only move imports into a local scope, such as inside a
function definition, if its necessary to solve a problem such as avoiding a
circular import or are trying to reduce the initialization time of a module.
This technique is especially helpful if many of the imports are unnecessary
depending on how the program executes. You may also want to move imports into a
function if the modules are only ever used in that function. Note that loading
a module the first time may be expensive because of the one time initialization
of the module, but loading a module multiple times is virtually free, costing
only a couple of dictionary lookups. Even if the module name has gone out of
scope, the module is probably available in <span style='font-size:9.0pt;
line-height:108%'>sys.modules</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.6 Why are default values shared between objects?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>This type of bug commonly bites neophyte programmers.
Consider this function:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image018.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The first time you call this
function, <span style='font-size:9.0pt;line-height:108%'>mydict </span>contains
a single item. The second time, <span style='font-size:9.0pt;line-height:108%'>mydict
</span>contains two items because when <span style='font-size:9.0pt;line-height:
108%'>foo() </span>begins executing, <span style='font-size:9.0pt;line-height:
108%'>mydict </span>starts out with an item already in it.</p>

<p class=MsoNormal style='margin-left:-.25pt'>It is often expected that a
function call creates new objects for default values. This is not what happens.
Default values are created exactly once, when the function is defined. If that
object is changed, like the dictionary in this example, subsequent calls to the
function will refer to this changed object.</p>

<p class=MsoNormal style='margin-left:-.25pt'>By definition, immutable objects
such as numbers, strings, tuples, and <span style='font-size:9.0pt;line-height:
108%'>None</span>, are safe from change. Changes to mutable objects such as
dictionaries, lists, and class instances can lead to confusion.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Because of this feature, it is good programming practice to
not use mutable objects as default values. Instead, use <span style='font-size:
9.0pt;line-height:108%'>None </span>as the default value and inside the
function, check if the parameter is <span style='font-size:9.0pt;line-height:
108%'>None </span>and create a new list/dictionary/whatever if it is. For
example, dont write:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image019.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>but:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image020.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>This feature can be useful. When you have a function thats
time-consuming to compute, a common technique is to cache the parameters and
the resulting value of each call to the function, and return the cached value
if the same value is requested again. This is called memoizing, and can be
implemented like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=153
src="Python%20Frequently%20Asked%20Questions_files/image021.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>You could use a global variable containing a dictionary
instead of the default value; its a matter of taste.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:31.15pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.2.7 How can I pass optional or keyword
parameters from one function to another?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Collect the arguments using the <span style='font-size:
9.0pt;line-height:108%'>* </span>and <span style='font-size:9.0pt;line-height:
108%'>** </span>specifiers in the functions parameter list; this gives you the
positional arguments as a tuple and the keyword arguments as a dictionary. You
can then pass these arguments when calling another function by using <span
style='font-size:9.0pt;line-height:108%'>* </span>and <span style='font-size:
9.0pt;line-height:108%'>**</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image022.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.8 What is the difference between arguments and parameters?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'><i><span style='color:#355F7C'>Parameters </span></i>are
defined by the names that appear in a function definition, whereas <i><span
style='color:#355F7C'>arguments </span></i>are the values actually passed to a
function when calling it. Parameters define what <i><span style='color:#355F7C'>kind
of arguments </span></i>a function can accept. For example, given the function
definition:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image023.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'><i>foo</i>, <i>bar </i>and <i>kwargs </i>are parameters of <span
style='font-size:9.0pt;line-height:108%'>func</span>. However, when calling <span
style='font-size:9.0pt;line-height:108%'>func</span>, for example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.25pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image024.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.7pt;
margin-left:-.25pt'>the values <span style='font-size:9.0pt;line-height:108%'>42</span>,
<span style='font-size:9.0pt;line-height:108%'>314</span>, and <span
style='font-size:9.0pt;line-height:108%'>somevar </span>are arguments.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.9 Why did changing list y also change list x?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If you wrote code like:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=121
src="Python%20Frequently%20Asked%20Questions_files/image025.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>you might be wondering why
appending an element to <span style='font-size:9.0pt;line-height:108%'>y </span>changed
<span style='font-size:9.0pt;line-height:108%'>x </span>too.</p>

<p class=MsoNormal style='margin-left:-.25pt'>There are two factors that
produce this result:</p>

<p class=MsoNormal style='margin-left:24.95pt;text-indent:-13.3pt'><span
style='line-height:108%'>1)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Variables are simply names that refer to objects. Doing <span
style='font-size:9.0pt;line-height:108%'>y = x </span>doesnt create a copy of
the list  it creates a new variable <span style='font-size:9.0pt;line-height:
108%'>y </span>that refers to the same object <span style='font-size:9.0pt;
line-height:108%'>x </span>refers to. This means that there is only one object
(the list), and both <span style='font-size:9.0pt;line-height:108%'>x </span>and
<span style='font-size:9.0pt;line-height:108%'>y </span>refer to it.</p>

<p class=MsoNormal style='margin-left:24.95pt;text-indent:-13.3pt'><span
style='line-height:108%'>2)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Lists are <i><span style='color:#355F7C'>mutable</span></i>,
which means that you can change their content.</p>

<p class=MsoNormal style='margin-left:-.25pt'>After the call to <span
style='font-size:9.0pt;line-height:108%'>append()</span>, the content of the
mutable object has changed from <span style='font-size:9.0pt;line-height:108%'>[]
</span>to <span style='font-size:9.0pt;line-height:108%'>[10]</span>. Since
both the variables refer to the same object, using either name accesses the
modified value <span style='font-size:9.0pt;line-height:108%'>[10]</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If we instead assign an immutable object to <span
style='font-size:9.0pt;line-height:108%'>x</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=121
src="Python%20Frequently%20Asked%20Questions_files/image026.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:-.25pt;text-align:left;line-height:107%'>we
can see that in this case <span style='font-size:9.0pt;line-height:107%'>x </span>and
<span style='font-size:9.0pt;line-height:107%'>y </span>are not equal anymore.
This is because integers are <i><span style='color:#355F7C'>immutable</span></i>,
and when we do <span style='font-size:9.0pt;line-height:107%'>x = x + 1 </span>we
are not mutating the int <span style='font-size:9.0pt;line-height:107%'>5 </span>by
incrementing its value; instead, we are creating a new object (the int <span
style='font-size:9.0pt;line-height:107%'>6</span>) and assigning it to <span
style='font-size:9.0pt;line-height:107%'>x </span>(that is, changing which
object <span style='font-size:9.0pt;line-height:107%'>x </span>refers to).
After this assignment we have two objects (the ints <span style='font-size:
9.0pt;line-height:107%'>6 </span>and <span style='font-size:9.0pt;line-height:
107%'>5</span>) and two variables that refer to them (<span style='font-size:
9.0pt;line-height:107%'>x </span>now refers to <span style='font-size:9.0pt;
line-height:107%'>6 </span>but <span style='font-size:9.0pt;line-height:107%'>y
</span>still refers to <span style='font-size:9.0pt;line-height:107%'>5</span>).</p>

<p class=MsoNormal style='margin-left:-.25pt'>Some operations (for example <span
style='font-size:9.0pt;line-height:108%'>y.append(10) </span>and <span
style='font-size:9.0pt;line-height:108%'>y.sort()</span>) mutate the object,
whereas superficially similar operations (for example <span style='font-size:
9.0pt;line-height:108%'>y = y + [10] </span>and <span style='font-size:9.0pt;
line-height:108%'>sorted(y)</span>) create a new object. In general in Python
(and in all cases in the standard library) a method that mutates an object will
return <span style='font-size:9.0pt;line-height:108%'>None </span>to help avoid
getting the two types of operations confused. So if you mistakenly write <span
style='font-size:9.0pt;line-height:108%'>y.sort() </span>thinking it will give
you a sorted copy of <span style='font-size:9.0pt;line-height:108%'>y</span>,
youll instead end up with <span style='font-size:9.0pt;line-height:108%'>None</span>,
which will likely cause your program to generate an easily diagnosed error.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.6pt;
margin-left:-.25pt'>However, there is one class of operations where the same
operation sometimes has different behaviors with different types: the augmented
assignment operators. For example, <span style='font-size:9.0pt;line-height:
108%'>+= </span>mutates lists but not tuples or ints (<span style='font-size:
9.0pt;line-height:108%'>a_list += [1,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>2, 3] </span>is equivalent to <span
style='font-size:9.0pt;line-height:112%'>a_list.extend([1, 2, 3]) </span>and
mutates <span style='font-size:9.0pt;line-height:112%'>a_list</span>, whereas <span
style='font-size:9.0pt;line-height:112%'>some_tuple += (1, 2, 3) </span>and <span
style='font-size:9.0pt;line-height:112%'>some_int += 1 </span>create new
objects).</p>

<p class=MsoNormal style='margin-left:-.25pt'>In other words:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>If we have a mutable object (<span style='font-size:9.0pt;
line-height:108%'>list</span>, <span style='font-size:9.0pt;line-height:108%'>dict</span>,
<span style='font-size:9.0pt;line-height:108%'>set</span>, etc.), we can use
some specific operations to mutate it and all the variables that refer to it
will see the change.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>If we have an immutable object (<span style='font-size:9.0pt;
line-height:108%'>str</span>, <span style='font-size:9.0pt;line-height:108%'>int</span>,
<span style='font-size:9.0pt;line-height:108%'>tuple</span>, etc.), all the
variables that refer to it will always see the same value, but operations that
transform that value into a new value always return a new object.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.5pt;
margin-left:-.25pt'>If you want to know if two variables refer to the same
object or not, you can use the <span style='font-size:9.0pt;line-height:108%'>is
</span>operator, or the built-in function <span style='font-size:9.0pt;
line-height:108%'>id()</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.10 How do I write a function with output parameters (call by
reference)?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Remember that arguments are
passed by assignment in Python. Since assignment just creates references to
objects, theres no alias between an argument name in the caller and callee,
and so no call-by-reference per se. You can achieve the desired effect in a
number of ways.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.95pt;text-indent:-13.3pt'><span style='line-height:108%'>1)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>By returning a
tuple of the results:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=137
src="Python%20Frequently%20Asked%20Questions_files/image027.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>This is almost always the
clearest solution.</p>

<p class=MsoNormal style='margin-left:24.95pt;text-indent:-13.3pt'><span
style='line-height:108%'>2)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>By using global variables. This isnt thread-safe, and is not
recommended.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.95pt;text-indent:-13.3pt'><span style='line-height:108%'>3)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>By passing a
mutable (changeable in-place) object:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=137
src="Python%20Frequently%20Asked%20Questions_files/image028.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.95pt;text-indent:-13.3pt'><span style='line-height:108%'>4)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>By passing in a
dictionary that gets mutated:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=137
src="Python%20Frequently%20Asked%20Questions_files/image029.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.95pt;text-indent:-13.3pt'><span style='line-height:108%'>5)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>Or bundle up
values in a class instance:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=216
src="Python%20Frequently%20Asked%20Questions_files/image030.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>Theres almost never a good
reason to get this complicated.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>Your best choice is to return a tuple containing the
multiple results.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.11 How do you make a higher order function in Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You have two choices: you can use nested scopes or you can
use callable objects. For example, suppose you wanted to define <span
style='font-size:9.0pt;line-height:108%'>linear(a,b) </span>which returns a
function <span style='font-size:9.0pt;line-height:108%'>f(x) </span>that
computes the value <span style='font-size:9.0pt;line-height:108%'>a*x+b</span>.
Using nested scopes:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image031.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Or using a callable object:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=56
src="Python%20Frequently%20Asked%20Questions_files/image032.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continues on next page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=612 height=85
src="Python%20Frequently%20Asked%20Questions_files/image033.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>In both cases,</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.4pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image034.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>gives a callable object where <span
style='font-size:9.0pt;line-height:108%'>taxes(10e6) == 0.3 * 10e6 + 2</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The callable object approach has the disadvantage that it
is a bit slower and results in slightly longer code. However, note that a
collection of callables can share their signature via inheritance:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image035.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Object can encapsulate state for several methods:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=248
src="Python%20Frequently%20Asked%20Questions_files/image036.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>Here <span style='font-size:9.0pt;line-height:108%'>inc()</span>,
<span style='font-size:9.0pt;line-height:108%'>dec() </span>and <span
style='font-size:9.0pt;line-height:108%'>reset() </span>act like functions
which share the same counting variable.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.12 How do I copy an object in Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>In general, try <span
style='font-size:9.0pt;line-height:108%'>copy.copy() </span>or <span
style='font-size:9.0pt;line-height:108%'>copy.deepcopy() </span>for the general
case. Not all objects can be copied, but most can.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Some objects can be copied more easily. Dictionaries have a
<span style='font-size:9.0pt;line-height:108%'>copy() </span>method:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image037.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Sequences can be copied by slicing:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image038.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.13 How can I find the methods or attributes of an object?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>For an instance <span
style='font-size:9.0pt;line-height:108%'>x </span>of a user-defined class, <span
style='font-size:9.0pt;line-height:108%'>dir(x) </span>returns an alphabetized
list of the names containing the instance attributes and methods and attributes
defined by its class.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.14 How can my code discover the name of an object?</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'>Generally
speaking, it cant, because objects dont really have names. Essentially,
assignment always binds a name to a value; the same is true of <span
style='font-size:9.0pt;line-height:107%'>def </span>and <span style='font-size:
9.0pt;line-height:107%'>class </span>statements, but in that case the value is
a callable. Consider the following code:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=168
src="Python%20Frequently%20Asked%20Questions_files/image039.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Arguably the class has a name:
even though it is bound to two names and invoked through the name <span
style='font-size:9.0pt;line-height:108%'>B </span>the created instance is still
reported as an instance of class <span style='font-size:9.0pt;line-height:108%'>A</span>.
However, it is impossible to say whether the instances name is <span
style='font-size:9.0pt;line-height:108%'>a </span>or <span style='font-size:
9.0pt;line-height:108%'>b</span>, since both names are bound to the same value.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Generally speaking it should not
be necessary for your code to know the names of particular values. Unless you
are deliberately writing introspective programs, this is usually an indication
that a change of approach might be beneficial.</p>

<p class=MsoNormal style='margin-left:-.25pt'>In comp.lang.python, Fredrik
Lundh once gave an excellent analogy in answer to this question:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'>The same way as you get the name of that cat you
found on your porch: the cat (object) itself cannot tell you its name, and it
doesnt really care  so the only way to find out what its called is to ask
all your neighbours (namespaces) if its their cat (object)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:25.4pt'>.and dont be surprised if youll find that its known by
many names, or no name at all!</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.15 Whats up with the comma operators precedence?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Comma is not an operator in Python. Consider this session:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image040.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Since the comma is not an operator, but a separator between
expressions the above is evaluated as if you had entered:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image041.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>not:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image042.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>The same is true of the various assignment operators (<span
style='font-size:9.0pt;line-height:108%'>=</span>, <span style='font-size:9.0pt;
line-height:108%'>+= </span>etc). They are not truly operators but syntactic
delimiters in assignment statements.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.16 Is there an equivalent of Cs ?: ternary operator?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Yes, there is. The syntax is as follows:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image043.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Before this syntax was introduced
in Python 2.5, a common idiom was to use logical operators:</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection7>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image044.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>However, this idiom is unsafe, as it can give wrong results
when <i>on_true </i>has a false boolean value. Therefore, it is always better
to use the <span style='font-size:9.0pt;line-height:108%'>... if ... else ... </span>form.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.17 Is it possible to write obfuscated one-liners in Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.35pt;
margin-left:-.25pt'>Yes. Usually this is done by nesting <span
style='font-size:9.0pt;line-height:108%'>lambda </span>within <span
style='font-size:9.0pt;line-height:108%'>lambda</span>. See the following three
examples, slightly adapted from Ulf Bartelt:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:13.1pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%;color:#007021'>from </span></b><b><span
style='font-size:9.0pt;line-height:107%;color:#0D85B5'>functools </span></b><b><span
style='font-size:9.0pt;line-height:107%;color:#007021'>import </span></b><span
style='font-size:9.0pt;line-height:107%'>reduce</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.05pt;margin-left:-.25pt;text-align:left;line-height:107%'><i><span
style='font-size:9.0pt;line-height:107%;color:#407F8F'># Primes &lt; 1000</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:58.55pt;
margin-bottom:12.5pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#007021'>print</span><span
style='font-size:9.0pt;line-height:112%'>(</span><span style='font-size:9.0pt;
line-height:112%;color:#007021'>list</span><span style='font-size:9.0pt;
line-height:112%'>(</span><span style='font-size:9.0pt;line-height:112%;
color:#007021'>filter</span><span style='font-size:9.0pt;line-height:112%'>(</span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>None</span></b><span
style='font-size:9.0pt;line-height:112%'>,</span><span style='font-size:9.0pt;
line-height:112%;color:#007021'>map</span><span style='font-size:9.0pt;
line-height:112%'>(</span><b><span style='font-size:9.0pt;line-height:112%;
color:#007021'>lambda </span></b><span style='font-size:9.0pt;line-height:112%'>y:y</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>*</span><span
style='font-size:9.0pt;line-height:112%'>reduce(</span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>lambda </span></b><span
style='font-size:9.0pt;line-height:112%'>x,y:x</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>*</span><span style='font-size:9.0pt;
line-height:112%'>y</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>!=</span><span style='font-size:9.0pt;line-height:112%;
color:#217F4F'>0</span><span style='font-size:9.0pt;line-height:112%'>, </span><span
style='font-size:9.0pt;line-height:112%;color:#007021'>map</span><span
style='font-size:9.0pt;line-height:112%'>(</span><b><span style='font-size:
9.0pt;line-height:112%;color:#007021'>lambda </span></b><span style='font-size:
9.0pt;line-height:112%'>x,y</span><span style='font-size:9.0pt;line-height:
112%;color:#666666'>=</span><span style='font-size:9.0pt;line-height:112%'>y:y</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>%</span><span
style='font-size:9.0pt;line-height:112%'>x,</span><span style='font-size:9.0pt;
line-height:112%;color:#007021'>range</span><span style='font-size:9.0pt;
line-height:112%'>(</span><span style='font-size:9.0pt;line-height:112%;
color:#217F4F'>2</span><span style='font-size:9.0pt;line-height:112%'>,</span><span
style='font-size:9.0pt;line-height:112%;color:#007021'>int</span><span
style='font-size:9.0pt;line-height:112%'>(</span><span style='font-size:9.0pt;
line-height:112%;color:#007021'>pow</span><span style='font-size:9.0pt;
line-height:112%'>(y,</span><span style='font-size:9.0pt;line-height:112%;
color:#217F4F'>0.5</span><span style='font-size:9.0pt;line-height:112%'>)</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>+</span><span
style='font-size:9.0pt;line-height:112%;color:#217F4F'>1</span><span
style='font-size:9.0pt;line-height:112%'>))),</span><span style='font-size:
9.0pt;line-height:112%;color:#217F4F'>1</span><span style='font-size:9.0pt;
line-height:112%'>),</span><span style='font-size:9.0pt;line-height:112%;
color:#007021'>range</span><span style='font-size:9.0pt;line-height:112%'>(</span><span
style='font-size:9.0pt;line-height:112%;color:#217F4F'>2</span><span
style='font-size:9.0pt;line-height:112%'>,</span><span style='font-size:9.0pt;
line-height:112%;color:#217F4F'>1000</span><span style='font-size:9.0pt;
line-height:112%'>)))))</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:69.3pt;
margin-bottom:12.55pt;margin-left:-.25pt;text-align:left;line-height:112%'><i><span
style='font-size:9.0pt;line-height:112%;color:#407F8F'># First 10 Fibonacci
numbers </span></i><span style='font-size:9.0pt;line-height:112%;color:#007021'>print</span><span
style='font-size:9.0pt;line-height:112%'>(</span><span style='font-size:9.0pt;
line-height:112%;color:#007021'>list</span><span style='font-size:9.0pt;
line-height:112%'>(</span><span style='font-size:9.0pt;line-height:112%;
color:#007021'>map</span><span style='font-size:9.0pt;line-height:112%'>(</span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>lambda </span></b><span
style='font-size:9.0pt;line-height:112%'>x,f</span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>=</span><b><span style='font-size:9.0pt;
line-height:112%;color:#007021'>lambda </span></b><span style='font-size:9.0pt;
line-height:112%'>x,f:(f(x</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>-</span><span style='font-size:9.0pt;line-height:112%;
color:#217F4F'>1</span><span style='font-size:9.0pt;line-height:112%'>,f)</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>+</span><span
style='font-size:9.0pt;line-height:112%'>f(x</span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>-</span><span style='font-size:9.0pt;
line-height:112%;color:#217F4F'>2</span><span style='font-size:9.0pt;
line-height:112%'>,f)) </span><b><span style='font-size:9.0pt;line-height:112%;
color:#007021'>if </span></b><span style='font-size:9.0pt;line-height:112%'>x</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>&gt;</span><span
style='font-size:9.0pt;line-height:112%;color:#217F4F'>1 </span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>else </span></b><span
style='font-size:9.0pt;line-height:112%;color:#217F4F'>1</span><span
style='font-size:9.0pt;line-height:112%'>: f(x,f), </span><span
style='font-size:9.0pt;line-height:112%;color:#007021'>range</span><span
style='font-size:9.0pt;line-height:112%'>(</span><span style='font-size:9.0pt;
line-height:112%;color:#217F4F'>10</span><span style='font-size:9.0pt;
line-height:112%'>))))</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.05pt;margin-left:-.25pt;text-align:left;line-height:107%'><i><span
style='font-size:9.0pt;line-height:107%;color:#407F8F'># Mandelbrot set</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:37.05pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895824384'><span style='left:0px;position:
absolute;left:-5px;top:-181px;width:611px;height:376px'><img width=611
height=376 src="Python%20Frequently%20Asked%20Questions_files/image045.gif"></span></span><span
style='font-size:9.0pt;line-height:112%;color:#007021'>print</span><span
style='font-size:9.0pt;line-height:112%'>((</span><b><span style='font-size:
9.0pt;line-height:112%;color:#007021'>lambda </span></b><span style='font-size:
9.0pt;line-height:112%'>Ru,Ro,Iu,Io,IM,Sx,Sy:reduce(</span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>lambda </span></b><span
style='font-size:9.0pt;line-height:112%'>x,y:x</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>+</span><span style='font-size:9.0pt;
line-height:112%;color:#4070A1'>'<b>\n</b>'</span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>+</span><span style='font-size:9.0pt;
line-height:112%'>y,</span><span style='font-size:9.0pt;line-height:112%;
color:#007021'>map</span><span style='font-size:9.0pt;line-height:112%'>(</span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>lambda </span></b><span
style='font-size:9.0pt;line-height:112%'>y, Iu</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:112%'>Iu,Io</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>=</span><span style='font-size:9.0pt;line-height:112%'>Io,Ru</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:112%'>Ru,Ro</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:112%'>Ro,Sy</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>=</span><span style='font-size:9.0pt;line-height:112%'>Sy,L</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>=</span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>lambda </span></b><span
style='font-size:9.0pt;line-height:112%'>yc,Iu</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:112%'>Iu,Io</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>=</span><span style='font-size:9.0pt;line-height:112%'>Io,Ru</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:112%'>Ru,Ro</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:112%'>Ro,i</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>=</span><span style='font-size:9.0pt;line-height:112%'>IM, Sx</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:112%'>Sx,Sy</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:112%'>Sy:reduce(</span><b><span style='font-size:9.0pt;line-height:
112%;color:#007021'>lambda </span></b><span style='font-size:9.0pt;line-height:
112%'>x,y:x</span><span style='font-size:9.0pt;line-height:112%;color:#666666'>+</span><span
style='font-size:9.0pt;line-height:112%'>y,</span><span style='font-size:9.0pt;
line-height:112%;color:#007021'>map</span><span style='font-size:9.0pt;
line-height:112%'>(</span><b><span style='font-size:9.0pt;line-height:112%;
color:#007021'>lambda </span></b><span style='font-size:9.0pt;line-height:112%'>x,xc</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:112%'>Ru,yc</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:112%'>yc,Ru</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>=</span><span style='font-size:9.0pt;line-height:112%'>Ru,Ro</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>=</span><span
style='font-size:9.0pt;line-height:112%'>Ro, i</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>=</span><span style='font-size:9.0pt;
line-height:112%'>i,Sx</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>=</span><span style='font-size:9.0pt;line-height:112%'>Sx,F</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>=</span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>lambda </span></b><span
style='font-size:9.0pt;line-height:112%'>xc,yc,x,y,k,f</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>=</span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>lambda </span></b><span
style='font-size:9.0pt;line-height:112%'>xc,yc,x,y,k,f:(k</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>&lt;=</span><span
style='font-size:9.0pt;line-height:112%;color:#217F4F'>0</span><span
style='font-size:9.0pt;line-height:112%'>)</span><b><span style='font-size:
9.0pt;line-height:112%;color:#007021'>or </span></b><span style='font-size:
9.0pt;line-height:112%'>(x</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>*</span><span style='font-size:9.0pt;line-height:112%'>x</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>+</span><span
style='font-size:9.0pt;line-height:112%'>y</span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>*</span><span style='font-size:9.0pt;
line-height:112%'>y </span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>&gt;=</span><span style='font-size:9.0pt;line-height:112%;
color:#217F4F'>4.0</span><span style='font-size:9.0pt;line-height:112%'>) </span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>or </span></b><span
style='font-size:9.0pt;line-height:112%;color:#217F4F'>1</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>+</span><span
style='font-size:9.0pt;line-height:112%'>f(xc,yc,x</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>*</span><span
style='font-size:9.0pt;line-height:112%'>x</span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>-</span><span style='font-size:9.0pt;
line-height:112%'>y</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>*</span><span style='font-size:9.0pt;line-height:112%'>y</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>+</span><span
style='font-size:9.0pt;line-height:112%'>xc,</span><span style='font-size:9.0pt;
line-height:112%;color:#217F4F'>2.0</span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>*</span><span style='font-size:9.0pt;
line-height:112%'>x</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>*</span><span style='font-size:9.0pt;line-height:112%'>y</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>+</span><span
style='font-size:9.0pt;line-height:112%'>yc,k</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>-</span><span style='font-size:9.0pt;
line-height:112%;color:#217F4F'>1</span><span style='font-size:9.0pt;
line-height:112%'>,f):f(xc,yc,x,y,k,f):</span><span style='font-size:9.0pt;
line-height:112%;color:#007021'>chr</span><span style='font-size:9.0pt;
line-height:112%'>(</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#217F4F'>64</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>+</span><span
style='font-size:9.0pt;line-height:112%'>F(Ru</span><span style='font-size:
9.0pt;line-height:112%;color:#666666'>+</span><span style='font-size:9.0pt;
line-height:112%'>x</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>*</span><span style='font-size:9.0pt;line-height:112%'>(Ro</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>-</span><span
style='font-size:9.0pt;line-height:112%'>Ru)</span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>/</span><span style='font-size:9.0pt;
line-height:112%'>Sx,yc,</span><span style='font-size:9.0pt;line-height:112%;
color:#217F4F'>0</span><span style='font-size:9.0pt;line-height:112%'>,</span><span
style='font-size:9.0pt;line-height:112%;color:#217F4F'>0</span><span
style='font-size:9.0pt;line-height:112%'>,i)),</span><span style='font-size:
9.0pt;line-height:112%;color:#007021'>range</span><span style='font-size:9.0pt;
line-height:112%'>(Sx))):L(Iu</span><span style='font-size:9.0pt;line-height:
112%;color:#666666'>+</span><span style='font-size:9.0pt;line-height:112%'>y</span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>*</span><span
style='font-size:9.0pt;line-height:112%'>(Io</span><span style='font-size:9.0pt;
line-height:112%;color:#666666'>-</span><span style='font-size:9.0pt;
line-height:112%'>Iu)</span><span style='font-size:9.0pt;line-height:112%;
color:#666666'>/</span><span style='font-size:9.0pt;line-height:112%'>Sy),</span><span
style='font-size:9.0pt;line-height:112%;color:#007021'>range</span><span
style='font-size:9.0pt;line-height:112%'>(Sy</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.25pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>))))(</span><span style='font-size:
9.0pt;line-height:107%;color:#666666'>-</span><span style='font-size:9.0pt;
line-height:107%;color:#217F4F'>2.1</span><span style='font-size:9.0pt;
line-height:107%'>, </span><span style='font-size:9.0pt;line-height:107%;
color:#217F4F'>0.7</span><span style='font-size:9.0pt;line-height:107%'>, </span><span
style='font-size:9.0pt;line-height:107%;color:#666666'>-</span><span
style='font-size:9.0pt;line-height:107%;color:#217F4F'>1.2</span><span
style='font-size:9.0pt;line-height:107%'>, </span><span style='font-size:9.0pt;
line-height:107%;color:#217F4F'>1.2</span><span style='font-size:9.0pt;
line-height:107%'>, </span><span style='font-size:9.0pt;line-height:107%;
color:#217F4F'>30</span><span style='font-size:9.0pt;line-height:107%'>, </span><span
style='font-size:9.0pt;line-height:107%;color:#217F4F'>80</span><span
style='font-size:9.0pt;line-height:107%'>, </span><span style='font-size:9.0pt;
line-height:107%;color:#217F4F'>24</span><span style='font-size:9.0pt;
line-height:107%'>))</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.05pt;margin-left:-.75pt;text-align:left;text-indent:0in;
line-height:107%'><i><span style='font-size:9.0pt;line-height:107%;color:#407F8F'>#                     \___
___/ \___ ___/ |                   |                |__ lines on screen</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.05pt;margin-left:-.75pt;text-align:left;text-indent:0in;
line-height:107%'><i><span style='font-size:9.0pt;line-height:107%;color:#407F8F'>#                    V                        V               |                |______
columns on screen</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.05pt;margin-left:-.75pt;text-align:left;text-indent:0in;
line-height:107%'><i><span style='font-size:9.0pt;line-height:107%;color:#407F8F'>#                     |                         |                          |__________
maximum of &quot;iterations&quot;</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:1.05pt;margin-left:-.75pt;text-align:left;text-indent:0in;
line-height:107%'><i><span style='font-size:9.0pt;line-height:107%;color:#407F8F'>#                     |                                   |_________________
range on y axis</span></i></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:14.05pt;margin-left:-.75pt;text-align:left;text-indent:0in;
line-height:107%'><i><span style='font-size:9.0pt;line-height:107%;color:#407F8F'>#                                |____________________________
range on x axis</span></i></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>Dont try this at home, kids!</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.2.18 What does the slash(/) in the parameter list of a
function mean?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A slash in the argument list of a function denotes that the
parameters prior to it are positional-only. Positionalonly parameters are the
ones without an externally usable name. Upon calling a function that accepts
positional-only parameters, arguments are mapped to parameters based solely on
their position. For example, <span style='font-size:9.0pt;line-height:108%'>divmod()
</span>is a function that accepts positional-only parameters. Its documentation
looks like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image046.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The slash at the end of the parameter list means that both
parameters are positional-only. Thus, calling <span style='font-size:9.0pt;
line-height:108%'>divmod() </span>with keyword arguments would lead to an
error:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:47.4pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image047.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>2.2. Core Language</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>2.3 Numbers and strings</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.3.1 How do I specify hexadecimal and octal integers?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To specify an octal digit, precede the octal value with a
zero, and then a lower or uppercase o. For example, to set the variable a
to the octal value 10 (8 in decimal), type:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image048.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Hexadecimal is just as easy. Simply precede the hexadecimal
number with a zero, and then a lower or uppercase x. Hexadecimal digits can
be specified in lower or uppercase. For example, in the Python interpreter:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=105
src="Python%20Frequently%20Asked%20Questions_files/image049.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.3.2 Why does -22 // 10 return -3?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Its primarily driven by the desire that <span
style='font-size:9.0pt;line-height:108%'>i % j </span>have the same sign as <span
style='font-size:9.0pt;line-height:108%'>j</span>. If you want that, and also
want:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image050.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>then integer division has to
return the floor. C also requires that identity to hold, and then compilers
that truncate <span style='font-size:9.0pt;line-height:108%'>i // j </span>need
to make <span style='font-size:9.0pt;line-height:108%'>i % j </span>have the
same sign as <span style='font-size:9.0pt;line-height:108%'>i</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>There are few real use cases for <span style='font-size:
9.0pt;line-height:108%'>i % j </span>when <span style='font-size:9.0pt;
line-height:108%'>j </span>is negative. When <span style='font-size:9.0pt;
line-height:108%'>j </span>is positive, there are many, and in virtually all of
them its more useful for <span style='font-size:9.0pt;line-height:108%'>i % j </span>to
be <span style='font-size:9.0pt;line-height:108%'>&gt;= 0</span>. If the clock
says 10 now, what did it say 200 hours ago? <span style='font-size:9.0pt;
line-height:108%'>-190 % 12 == 2 </span>is useful; <span style='font-size:9.0pt;
line-height:108%'>-190 % 12 == -10 </span>is a bug waiting to bite.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.3.3 How do I get int literal attribute instead of SyntaxError?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Trying to lookup an <span style='font-size:9.0pt;
line-height:108%'>int </span>literal attribute in the normal manner gives a <span
style='font-size:9.0pt;line-height:108%'>SyntaxError </span>because the period
is seen as a decimal point:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image051.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The solution is to separate the literal from the period
with either a space or parentheses.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image052.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.3.4 How do I convert a string to a number?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>For integers, use the built-in <span
style='font-size:9.0pt;line-height:108%'>int() </span>type constructor, e.g. <span
style='font-size:9.0pt;line-height:108%'>int('144') == 144</span>. Similarly, <span
style='font-size:9.0pt;line-height:108%'>float() </span>converts to a
floating-point number, e.g. <span style='font-size:9.0pt;line-height:108%'>float('144')
== 144.0</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>By default, these interpret the
number as decimal, so that <span style='font-size:9.0pt;line-height:108%'>int('0144')
== 144 </span>holds true, and <span style='font-size:9.0pt;line-height:108%'>int('0x144')
</span>raises <span style='font-size:9.0pt;line-height:108%'>ValueError</span>.
<span style='font-size:9.0pt;line-height:108%'>int(string, base) </span>takes
the base to convert from as a second optional argument, so <span
style='font-size:9.0pt;line-height:108%'>int( '0x144', 16) == 324</span>. If
the base is specified as 0, the number is interpreted using Pythons rules: a
leading 0o indicates octal, and 0x indicates a hex number.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Do not use the built-in function <span
style='font-size:9.0pt;line-height:108%'>eval() </span>if all you need is to
convert strings to numbers. <span style='font-size:9.0pt;line-height:108%'>eval()
</span>will be significantly slower and it presents a security risk: someone
could pass you a Python expression that might have unwanted side effects. For
example, someone could pass <span style='font-size:9.0pt;line-height:108%'>__import__('os').system(&quot;rm
-rf $HOME&quot;) </span>which would erase your home directory.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'><span style='font-size:9.0pt;line-height:108%'>eval() </span>also
has the effect of interpreting numbers as Python expressions, so that e.g. <span
style='font-size:9.0pt;line-height:108%'>eval('09') </span>gives a syntax error
because Python does not allow leading 0 in a decimal number (except 0).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.3.5 How do I convert a number to a string?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.7pt;
margin-left:-.25pt'>To convert, e.g., the number <span style='font-size:9.0pt;
line-height:108%'>144 </span>to the string <span style='font-size:9.0pt;
line-height:108%'>'144'</span>, use the built-in type constructor <span
style='font-size:9.0pt;line-height:108%'>str()</span>. If you want a
hexadecimal or octal representation, use the built-in functions <span
style='font-size:9.0pt;line-height:108%'>hex() </span>or <span
style='font-size:9.0pt;line-height:108%'>oct()</span>. For fancy formatting,
see the fstrings and formatstrings sections, e.g. <span style='font-size:9.0pt;
line-height:108%'>&quot;{:04d}&quot;.format(144) </span>yields <span
style='font-size:9.0pt;line-height:108%'>'0144' </span>and <span
style='font-size:9.0pt;line-height:108%'>&quot;{:.3f}&quot;.format(1.0/ 3.0) </span>yields
<span style='font-size:9.0pt;line-height:108%'>'0.333'</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.3.6 How do I modify a string in place?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.1pt;
margin-left:-.25pt'>You cant, because strings are immutable. In most
situations, you should simply construct a new string from the various parts you
want to assemble it from. However, if you need an object with the ability to
modify in-place unicode data, try using an <span style='font-size:9.0pt;
line-height:108%'>io.StringIO </span>object or the <span style='font-size:9.0pt;
line-height:108%'>array </span>module:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=344
src="Python%20Frequently%20Asked%20Questions_files/image053.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.3.7 How do I use strings to call functions/methods?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are various techniques.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.9pt;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>The best
is to use a dictionary that maps strings to functions. The primary advantage of
this technique is that the strings do not need to match the names of the
functions. This is also the primary technique used to emulate a case construct:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:22.05pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=579 height=98
src="Python%20Frequently%20Asked%20Questions_files/image054.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>2.3. Numbers and strings</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.2pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=579 height=85
src="Python%20Frequently%20Asked%20Questions_files/image055.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.9pt;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Use the
built-in function <span style='font-size:9.0pt;line-height:108%'>getattr()</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=41
src="Python%20Frequently%20Asked%20Questions_files/image056.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>Note that <span style='font-size:
9.0pt;line-height:108%'>getattr() </span>works on any object, including
classes, class instances, modules, and so on.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>This is used in several places in the standard library,
like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:6.95pt;margin-left:15.95pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=585 height=179
src="Python%20Frequently%20Asked%20Questions_files/image057.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=121
src="Python%20Frequently%20Asked%20Questions_files/image058.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.3.8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Is there an equivalent to Perls chomp()
for removing trailing newlines from strings?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You can use <span style='font-size:9.0pt;line-height:108%'>S.rstrip(&quot;\r\n&quot;)
</span>to remove all occurrences of any line terminator from the end of the
string <span style='font-size:9.0pt;line-height:108%'>S </span>without removing
other trailing whitespace. If the string <span style='font-size:9.0pt;
line-height:108%'>S </span>represents more than one line, with several empty
lines at the end, the line terminators for all the blank lines will be removed:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image059.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>Since this is typically only desired when reading text one
line at a time, using <span style='font-size:9.0pt;line-height:108%'>S.rstrip()
</span>this way works well.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.3.9<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Is there a scanf() or sscanf() equivalent?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Not as such.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For simple input parsing, the
easiest approach is usually to split the line into whitespace-delimited words
using the <span style='font-size:9.0pt;line-height:108%'>split() </span>method
of string objects and then convert decimal strings to numeric values using <span
style='font-size:9.0pt;line-height:108%'>int() </span>or <span
style='font-size:9.0pt;line-height:108%'>float()</span>. <span
style='font-size:9.0pt;line-height:108%'>split() </span>supports an optional
sep parameter which is useful if the line uses something other than
whitespace as a separator.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.15pt;
margin-left:-.25pt'>For more complicated input parsing, regular expressions are
more powerful than Cs <span style='font-size:9.0pt;line-height:108%'>sscanf </span>and
better suited for the task.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.3.10<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>What does UnicodeDecodeError or
UnicodeEncodeError error mean?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.15pt;
margin-left:-.25pt'>See the unicode-howto.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.3.11<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Can I end a raw string with an odd number
of backslashes?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A raw string ending with an odd number of backslashes will
escape the strings quote:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image060.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>There are several workarounds for this. One is to use
regular strings and double the backslashes:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image061.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Another is to concatenate a regular string containing an
escaped backslash to the raw string:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image062.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>It is also possible to use <span style='font-size:9.0pt;
line-height:108%'>os.path.join() </span>to append a backslash on Windows:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image063.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Note that while a backslash will escape a quote for the
purposes of determining where the raw string ends, no escaping occurs when
interpreting the value of the raw string. That is, the backslash remains
present in the value of the raw string:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image064.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.3pt;
margin-left:-.25pt'>Also see the specification in the language reference.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>2.4 Performance</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.4.1 My program is too slow. How do I speed it up?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Thats a tough one, in general.
First, here are a list of things to remember before diving further:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Performance characteristics vary across Python implementations.
This FAQ focuses on <i><span style='color:#355F7C'>CPython</span></i>.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Behaviour can vary across operating systems, especially when
talking about I/O or multi-threading.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>You should always find the hot spots in your program <i>before </i>attempting
to optimize any code (see the <span style='font-size:9.0pt;line-height:108%'>profile
</span>module).</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Writing benchmark scripts will allow you to iterate quickly when
searching for improvements (see the <span style='font-size:9.0pt;line-height:
108%'>timeit </span>module).</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>It is highly recommended to have good code coverage (through unit
testing or any other technique) before potentially introducing regressions
hidden in sophisticated optimizations.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:17.45pt;
margin-left:-.25pt'>That being said, there are many tricks to speed up Python
code. Here are some general principles which go a long way towards reaching
acceptable performance levels:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>2.4. Performance</span></b></p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Making your algorithms faster (or changing to faster ones) can
yield much larger benefits than trying to sprinkle micro-optimization tricks
all over your code.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Use the right data structures. Study documentation for the
bltin-types and the <span style='font-size:9.0pt;line-height:108%'>collections </span>module.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>When the standard library provides a primitive for doing
something, it is likely (although not guaranteed) to be faster than any
alternative you may come up with. This is doubly true for primitives written in
C, such as builtins and some extension types. For example, be sure to use
either the <span style='font-size:9.0pt;line-height:108%'>list.sort() </span>built-in
method or the related <span style='font-size:9.0pt;line-height:108%'>sorted() </span>function
to do sorting (and see the sortinghowto for examples of moderately advanced
usage).</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Abstractions tend to create indirections and force the
interpreter to work more. If the levels of indirection outweigh the amount of
useful work done, your program will be slower. You should avoid excessive
abstraction, especially under the form of tiny functions or methods (which are
also often detrimental to readability).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:3.65pt;
margin-left:-.25pt'>If you have reached the limit of what pure Python can
allow, there are tools to take you further away. For example, <a
href="https://cython.org/"><span style='color:#377063;text-decoration:none'>Cython</span></a><span
style='color:#377063'> </span>can compile a slightly modified version of Python
code into a C extension, and can be used on many different platforms. Cython
can take advantage of compilation (and optional type annotations) to make your
code significantly faster than when interpreted. If you are confident in your C
programming skills, you can also write a C extension module yourself.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=601
 style='width:450.8pt;margin-left:.25pt;border-collapse:collapse'>
 <tr style='height:20.15pt'>
  <td width=601 valign=top style='width:450.8pt;border:solid #86989B 1.0pt;
  border-bottom:none;background:#DCEFE6;padding:5.45pt 5.75pt 0in .1in;
  height:20.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='color:#51AE80'>µ </span><b>See also</b></p>
  </td>
 </tr>
 <tr style='height:22.25pt'>
  <td width=601 style='width:450.8pt;border:solid #86989B 1.0pt;border-top:
  none;background:#F7F7F7;padding:5.45pt 5.75pt 0in .1in;height:22.25pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>The wiki page devoted to <a
  href="https://wiki.python.org/moin/PythonSpeed/PerformanceTips"><span
  style='color:#377063;text-decoration:none'>performance tips</span></a>.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.4.2 What is the most efficient way to concatenate many strings
together?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'><span style='font-size:9.0pt;
line-height:108%'>str </span>and <span style='font-size:9.0pt;line-height:108%'>bytes
</span>objects are immutable, therefore concatenating many strings together is
inefficient as each concatenation creates a new object. In the general case,
the total runtime cost is quadratic in the total string length.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To accumulate many <span style='font-size:9.0pt;line-height:
108%'>str </span>objects, the recommended idiom is to place them into a list
and call <span style='font-size:9.0pt;line-height:108%'>str.join() </span>at
the end:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image065.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>(another reasonably efficient
idiom is to use <span style='font-size:9.0pt;line-height:108%'>io.StringIO</span>)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.1pt;
margin-left:-.25pt'>To accumulate many <span style='font-size:9.0pt;line-height:
108%'>bytes </span>objects, the recommended idiom is to extend a <span
style='font-size:9.0pt;line-height:108%'>bytearray </span>object using in-place
concatenation (the <span style='font-size:9.0pt;line-height:108%'>+= </span>operator):</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:21.55pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image066.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5 Sequences (Tuples/Lists)</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.1 How do I convert between tuples and lists?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The type constructor <span
style='font-size:9.0pt;line-height:108%'>tuple(seq) </span>converts any
sequence (actually, any iterable) into a tuple with the same items in the same
order.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For example, <span
style='font-size:9.0pt;line-height:108%'>tuple([1, 2, 3]) </span>yields <span
style='font-size:9.0pt;line-height:108%'>(1, 2, 3) </span>and <span
style='font-size:9.0pt;line-height:108%'>tuple('abc') </span>yields <span
style='font-size:9.0pt;line-height:108%'>('a', 'b', 'c')</span>. If the
argument is a tuple, it does not make a copy but returns the same object, so it
is cheap to call <span style='font-size:9.0pt;line-height:108%'>tuple() </span>when
you arent sure that an object is already a tuple.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The type constructor <span
style='font-size:9.0pt;line-height:108%'>list(seq) </span>converts any sequence
or iterable into a list with the same items in the same order. For example, <span
style='font-size:9.0pt;line-height:108%'>list((1, 2, 3)) </span>yields <span
style='font-size:9.0pt;line-height:108%'>[1, 2, 3] </span>and <span
style='font-size:9.0pt;line-height:108%'>list('abc') </span>yields <span
style='font-size:9.0pt;line-height:108%'>['a', 'b', 'c']</span>. If the
argument is a list, it makes a copy just like <span style='font-size:9.0pt;
line-height:108%'>seq[:] </span>would.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.2 Whats a negative index?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python sequences are indexed with
positive numbers and negative numbers. For positive numbers 0 is the first
index 1 is the second index and so forth. For negative indices -1 is the last
index and -2 is the penultimate (next to last) index and so forth. Think of <span
style='font-size:9.0pt;line-height:108%'>seq[-n] </span>as the same as <span
style='font-size:9.0pt;line-height:108%'>seq[len(seq)-n]</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>Using negative indices can be very convenient. For example <span
style='font-size:9.0pt;line-height:108%'>S[:-1] </span>is all of the string
except for its last character, which is useful for removing the trailing
newline from a string.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.3 How do I iterate over a sequence in reverse order?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Use the <span style='font-size:9.0pt;line-height:108%'>reversed()
</span>built-in function:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image067.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>This wont touch your original sequence, but build a new
copy with reversed order to iterate over.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.4 How do you remove duplicates from a list?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>See the Python Cookbook for a
long discussion of many ways to do this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:24.65pt;text-align:left;line-height:110%'><a
href="https://code.activestate.com/recipes/52560/"><span style='color:#377063;
text-decoration:none'>https://code.activestate.com/recipes/52560/</span></a></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If you dont mind reordering the list, sort it and then
scan from the end of the list, deleting duplicates as you go:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=137
src="Python%20Frequently%20Asked%20Questions_files/image068.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If all elements of the list may be used as set keys (i.e.
they are all <i><span style='color:#355F7C'>hashable</span></i>) this is often
faster</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image069.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>This converts the list into a set, thereby removing
duplicates, and then back into a list.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.5 How do you remove multiple items from a list</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>As with removing duplicates, explicitly iterating in
reverse with a delete condition is one possibility. However, it is easier and
faster to use slice replacement with an implicit or explicit forward iteration.
Here are three variations.:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image070.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>The list comprehension may be fastest.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.6 How do you make an array in Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Use a list:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image071.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:36.6pt;
margin-left:-.25pt'>Lists are equivalent to C or Pascal arrays in their time
complexity; the primary difference is that a Python list can contain objects of
many different types.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>2.5. Sequences (Tuples/Lists)</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The <span style='font-size:9.0pt;
line-height:108%'>array </span>module also provides methods for creating arrays
of fixed types with compact representations, but they are slower to index than
lists. Also note that <a href="https://numpy.org/"><span style='color:#377063;
text-decoration:none'>NumPy</span></a><span style='color:#377063'> </span>and
other third party packages define array-like structures with various
characteristics as well.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To get Lisp-style linked lists, you can emulate <i>cons
cells </i>using tuples:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image072.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>If mutability is desired, you could use lists instead of
tuples. Here the analogue of a Lisp <i>car </i>is <span style='font-size:9.0pt;
line-height:108%'>lisp_list[0] </span>and the analogue of <i>cdr </i>is <span
style='font-size:9.0pt;line-height:108%'>lisp_list[1]</span>. Only do this if
youre sure you really need to, because its usually a lot slower than using
Python lists.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.7 How do I create a multidimensional list?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You probably tried to make a multidimensional array like
this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image073.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>This looks correct if you print it:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image074.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>But when you assign a value, it shows up in multiple
places:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image075.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The reason is that replicating a
list with <span style='font-size:9.0pt;line-height:108%'>* </span>doesnt
create copies, it only creates references to the existing objects. The <span
style='font-size:9.0pt;line-height:108%'>*3 </span>creates a list containing 3
references to the same list of length two. Changes to one row will show in all
rows, which is almost certainly not what you want.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The suggested approach is to create a list of the desired
length first and then fill in each element with a newly created list:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image076.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>This generates a list containing 3 different lists of
length two. You can also use a list comprehension:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image077.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>Or, you can use an extension that provides a matrix
datatype; <a href="https://numpy.org/"><span style='color:#377063;text-decoration:
none'>NumPy</span></a><span style='color:#377063'> </span>is the best known.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.8 How do I apply a method or function to a sequence of
objects?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To call a method or function and accumulate the return
values is a list, a <i><span style='color:#355F7C'>list comprehension </span></i>is
an elegant solution:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image078.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To just run the method or function without saving the
return values, a plain <span style='font-size:9.0pt;line-height:108%'>for </span>loop
will suffice:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=56
src="Python%20Frequently%20Asked%20Questions_files/image079.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continues on next page)</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continued from previous page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=40
src="Python%20Frequently%20Asked%20Questions_files/image080.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.9 Why does a_tuple[i] += [item] raise an exception when
the addition works?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>This is because of a combination
of the fact that augmented assignment operators are <i>assignment </i>operators,
and the difference between mutable and immutable objects in Python.</p>

<p class=MsoNormal style='margin-left:-.25pt'>This discussion applies in
general when augmented assignment operators are applied to elements of a tuple
that point to mutable objects, but well use a <span style='font-size:9.0pt;
line-height:108%'>list </span>and <span style='font-size:9.0pt;line-height:
108%'>+= </span>as our exemplar.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If you wrote:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image081.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The reason for the exception
should be immediately clear: <span style='font-size:9.0pt;line-height:108%'>1 </span>is
added to the object <span style='font-size:9.0pt;line-height:108%'>a_tuple[0] </span>points
to (<span style='font-size:9.0pt;line-height:108%'>1</span>), producing the
result object, <span style='font-size:9.0pt;line-height:108%'>2</span>, but
when we attempt to assign the result of the computation, <span
style='font-size:9.0pt;line-height:108%'>2</span>, to element <span
style='font-size:9.0pt;line-height:108%'>0 </span>of the tuple, we get an error
because we cant change what an element of a tuple points to.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Under the covers, what this augmented assignment statement
is doing is approximately this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image082.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>It is the assignment part of the
operation that produces the error, since a tuple is immutable.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>When you write something like:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image083.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The exception is a bit more surprising, and even more
surprising is the fact that even though there was an error, the append worked:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image084.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.15pt;
margin-left:-.25pt'>To see why this happens, you need to know that (a) if an
object implements an <span style='font-size:9.0pt;line-height:108%'>__iadd__() </span>magic
method, it gets called when the <span style='font-size:9.0pt;line-height:108%'>+=
</span>augmented assignment is executed, and its return value is what gets used
in the assignment statement; and (b) for lists, <span style='font-size:9.0pt;
line-height:108%'>__iadd__() </span>is equivalent to calling <span
style='font-size:9.0pt;line-height:108%'>extend() </span>on the list and
returning the list. Thats why we say that for lists, <span style='font-size:
9.0pt;line-height:108%'>+= </span>is a shorthand for <span style='font-size:
9.0pt;line-height:108%'>list.extend()</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image085.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:38.8pt;
margin-left:-.25pt'>This is equivalent to:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>2.5. Sequences (Tuples/Lists)</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image086.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The object pointed to by a_list
has been mutated, and the pointer to the mutated object is assigned back to <span
style='font-size:9.0pt;line-height:108%'>a_list</span>. The end result of the
assignment is a no-op, since it is a pointer to the same object that <span
style='font-size:9.0pt;line-height:108%'>a_list </span>was previously pointing
to, but the assignment still happens.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Thus, in our tuple example what is happening is equivalent
to:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image087.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.4pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>__iadd__()
</span>succeeds, and thus the list is extended, but even though <span
style='font-size:9.0pt;line-height:108%'>result </span>points to the same
object that <span style='font-size:9.0pt;line-height:108%'>a_tuple[0] </span>already
points to, that final assignment still results in an error, because tuples are
immutable.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:37.8pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.5.10 I want to do a complicated sort: can
you do a Schwartzian Transform in Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The technique, attributed to Randal Schwartz of the Perl
community, sorts the elements of a list by a metric which maps each element to
its sort value. In Python, use the <span style='font-size:9.0pt;line-height:
108%'>key </span>argument for the <span style='font-size:9.0pt;line-height:
108%'>list.sort() </span>method:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image088.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.5.11 How can I sort one list by values from another list?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Merge them into an iterator of tuples, sort the resulting
list, and then pick out the element you want.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:22.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=153
src="Python%20Frequently%20Asked%20Questions_files/image089.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6 Objects</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.1 What is a class?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>A class is the particular object
type created by executing a class statement. Class objects are used as
templates to create instance objects, which embody both the data (attributes)
and code (methods) specific to a datatype.</p>

<p class=MsoNormal style='margin-left:-.25pt'>A class can be based on one or
more other classes, called its base class(es). It then inherits the attributes
and methods of its base classes. This allows an object model to be successively
refined by inheritance. You might have a generic <span style='font-size:9.0pt;
line-height:108%'>Mailbox </span>class that provides basic accessor methods for
a mailbox, and subclasses such as <span style='font-size:9.0pt;line-height:
108%'>MboxMailbox</span>, <span style='font-size:9.0pt;line-height:108%'>MaildirMailbox</span>,
<span style='font-size:9.0pt;line-height:108%'>OutlookMailbox </span>that
handle various specific mailbox formats.</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection8>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.2 What is a method?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A method is a function on some object <span
style='font-size:9.0pt;line-height:108%'>x </span>that you normally call as <span
style='font-size:9.0pt;line-height:108%'>x.name(arguments...)</span>. Methods
are defined as functions inside the class definition:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image090.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.3 What is self?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Self is merely a conventional
name for the first argument of a method. A method defined as <span
style='font-size:9.0pt;line-height:108%'>meth(self, a, b, c) </span>should be
called as <span style='font-size:9.0pt;line-height:108%'>x.meth(a, b, c) </span>for
some instance <span style='font-size:9.0pt;line-height:108%'>x </span>of the
class in which the definition occurs; the called method will think it is called
as <span style='font-size:9.0pt;line-height:108%'>meth(x, a, b, c)</span>.</p>

<p class=MsoNormal align=left style='margin-bottom:16.4pt;text-align:left;
line-height:110%'>See also <i><span style='color:#355F7C'>Why must self be
used explicitly in method definitions and calls?</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:31.15pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.6.4 How do I check if an object is an
instance of a given class or of a subclass of it?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Use the built-in function <span
style='font-size:9.0pt;line-height:108%'>isinstance(obj, cls)</span>. You can
check if an object is an instance of any of a number of classes by providing a
tuple instead of a single class, e.g. <span style='font-size:9.0pt;line-height:
108%'>isinstance(obj, (class1, class2, .. .))</span>, and can also check
whether an object is one of Pythons built-in types, e.g. <span
style='font-size:9.0pt;line-height:108%'>isinstance(obj, str) </span>or <span
style='font-size:9.0pt;line-height:108%'>isinstance(obj, (int, float, complex))</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Note that <span style='font-size:9.0pt;line-height:108%'>isinstance()
</span>also checks for virtual inheritance from an <i><span style='color:#355F7C'>abstract
base class</span></i>. So, the test will return <span style='font-size:9.0pt;
line-height:108%'>True </span>for a registered class even if hasnt directly or
indirectly inherited from it. To test for true inheritance, scan the <i><span
style='color:#355F7C'>MRO </span></i>of the class:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=413
src="Python%20Frequently%20Asked%20Questions_files/image091.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Note that most programs do not
use <span style='font-size:9.0pt;line-height:108%'>isinstance() </span>on
user-defined classes very often. If you are developing the classes yourself, a
more proper object-oriented style is to define methods on the classes that
encapsulate a particular behaviour, instead of checking the objects class and
doing a different thing based on what class it is. For example, if you have a
function that does something:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=105
src="Python%20Frequently%20Asked%20Questions_files/image092.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A better approach is to define a <span style='font-size:
9.0pt;line-height:108%'>search() </span>method on all the classes and just call
it:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=153
src="Python%20Frequently%20Asked%20Questions_files/image093.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.5 What is delegation?</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:-.25pt;text-align:left;line-height:107%'>Delegation
is an object oriented technique (also called a design pattern). Lets say you
have an object <span style='font-size:9.0pt;line-height:107%'>x </span>and want
to change the behaviour of just one of its methods. You can create a new class
that provides a new implementation of the method youre interested in changing
and delegates all other methods to the corresponding method of <span
style='font-size:9.0pt;line-height:107%'>x</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Python programmers can easily implement delegation. For
example, the following class implements a class that behaves like a file but
converts all written data to uppercase:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=168
src="Python%20Frequently%20Asked%20Questions_files/image094.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Here the <span style='font-size:
9.0pt;line-height:108%'>UpperOut </span>class redefines the <span
style='font-size:9.0pt;line-height:108%'>write() </span>method to convert the
argument string to uppercase before calling the underlying <span
style='font-size:9.0pt;line-height:108%'>self._outfile.write() </span>method.
All other methods are delegated to the underlying <span style='font-size:9.0pt;
line-height:108%'>self. _outfile </span>object. The delegation is accomplished
via the <span style='font-size:9.0pt;line-height:108%'>__getattr__() </span>method;
consult the language reference for more information about controlling attribute
access.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.1pt;
margin-left:-.25pt'>Note that for more general cases delegation can get
trickier. When attributes must be set as well as retrieved, the class must
define a <span style='font-size:9.0pt;line-height:108%'>__setattr__() </span>method
too, and it must do so carefully. The basic implementation of <span
style='font-size:9.0pt;line-height:108%'>__setattr__() </span>is roughly
equivalent to the following:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.3pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image095.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Many <span style='font-size:9.0pt;
line-height:108%'>__setattr__() </span>implementations call <span
style='font-size:9.0pt;line-height:108%'>object.__setattr__() </span>to set an
attribute on self without causing infinite recursion:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image096.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>Alternatively, it is possible to set attributes by
inserting entries into <span style='font-size:9.0pt;line-height:108%'>self.__dict__
</span>directly.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:31.15pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.6.6 How do I call a method defined in a
base class from a derived class that extends it?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Use the built-in <span style='font-size:9.0pt;line-height:
108%'>super() </span>function:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image097.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>In the example, <span style='font-size:9.0pt;line-height:
108%'>super() </span>will automatically determine the instance from which it
was called (the <span style='font-size:9.0pt;line-height:108%'>self </span>value),
look up the <i><span style='color:#355F7C'>method resolution order </span></i>(MRO)
with <span style='font-size:9.0pt;line-height:108%'>type(self).__mro__</span>,
and return the next in line after <span style='font-size:9.0pt;line-height:
108%'>Derived </span>in the MRO: <span style='font-size:9.0pt;line-height:108%'>Base</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.7 How can I organize my code to make it easier to change the
base class?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You could assign the base class to an alias and derive from
the alias. Then all you have to change is the value assigned to the alias.
Incidentally, this trick is also handy if you want to decide dynamically (e.g.
depending on availability of resources) which base class to use. Example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=121
src="Python%20Frequently%20Asked%20Questions_files/image098.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.8 How do I create static class data and static class
methods?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Both static data and static
methods (in the sense of C++ or Java) are supported in Python.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>For static data, simply define a class attribute. To assign
a new value to the attribute, you have to explicitly use the class name in the
assignment:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.3pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=137
src="Python%20Frequently%20Asked%20Questions_files/image099.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'><span style='font-size:9.0pt;
line-height:108%'>c.count </span>also refers to <span style='font-size:9.0pt;
line-height:108%'>C.count </span>for any <span style='font-size:9.0pt;
line-height:108%'>c </span>such that <span style='font-size:9.0pt;line-height:
108%'>isinstance(c, C) </span>holds, unless overridden by <span
style='font-size:9.0pt;line-height:108%'>c </span>itself or by some class on
the base-class search path from <span style='font-size:9.0pt;line-height:108%'>c.__class__
</span>back to <span style='font-size:9.0pt;line-height:108%'>C</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Caution: within a method of C, an assignment like <span
style='font-size:9.0pt;line-height:108%'>self.count = 42 </span>creates a new
and unrelated instance named count in <span style='font-size:9.0pt;
line-height:108%'>self</span>s own dict. Rebinding of a class-static data name
must always specify the class whether inside a method or not:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image100.gif"></span></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection9>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Static methods are possible:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image101.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>However, a far more straightforward way to get the effect
of a static method is via a simple module-level function:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image102.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>If your code is structured so as to define one class (or
tightly related class hierarchy) per module, this supplies the desired
encapsulation.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.9 How can I overload constructors (or methods) in Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>This answer actually applies to
all methods, but the question usually comes up first in the context of
constructors.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>In C++ youd write</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image103.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>In Python you have to write a single constructor that
catches all cases using default arguments. For example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=105
src="Python%20Frequently%20Asked%20Questions_files/image104.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>This is not entirely equivalent,
but close enough in practice.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You could also try a variable-length argument list, e.g.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image105.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>The same approach works for all method definitions.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.10 I try to use __spam and I get an error about
_SomeClassName__spam.</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Variable names with double
leading underscores are mangled to provide a simple but effective way to
define class private variables. Any identifier of the form <span
style='font-size:9.0pt;line-height:108%'>__spam </span>(at least two leading
underscores, at most one trailing underscore) is textually replaced with <span
style='font-size:9.0pt;line-height:108%'>_classname__spam</span>, where <span
style='font-size:9.0pt;line-height:108%'>classname </span>is the current class
name with any leading underscores stripped.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The identifier can be used unchanged within the class, but
to access it outside the class, the mangled name must be used:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=88
src="Python%20Frequently%20Asked%20Questions_files/image106.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=104
src="Python%20Frequently%20Asked%20Questions_files/image107.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:3.65pt;
margin-left:-.25pt'>In particular, this does not guarantee privacy since an
outside user can still deliberately access the private attribute; many Python
programmers never bother to use private variable names at all.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=601
 style='width:450.8pt;margin-left:.25pt;border-collapse:collapse'>
 <tr style='height:20.15pt'>
  <td width=601 valign=top style='width:450.8pt;border:solid #86989B 1.0pt;
  border-bottom:none;background:#DCEFE6;padding:5.45pt 5.75pt 0in .1in;
  height:20.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='color:#51AE80'>µ </span><b>See also</b></p>
  </td>
 </tr>
 <tr style='height:22.25pt'>
  <td width=601 style='width:450.8pt;border:solid #86989B 1.0pt;border-top:
  none;background:#F7F7F7;padding:5.45pt 5.75pt 0in .1in;height:22.25pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>The private name mangling specifications for details
  and special cases.</p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.11 My class defines __del__ but it is not called when I
delete the object.</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are several possible
reasons for this.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The <span style='font-size:9.0pt;
line-height:108%'>del </span>statement does not necessarily call <span
style='font-size:9.0pt;line-height:108%'>__del__() </span> it simply
decrements the objects reference count, and if this reaches zero <span
style='font-size:9.0pt;line-height:108%'>__del__() </span>is called.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If your data structures contain
circular links (e.g. a tree where each child has a parent reference and each
parent has a list of children) the reference counts will never go back to zero.
Once in a while Python runs an algorithm to detect such cycles, but the garbage
collector might run some time after the last reference to your data structure
vanishes, so your <span style='font-size:9.0pt;line-height:108%'>__del__() </span>method
may be called at an inconvenient and random time. This is inconvenient if
youre trying to reproduce a problem. Worse, the order in which objects <span
style='font-size:9.0pt;line-height:108%'>__del__() </span>methods are executed
is arbitrary. You can run <span style='font-size:9.0pt;line-height:108%'>gc.collect()
</span>to force a collection, but there <i>are </i>pathological cases where
objects will never be collected.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.35pt;
margin-left:-.25pt'>Despite the cycle collector, its still a good idea to
define an explicit <span style='font-size:9.0pt;line-height:108%'>close() </span>method
on objects to be called whenever youre done with them. The <span
style='font-size:9.0pt;line-height:108%'>close() </span>method can then remove
attributes that refer to subobjects. Dont call</p>

<p class=MsoNormal style='margin-left:-.25pt'><span style='font-size:9.0pt;
line-height:108%'>__del__() </span>directly  <span style='font-size:9.0pt;
line-height:108%'>__del__() </span>should call <span style='font-size:9.0pt;
line-height:108%'>close() </span>and <span style='font-size:9.0pt;line-height:
108%'>close() </span>should make sure that it can be called more than once for
the same object.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Another way to avoid cyclical
references is to use the <span style='font-size:9.0pt;line-height:108%'>weakref
</span>module, which allows you to point to objects without incrementing their
reference count. Tree data structures, for instance, should use weak references
for their parent and sibling references (if they need them!).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>Finally, if your <span style='font-size:9.0pt;line-height:
108%'>__del__() </span>method raises an exception, a warning message is printed
to <span style='font-size:9.0pt;line-height:108%'>sys.stderr</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.12 How do I get a list of all instances of a given class?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.35pt;
margin-left:-.25pt'>Python does not keep track of all instances of a class (or
of a built-in type). You can program the classs constructor to keep track of
all instances by keeping a list of weak references to each instance.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.13 Why does the result of </span></b><b><span
style='font-size:11.0pt;line-height:103%;color:#20435C'>id() </span></b><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>appear to be not unique?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>id() </span>builtin
returns an integer that is guaranteed to be unique during the lifetime of the
object. Since in CPython, this is the objects memory address, it happens
frequently that after an object is deleted from memory, the next freshly
created object is allocated at the same position in memory. This is illustrated
by this example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image108.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The two ids belong to different
integer objects that are created before, and deleted immediately after
execution of the <span style='font-size:9.0pt;line-height:108%'>id() </span>call.
To be sure that objects whose id you want to examine are still alive, create
another reference to the object:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image109.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.6.14 When can I rely on identity tests with the <i>is </i>operator?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The <span style='font-size:9.0pt;
line-height:108%'>is </span>operator tests for object identity. The test <span
style='font-size:9.0pt;line-height:108%'>a is b </span>is equivalent to <span
style='font-size:9.0pt;line-height:108%'>id(a) == id(b)</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The most important property of an
identity test is that an object is always identical to itself, <span
style='font-size:9.0pt;line-height:108%'>a is a </span>always returns <span
style='font-size:9.0pt;line-height:108%'>True</span>. Identity tests are
usually faster than equality tests. And unlike equality tests, identity tests
are guaranteed to return a boolean <span style='font-size:9.0pt;line-height:
108%'>True </span>or <span style='font-size:9.0pt;line-height:108%'>False</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>However, identity tests can <i>only
</i>be substituted for equality tests when object identity is assured.
Generally, there are three circumstances where identity is guaranteed:</p>

<p class=MsoNormal><span style='line-height:108%'>1)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Assignments create new names but do not change object identity.
After the assignment <span style='font-size:9.0pt;line-height:108%'>new = old</span>,
it is guaranteed that <span style='font-size:9.0pt;line-height:108%'>new is old</span>.</p>

<p class=MsoNormal><span style='line-height:108%'>2)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>Putting an object in a container that stores object references
does not change object identity. After the list assignment <span
style='font-size:9.0pt;line-height:108%'>s[0] = x</span>, it is guaranteed that
<span style='font-size:9.0pt;line-height:108%'>s[0] is x</span>.</p>

<p class=MsoNormal><span style='line-height:108%'>3)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>If an object is a singleton, it means that only one instance of
that object can exist. After the assignments <span style='font-size:9.0pt;
line-height:108%'>a = None </span>and <span style='font-size:9.0pt;line-height:
108%'>b = None</span>, it is guaranteed that <span style='font-size:9.0pt;
line-height:108%'>a is b </span>because <span style='font-size:9.0pt;
line-height:108%'>None </span>is a singleton.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>In most other circumstances, identity tests are inadvisable
and equality tests are preferred. In particular, identity tests should not be
used to check constants such as <span style='font-size:9.0pt;line-height:108%'>int
</span>and <span style='font-size:9.0pt;line-height:108%'>str </span>which
arent guaranteed to be singletons:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=184
src="Python%20Frequently%20Asked%20Questions_files/image110.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Likewise, new instances of mutable containers are never
identical:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image111.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>In the standard library code, you
will see several common patterns for correctly using identity tests:</p>

<p class=MsoNormal style='margin-left:24.95pt;text-indent:-13.3pt'><span
style='line-height:108%'>1)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>As recommended by <a href="https://peps.python.org/pep-0008/"><b><span
style='color:#377063;text-decoration:none'>PEP</span></b></a><b><span
style='color:#377063'> </span></b><a href="https://peps.python.org/pep-0008/"><b><span
style='color:#377063;text-decoration:none'>8</span></b></a>, an identity test
is the preferred way to check for <span style='font-size:9.0pt;line-height:
108%'>None</span>. This reads like plain English in code and avoids confusion
with other objects that may have boolean values that evaluate to false.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.95pt;text-indent:-13.3pt'><span style='line-height:108%'>2)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>Detecting
optional arguments can be tricky when <span style='font-size:9.0pt;line-height:
108%'>None </span>is a valid input value. In those situations, you can create a
singleton sentinel object guaranteed to be distinct from other objects. For
example, here is how to implement a method that behaves like <span
style='font-size:9.0pt;line-height:108%'>dict.pop()</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=72
src="Python%20Frequently%20Asked%20Questions_files/image112.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=104
src="Python%20Frequently%20Asked%20Questions_files/image113.gif"></span></p>

<p class=MsoNormal style='margin-left:24.95pt;text-indent:-13.3pt'><span
style='line-height:108%'>3)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>Container implementations sometimes need to augment equality
tests with identity tests. This prevents the code from being confused by
objects such as <span style='font-size:9.0pt;line-height:108%'>float('NaN') </span>that
are not equal to themselves.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>For example, here is the implementation of <span
style='font-size:9.0pt;line-height:108%'>collections.abc.Sequence.__contains__()</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image114.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.6.15<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How can a subclass control what data is
stored in an immutable instance?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>When subclassing an immutable
type, override the <span style='font-size:9.0pt;line-height:108%'>__new__() </span>method
instead of the <span style='font-size:9.0pt;line-height:108%'>__init__() </span>method.
The latter only runs <i>after </i>an instance is created, which is too late to
alter data in an immutable instance.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>All of these immutable classes have a different signature
than their parent class:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=328
src="Python%20Frequently%20Asked%20Questions_files/image115.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The classes can be used like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=137
src="Python%20Frequently%20Asked%20Questions_files/image116.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:74.55pt;text-align:left;text-indent:-38.55pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.6.16<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I cache method calls?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The two principal tools for
caching methods are <span style='font-size:9.0pt;line-height:108%'>functools.cached_property()
</span>and <span style='font-size:9.0pt;line-height:108%'>functools.
lru_cache()</span>. The former stores results at the instance level and the
latter at the class level.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The <i>cached_property </i>approach
only works with methods that do not take any arguments. It does not create a
reference to the instance. The cached method result will be kept only as long
as the instance is alive.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The advantage is that when an
instance is no longer used, the cached method result will be released right
away. The disadvantage is that if instances accumulate, so too will the
accumulated method results. They can grow without bound.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The <i>lru_cache </i>approach
works with methods that have <i><span style='color:#355F7C'>hashable </span></i>arguments.
It creates a reference to the instance unless special efforts are made to pass
in weak references.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The advantage of the least
recently used algorithm is that the cache is bounded by the specified <i>maxsize</i>.
The disadvantage is that instances are kept alive until they age out of the
cache or until the cache is cleared.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>This example shows the various techniques:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=344
src="Python%20Frequently%20Asked%20Questions_files/image117.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The above example assumes that
the <i>station_id </i>never changes. If the relevant instance attributes are
mutable, the <i>cached_property </i>approach cant be made to work because it
cannot detect changes to the attributes.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To make the <i>lru_cache </i>approach work when the <i>station_id
</i>is mutable, the class needs to define the <span style='font-size:9.0pt;
line-height:108%'>__eq__() </span>and <span style='font-size:9.0pt;line-height:
108%'>__hash__() </span>methods so that the cache can detect relevant attribute
updates:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=216
src="Python%20Frequently%20Asked%20Questions_files/image118.gif"></span></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection10>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:22.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=104
src="Python%20Frequently%20Asked%20Questions_files/image119.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>2.7 Modules</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.7.1 How do I create a .pyc file?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>When a module is imported for the
first time (or when the source file has changed since the current compiled file
was created) a <span style='font-size:9.0pt;line-height:108%'>.pyc </span>file
containing the compiled code should be created in a <span style='font-size:
9.0pt;line-height:108%'>__pycache__ </span>subdirectory of the directory
containing the <span style='font-size:9.0pt;line-height:108%'>.py </span>file.
The <span style='font-size:9.0pt;line-height:108%'>.pyc </span>file will have a
filename that starts with the same name as the <span style='font-size:9.0pt;
line-height:108%'>.py </span>file, and ends with <span style='font-size:9.0pt;
line-height:108%'>.pyc</span>, with a middle component that depends on the
particular <span style='font-size:9.0pt;line-height:108%'>python </span>binary
that created it. (See <a href="https://peps.python.org/pep-3147/"><b><span
style='color:#377063;text-decoration:none'>PEP 3147 </span></b></a>for
details.)</p>

<p class=MsoNormal style='margin-left:-.25pt'>One reason that a <span
style='font-size:9.0pt;line-height:108%'>.pyc </span>file may not be created is
a permissions problem with the directory containing the source file, meaning
that the <span style='font-size:9.0pt;line-height:108%'>__pycache__ </span>subdirectory
cannot be created. This can happen, for example, if you develop as one user but
run as another, such as if you are testing with a web server.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Unless the <span
style='font-size:9.0pt;line-height:108%'>PYTHONDONTWRITEBYTECODE </span>environment
variable is set, creation of a .pyc file is automatic if youre importing a
module and Python has the ability (permissions, free space, etc) to create a <span
style='font-size:9.0pt;line-height:108%'>__pycache__ </span>subdirectory and
write the compiled module to that subdirectory.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Running Python on a top level
script is not considered an import and no <span style='font-size:9.0pt;
line-height:108%'>.pyc </span>will be created. For example, if you have a
top-level module <span style='font-size:9.0pt;line-height:108%'>foo.py </span>that
imports another module <span style='font-size:9.0pt;line-height:108%'>xyz.py</span>,
when you run <span style='font-size:9.0pt;line-height:108%'>foo </span>(by
typing <span style='font-size:9.0pt;line-height:108%'>python foo. py </span>as
a shell command), a <span style='font-size:9.0pt;line-height:108%'>.pyc </span>will
be created for <span style='font-size:9.0pt;line-height:108%'>xyz </span>because
<span style='font-size:9.0pt;line-height:108%'>xyz </span>is imported, but no <span
style='font-size:9.0pt;line-height:108%'>.pyc </span>file will be created for <span
style='font-size:9.0pt;line-height:108%'>foo </span>since <span
style='font-size:9.0pt;line-height:108%'>foo.py </span>isnt being imported.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If you need to create a <span
style='font-size:9.0pt;line-height:108%'>.pyc </span>file for <span
style='font-size:9.0pt;line-height:108%'>foo </span> that is, to create a <span
style='font-size:9.0pt;line-height:108%'>.pyc </span>file for a module that is
not imported  you can, using the <span style='font-size:9.0pt;line-height:
108%'>py_compile </span>and <span style='font-size:9.0pt;line-height:108%'>compileall
</span>modules.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>py_compile
</span>module can manually compile any module. One way is to use the <span
style='font-size:9.0pt;line-height:108%'>compile() </span>function in that
module interactively:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image120.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>This will write the <span
style='font-size:9.0pt;line-height:108%'>.pyc </span>to a <span
style='font-size:9.0pt;line-height:108%'>__pycache__ </span>subdirectory in the
same location as <span style='font-size:9.0pt;line-height:108%'>foo.py </span>(or
you can override that with the optional parameter <span style='font-size:9.0pt;
line-height:108%'>cfile</span>).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You can also automatically compile all files in a directory
or directories using the <span style='font-size:9.0pt;line-height:108%'>compileall
</span>module. You can do it from the shell prompt by running <span
style='font-size:9.0pt;line-height:108%'>compileall.py </span>and providing the
path of a directory containing Python files to compile:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image121.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.7.2 How do I find the current module name?</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'>A
module can find out its own module name by looking at the predefined global
variable <span style='font-size:9.0pt;line-height:107%'>__name__</span>. If
this has the value <span style='font-size:9.0pt;line-height:107%'>'__main__'</span>,
the program is running as a script. Many modules that are usually used by
importing them also provide a command-line interface or a self-test, and only
execute this code after checking <span style='font-size:9.0pt;line-height:107%'>__name__</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:25.3pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=612 height=82
src="Python%20Frequently%20Asked%20Questions_files/image122.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>2.7. Modules</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continued from previous page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=40
src="Python%20Frequently%20Asked%20Questions_files/image123.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.7.3 How can I have modules that mutually import each other?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:255.1pt;margin-bottom:
0in;margin-left:-.25pt;line-height:161%'>Suppose you have the following
modules: <span style='font-size:9.0pt;line-height:161%'>foo.py</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.7pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image124.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>bar.py</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image125.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The problem is that the
interpreter will perform the following steps:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>main imports <span style='font-size:9.0pt;line-height:108%'>foo</span></p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Empty globals for <span style='font-size:9.0pt;line-height:108%'>foo
</span>are created</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>foo </span>is
compiled and starts executing</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>foo </span>imports
<span style='font-size:9.0pt;line-height:108%'>bar</span></p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Empty globals for <span style='font-size:9.0pt;line-height:108%'>bar
</span>are created</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>bar </span>is
compiled and starts executing</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>bar </span>imports
<span style='font-size:9.0pt;line-height:108%'>foo </span>(which is a no-op
since there already is a module named <span style='font-size:9.0pt;line-height:
108%'>foo</span>)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The import mechanism tries to read <span style='font-size:9.0pt;
line-height:108%'>foo_var </span>from <span style='font-size:9.0pt;line-height:
108%'>foo </span>globals, to set <span style='font-size:9.0pt;line-height:108%'>bar.foo_var
= foo.foo_var</span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The last step fails, because
Python isnt done with interpreting <span style='font-size:9.0pt;line-height:
108%'>foo </span>yet and the global symbol dictionary for <span
style='font-size:9.0pt;line-height:108%'>foo </span>is still empty.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The same thing happens when you
use <span style='font-size:9.0pt;line-height:108%'>import foo</span>, and then
try to access <span style='font-size:9.0pt;line-height:108%'>foo.foo_var </span>in
global code.</p>

<p class=MsoNormal style='margin-left:-.25pt'>There are (at least) three
possible workarounds for this problem.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Guido van Rossum recommends
avoiding all uses of <span style='font-size:9.0pt;line-height:108%'>from
&lt;module&gt; import ...</span>, and placing all code inside functions.
Initializations of global variables and class variables should use constants or
built-in functions only. This means everything from an imported module is
referenced as <span style='font-size:9.0pt;line-height:108%'>&lt;module&gt;.&lt;name&gt;</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Jim Roskind suggests performing
steps in the following order in each module:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>exports (globals, functions, and classes that dont need imported
base classes)</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>import </span>statements</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>active code (including globals that are initialized from imported
values).</p>

<p class=MsoNormal style='margin-left:-.25pt'>Van Rossum doesnt like this
approach much because the imports appear in a strange place, but it does work.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Matthias Urlichs recommends
restructuring your code so that the recursive import is not necessary in the
first place.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>These solutions are not mutually exclusive.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>2.7.4 __import__(x.y.z) returns &lt;module x&gt;; how do I
get z?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Consider using the convenience function <span
style='font-size:9.0pt;line-height:108%'>import_module() </span>from <span
style='font-size:9.0pt;line-height:108%'>importlib </span>instead:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:0in;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image126.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:31.15pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>2.7.5 When I edit an imported module and
reimport it, the changes dont show up. Why does this happen?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>For reasons of efficiency as well as consistency, Python
only reads the module file on the first time a module is imported. If it
didnt, in a program consisting of many modules where each one imports the same
basic module, the basic module would be parsed and re-parsed many times. To
force re-reading of a changed module, do this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image127.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Warning: this technique is not 100% fool-proof. In
particular, modules containing statements like</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image128.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>will continue to work with the old version of the imported
objects. If the module contains class definitions, existing class instances
will <i>not </i>be updated to use the new class definition. This can result in
the following paradoxical behaviour:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=121
src="Python%20Frequently%20Asked%20Questions_files/image129.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The nature of the problem is made clear if you print out
the identity of the class objects:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:333.3pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image130.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>2.7. Modules</span></b></p>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:107%'>&nbsp;</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection11>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 120288"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>CHAPTER</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>THREE</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 120289"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>DESIGN
AND HISTORY FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.1 Why does Python use indentation for grouping of statements?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Guido van Rossum believes that
using indentation for grouping is extremely elegant and contributes a lot to
the clarity of the average Python program. Most people learn to love this
feature after a while.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Since there are no begin/end brackets there cannot be a
disagreement between grouping perceived by the parser and the human reader.
Occasionally C programmers will encounter a fragment of code like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image131.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Only the <span style='font-size:
9.0pt;line-height:108%'>x++ </span>statement is executed if the condition is
true, but the indentation leads many to believe otherwise. Even experienced C
programmers will sometimes stare at it a long time wondering as to why <span
style='font-size:9.0pt;line-height:108%'>y </span>is being decremented even for
<span style='font-size:9.0pt;line-height:108%'>x &gt; y</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Because there are no begin/end
brackets, Python is much less prone to coding-style conflicts. In C there are
many different ways to place the braces. After becoming used to reading and
writing code using a particular style, it is normal to feel somewhat uneasy
when reading (or being required to write) in a different one.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:21.45pt;margin-left:-.25pt;text-align:left;line-height:107%'>Many
coding styles place begin/end brackets on a line by themselves. This makes
programs considerably longer and wastes valuable screen space, making it harder
to get a good overview of a program. Ideally, a function should fit on one
screen (say, 2030 lines). 20 lines of Python can do a lot more work than 20
lines of C. This is not solely due to the lack of begin/end brackets  the lack
of declarations and the high-level data types are also responsible  but the
indentation-based syntax certainly helps.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:25.95pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.2 Why am I getting strange results with
simple arithmetic operations?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>See the next question.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.3 Why are floating-point calculations so inaccurate?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Users are often surprised by results like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image132.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>and think it is a bug in Python.
Its not. This has little to do with Python, and much more to do with how the
underlying platform handles floating-point numbers.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The <span style='font-size:9.0pt;
line-height:108%'>float </span>type in CPython uses a C <span style='font-size:
9.0pt;line-height:108%'>double </span>for storage. A <span style='font-size:
9.0pt;line-height:108%'>float </span>objects value is stored in binary
floating-point with a fixed precision (typically 53 bits) and Python uses C
operations, which in turn rely on the hardware implementation in the processor,
to perform floating-point operations. This means that as far as floating-point
operations are concerned, Python behaves like many popular languages including
C and Java.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Many numbers that can be written easily in decimal notation
cannot be expressed exactly in binary floating point. For example, after:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image133.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.35pt;
margin-left:-.25pt'>the value stored for <span style='font-size:9.0pt;
line-height:108%'>x </span>is a (very good) approximation to the decimal value <span
style='font-size:9.0pt;line-height:108%'>1.2</span>, but is not exactly equal
to it. On a typical machine, the actual stored value is:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:14.05pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='position:relative;z-index:-1895823360'><span style='left:0px;position:
absolute;left:-5px;top:-9526px;width:611px;height:1px'><img width=611 height=1
src="Python%20Frequently%20Asked%20Questions_files/image134.gif"></span></span><span
style='font-size:9.0pt;line-height:107%;color:#217F4F'>1.0011001100110011001100110011001100110011001100110011
</span><span style='font-size:9.0pt;line-height:107%'>(binary)</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.35pt;
margin-left:-.25pt'>which is exactly:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:14.05pt;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='position:relative;z-index:-1895822336'><span style='left:0px;position:
absolute;left:-5px;top:-9589px;width:611px;height:1px'><img width=611 height=1
src="Python%20Frequently%20Asked%20Questions_files/image134.gif"></span></span><span
style='font-size:9.0pt;line-height:107%;color:#217F4F'>1.1999999999999999555910790149937383830547332763671875
</span><span style='font-size:9.0pt;line-height:107%'>(decimal)</span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The typical precision of 53 bits
provides Python floats with 1516 decimal digits of accuracy.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>For a fuller explanation, please see the floating-point
arithmetic chapter in the Python tutorial.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.4 Why are Python strings immutable?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are several advantages.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:-.25pt;text-align:left;line-height:107%'>One
is performance: knowing that a string is immutable means we can allocate space
for it at creation time, and the storage requirements are fixed and unchanging.
This is also one of the reasons for the distinction between tuples and lists.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>Another advantage is that strings in Python are considered
as elemental as numbers. No amount of activity will change the value 8 to
anything else, and in Python, no amount of activity will change the string
eight to anything else.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:25.95pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.5 Why must self be used explicitly in
method definitions and calls?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The idea was borrowed from
Modula-3. It turns out to be very useful, for a variety of reasons.</p>

<p class=MsoNormal style='margin-left:-.25pt'>First, its more obvious that you
are using a method or instance attribute instead of a local variable. Reading <span
style='font-size:9.0pt;line-height:108%'>self.x </span>or <span
style='font-size:9.0pt;line-height:108%'>self.meth() </span>makes it absolutely
clear that an instance variable or method is used even if you dont know the
class definition by heart. In C++, you can sort of tell by the lack of a local
variable declaration (assuming globals are rare or easily recognizable)  but in
Python, there are no local variable declarations, so youd have to look up the
class definition to be sure. Some C++ and Java coding standards call for
instance attributes to have an <span style='font-size:9.0pt;line-height:108%'>m_
</span>prefix, so this explicitness is still useful in those languages, too.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Second, it means that no special
syntax is necessary if you want to explicitly reference or call the method from
a particular class. In C++, if you want to use a method from a base class which
is overridden in a derived class, you have to use the <span style='font-size:
9.0pt;line-height:108%'>:: </span>operator  in Python you can write <span
style='font-size:9.0pt;line-height:108%'>baseclass.methodname(self,
&lt;argument list&gt;)</span>. This is particularly useful for <span
style='font-size:9.0pt;line-height:108%'>__init__() </span>methods, and in
general in cases where a derived class method wants to extend the base class
method of the same name and thus has to call the base class method somehow.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Finally, for instance variables
it solves a syntactic problem with assignment: since local variables in Python
are (by definition!) those variables to which a value is assigned in a function
body (and that arent explicitly declared global), there has to be some way to
tell the interpreter that an assignment was meant to assign to an instance
variable instead of to a local variable, and it should preferably be syntactic
(for efficiency reasons). C++ does this through declarations, but Python
doesnt have declarations and it would be a pity having to introduce them just
for this purpose. Using the explicit <span style='font-size:9.0pt;line-height:
108%'>self.var </span>solves this nicely. Similarly, for using instance
variables, having to write <span style='font-size:9.0pt;line-height:108%'>self.var
</span>means that references to unqualified names inside a method dont have to
search the instances directories. To put it another way, local variables and
instance variables live in two different namespaces, and you need to tell
Python which namespace to use.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.6 Why cant I use an assignment in an expression?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Starting in Python 3.8, you can!</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Assignment expressions using the walrus operator <span
style='font-size:9.0pt;line-height:108%'>:= </span>assign a variable in an
expression:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image135.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:20.9pt;
margin-left:-.25pt'>See <a href="https://peps.python.org/pep-0572/"><b><span
style='color:#377063;text-decoration:none'>PEP 572</span></b></a><b><span
style='color:#377063'> </span></b>for more information.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:25.95pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.7 Why does Python use methods for some
functionality (e.g. list.index()) but functions for other (e.g. len(list))?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>As Guido said:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'><span style='line-height:108%'>(a)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>For some operations, prefix notation just reads better than
postfix  prefix (and infix!) operationshave a long tradition in mathematics
which likes notations where the visuals help the mathematician thinking about a
problem. Compare the easy with which we rewrite a formula like x*(a+b) into x*a
+ x*b to the clumsiness of doing the same thing using a raw OO notation.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:24.9pt;margin-bottom:
5.65pt;margin-left:25.4pt'><span style='line-height:108%'>(b)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span>When I read code that says len(x) I <i>know </i>that it is asking
for the length of something. This tells me two things: the result is an
integer, and the argument is some kind of container. To the contrary, when I
read x.len(), I have to already know that x is some kind of container
implementing an interface or inheriting from a class that has a standard len().
Witness the confusion we occasionally have when a class that is not
implementing a mapping has a get() or keys() method, or something that isnt a
file has a write() method.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:20.3pt;margin-left:109.85pt;text-align:left;line-height:110%'><a
href="https://mail.python.org/pipermail/python-3000/2006-November/004643.html"><span
style='color:black;text-decoration:none'></span></a><a
href="https://mail.python.org/pipermail/python-3000/2006-November/004643.html"><span
style='color:#377063;text-decoration:none'>https://mail.python.org/pipermail/python-3000/2006-November/004643.html</span></a></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.8 Why is join() a string method instead of a list or tuple
method?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Strings became much more like other standard types starting
in Python 1.6, when methods were added which give the same functionality that
has always been available using the functions of the string module. Most of
these new methods have been widely accepted, but the one which appears to make
some programmers feel uncomfortable is:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image136.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>which gives the result:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image137.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are two common arguments
against this usage.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The first runs along the lines
of: It looks really ugly using a method of a string literal (string
constant), to which the answer is that it might, but a string literal is just
a fixed value. If the methods are to be allowed on names bound to strings there
is no logical reason to make them unavailable on literals.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The second objection is typically cast as: I am really
telling a sequence to join its members together with a string constant. Sadly,
you arent. For some reason there seems to be much less difficulty with having <span
style='font-size:9.0pt;line-height:108%'>split() </span>as a string method,
since in that case it is easy to see that</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image138.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>is an instruction to a string
literal to return the substrings delimited by the given separator (or, by
default, arbitrary runs of white space).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:17.45pt;
margin-left:-.25pt'><span style='font-size:9.0pt;line-height:108%'>join() </span>is
a string method because in using it you are telling the separator string to
iterate over a sequence of strings and insert itself between adjacent elements.
This method can be used with any argument which obeys the rules for sequence
objects, including any new classes you might define yourself. Similar methods
exist for bytes and bytearray objects.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>3.6. Why cant I use an assignment in
an expression?</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.9 How fast are exceptions?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A <span style='font-size:9.0pt;line-height:108%'>try</span>/<span
style='font-size:9.0pt;line-height:108%'>except </span>block is extremely
efficient if no exceptions are raised. Actually catching an exception is
expensive. In versions of Python prior to 2.0 it was common to use this idiom:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image139.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>This only made sense when you expected the dict to have the
key almost all the time. If that wasnt the case, you coded it like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.35pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image140.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.55pt;
margin-left:-.25pt'>For this specific case, you could also use <span
style='font-size:9.0pt;line-height:108%'>value = dict.setdefault(key,
getvalue(key))</span>, but only if the <span style='font-size:9.0pt;line-height:
108%'>getvalue() </span>call is cheap enough because it is evaluated in all
cases.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.10 Why isnt there a switch or case statement in Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>In general, structured switch
statements execute one block of code when an expression has a particular value
or set of values. Since Python 3.10 one can easily match literal values, or
constants within a namespace, with a <span style='font-size:9.0pt;line-height:
108%'>match ... case </span>statement. An older alternative is a sequence of <span
style='font-size:9.0pt;line-height:108%'>if... elif... elif... else</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>For cases where you need to choose from a very large number
of possibilities, you can create a dictionary mapping case values to functions
to call. For example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=105
src="Python%20Frequently%20Asked%20Questions_files/image141.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>For calling methods on objects, you can simplify yet
further by using the <span style='font-size:9.0pt;line-height:108%'>getattr() </span>built-in
to retrieve methods with a particular name:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=137
src="Python%20Frequently%20Asked%20Questions_files/image142.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Its suggested that you use a
prefix for the method names, such as <span style='font-size:9.0pt;line-height:
108%'>visit_ </span>in this example. Without such a prefix, if values are
coming from an untrusted source, an attacker would be able to call any method
on your object.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Imitating switch with
fallthrough, as with Cs switch-case-default, is possible, much harder, and
less needed.</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection12>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:33.95pt;text-align:left;text-indent:-34.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.11 Cant you emulate threads in the
interpreter instead of relying on an OS-specific thread implementation?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Answer 1: Unfortunately, the
interpreter pushes at least one C stack frame for each Python stack frame.
Also, extensions can call back into Python at almost random moments. Therefore,
a complete threads implementation requires thread support for C.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>Answer 2: Fortunately, there is <a
href="https://github.com/stackless-dev/stackless/wiki"><span style='color:#377063;
text-decoration:none'>Stackless Python</span></a>, which has a completely
redesigned interpreter loop that avoids the C stack.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.12 Why cant lambda expressions contain statements?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python lambda expressions cannot
contain statements because Pythons syntactic framework cant handle statements
nested inside expressions. However, in Python, this is not a serious problem.
Unlike lambda forms in other languages, where they add functionality, Python
lambdas are only a shorthand notation if youre too lazy to define a function.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>Functions are already first class objects in Python, and
can be declared in a local scope. Therefore the only advantage of using a
lambda instead of a locally defined function is that you dont need to invent a
name for the function  but thats just a local variable to which the function
object (which is exactly the same type of object that a lambda expression
yields) is assigned!</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:33.95pt;text-align:left;text-indent:-34.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.13 Can Python be compiled to machine
code, C or some other language?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'><a href="https://cython.org/"><span style='color:#377063;
text-decoration:none'>Cython</span></a><span style='color:#377063'> </span>compiles
a modified version of Python with optional annotations into C extensions. <a
href="https://nuitka.net/"><span style='color:#377063;text-decoration:none'>Nuitka</span></a><span
style='color:#377063'> </span>is an up-andcoming compiler of Python into C++
code, aiming to support the full Python language.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.14 How does Python manage memory?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The details of Python memory
management depend on the implementation. The standard implementation of Python,
<i><span style='color:#355F7C'>CPython</span></i>, uses reference counting to
detect inaccessible objects, and another mechanism to collect reference cycles,
periodically executing a cycle detection algorithm which looks for inaccessible
cycles and deletes the objects involved. The <span style='font-size:9.0pt;
line-height:108%'>gc </span>module provides functions to perform a garbage
collection, obtain debugging statistics, and tune the collectors parameters.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Other implementations (such as <a
href="https://www.jython.org/"><span style='color:#377063;text-decoration:none'>Jython</span></a><span
style='color:#377063'> </span>or <a href="https://pypy.org/"><span
style='color:#377063;text-decoration:none'>PyPy</span></a>), however, can rely
on a different mechanism such as a full-blown garbage collector. This
difference can cause some subtle porting problems if your Python code depends
on the behavior of the reference counting implementation.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>In some Python implementations, the following code (which
is fine in CPython) will probably run out of file descriptors:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image143.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Indeed, using CPythons reference
counting and destructor scheme, each new assignment to <span style='font-size:
9.0pt;line-height:108%'>f </span>closes the previous file. With a traditional
GC, however, those file objects will only get collected (and closed) at varying
and possibly long intervals.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If you want to write code that will work with any Python
implementation, you should explicitly close the file or use the <span
style='font-size:9.0pt;line-height:108%'>with </span>statement; this will work
regardless of memory management scheme:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:34.4pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image144.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><img
border=0 width=603 height=1 id="Group 128462"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>3.11. Cant you emulate threads in the
interpreter instead of relying on an OS-specific thread implementation?</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:33.95pt;text-align:left;text-indent:-34.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.15 Why doesnt CPython use a more
traditional garbage collection scheme?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>For one thing, this is not a C
standard feature and hence its not portable. (Yes, we know about the Boehm GC
library. It has bits of assembler code for <i>most </i>common platforms, not
for all of them, and although it is mostly transparent, it isnt completely
transparent; patches are required to get Python to work with it.)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.8pt;
margin-left:-.25pt'>Traditional GC also becomes a problem when Python is
embedded into other applications. While in a standalone Python its fine to
replace the standard <span style='font-size:9.0pt;line-height:108%'>malloc() </span>and
<span style='font-size:9.0pt;line-height:108%'>free() </span>with versions
provided by the GC library, an application embedding Python may want to have
its <i>own </i>substitute for <span style='font-size:9.0pt;line-height:108%'>malloc()
</span>and <span style='font-size:9.0pt;line-height:108%'>free()</span>, and
may not want Pythons. Right now, CPython works with anything that implements <span
style='font-size:9.0pt;line-height:108%'>malloc() </span>and <span
style='font-size:9.0pt;line-height:108%'>free() </span>properly.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.16 Why isnt all memory freed when CPython exits?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Objects referenced from the
global namespaces of Python modules are not always deallocated when Python
exits. This may happen if there are circular references. There are also certain
bits of memory that are allocated by the C library that are impossible to free
(e.g. a tool like Purify will complain about these). Python is, however,
aggressive about cleaning up memory on exit and does try to destroy every
single object.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>If you want to force Python to delete certain things on
deallocation use the <span style='font-size:9.0pt;line-height:108%'>atexit </span>module
to run a function that will force those deletions.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.17 Why are there separate tuple and list data types?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Lists and tuples, while similar
in many respects, are generally used in fundamentally different ways. Tuples
can be thought of as being similar to Pascal <span style='font-size:9.0pt;
line-height:108%'>records </span>or C <span style='font-size:9.0pt;line-height:
108%'>structs</span>; theyre small collections of related data which may be of
different types which are operated on as a group. For example, a Cartesian
coordinate is appropriately represented as a tuple of two or three numbers.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Lists, on the other hand, are
more like arrays in other languages. They tend to hold a varying number of
objects all of which have the same type and which are operated on one-by-one.
For example, <span style='font-size:9.0pt;line-height:108%'>os.listdir('.') </span>returns
a list of strings representing the files in the current directory. Functions
which operate on this output would generally not break if you added another
file or two to the directory.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>Tuples are immutable, meaning that once a tuple has been
created, you cant replace any of its elements with a new value. Lists are
mutable, meaning that you can always change a lists elements. Only immutable
elements can be used as dictionary keys, and hence only tuples and not lists
can be used as keys.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.18 How are lists implemented in CPython?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>CPythons lists are really
variable-length arrays, not Lisp-style linked lists. The implementation uses a
contiguous array of references to other objects, and keeps a pointer to this
array and the arrays length in a list head structure.</p>

<p class=MsoNormal style='margin-left:-.25pt'>This makes indexing a list <span
style='font-size:9.0pt;line-height:108%'>a[i] </span>an operation whose cost is
independent of the size of the list or the value of the index.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>When items are appended or inserted, the array of
references is resized. Some cleverness is applied to improve the performance of
appending items repeatedly; when the array must be grown, some extra space is
allocated so the next few times dont require an actual resize.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.19 How are dictionaries implemented in CPython?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>CPythons dictionaries are
implemented as resizable hash tables. Compared to B-trees, this gives better
performance for lookup (the most common operation by far) under most
circumstances, and the implementation is simpler.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.8pt;
margin-left:-.25pt'>Dictionaries work by computing a hash code for each key
stored in the dictionary using the <span style='font-size:9.0pt;line-height:
108%'>hash() </span>built-in function. The hash code varies widely depending on
the key and a per-process seed; for example, <span style='font-size:9.0pt;
line-height:108%'>'Python' </span>could hash to <span style='font-size:9.0pt;
line-height:108%'>-539294296 </span>while <span style='font-size:9.0pt;
line-height:108%'>'python'</span>, a string that differs by a single bit, could
hash to <span style='font-size:9.0pt;line-height:108%'>1142331976</span>. The
hash code is then used to calculate a location in an internal array where the
value will be stored. Assuming that youre storing keys that all have different
hash values, this means that dictionaries take constant time  <i>O</i>(1), in
Big-O notation  to retrieve a key.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.20 Why must dictionary keys be immutable?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The hash table implementation of
dictionaries uses a hash value calculated from the key value to find the key.
If the key were a mutable object, its value could change, and thus its hash
could also change. But since whoever changes the key object cant tell that it
was being used as a dictionary key, it cant move the entry around in the
dictionary. Then, when you try to look up the same object in the dictionary it
wont be found because its hash value is different. If you tried to look up the
old value it wouldnt be found either, because the value of the object found in
that hash bin would be different.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If you want a dictionary indexed
with a list, simply convert the list to a tuple first; the function <span
style='font-size:9.0pt;line-height:108%'>tuple(L) </span>creates a tuple with
the same entries as the list <span style='font-size:9.0pt;line-height:108%'>L</span>.
Tuples are immutable and can therefore be used as dictionary keys.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Some unacceptable solutions that
have been proposed:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.9pt;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Hash
lists by their address (object ID). This doesnt work because if you construct
a new list with the same value it wont be found; e.g.:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.1pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=41
src="Python%20Frequently%20Asked%20Questions_files/image146.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>would raise a <span
style='font-size:9.0pt;line-height:108%'>KeyError </span>exception because the
id of the <span style='font-size:9.0pt;line-height:108%'>[1, 2] </span>used in
the second line differs from that in the first line. In other words, dictionary
keys should be compared using <span style='font-size:9.0pt;line-height:108%'>==</span>,
not using <span style='font-size:9.0pt;line-height:108%'>is</span>.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Make a copy when using a list as a key. This doesnt work because
the list, being a mutable object, could contain a reference to itself, and then
the copying code would run into an infinite loop.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Allow lists as keys but tell the user not to modify them. This
would allow a class of hard-to-track bugs in programs when you forgot or
modified a list by accident. It also invalidates an important invariant of
dictionaries: every value in <span style='font-size:9.0pt;line-height:108%'>d.keys()
</span>is usable as a key of the dictionary.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Mark lists as read-only once they are used as a dictionary key.
The problem is that its not just the top-level object that could change its
value; you could use a tuple containing a list as a key. Entering anything as a
key into a dictionary would require marking all objects reachable from there as
read-only  and again, self-referential objects could cause an infinite loop.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>There is a trick to get around this if you need to, but use
it at your own risk: You can wrap a mutable structure inside a class instance
which has both a <span style='font-size:9.0pt;line-height:108%'>__eq__() </span>and
a <span style='font-size:9.0pt;line-height:108%'>__hash__() </span>method. You
must then make sure that the hash value for all such wrapper objects that
reside in a dictionary (or other hash based structure), remain fixed while the
object is in the dictionary (or other structure).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:31.25pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=264
src="Python%20Frequently%20Asked%20Questions_files/image147.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><img
border=0 width=603 height=1 id="Group 128127"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>3.20. Why must dictionary keys be
immutable?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Note that the hash computation is
complicated by the possibility that some members of the list may be unhashable
and also by the possibility of arithmetic overflow.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Furthermore it must always be the
case that if <span style='font-size:9.0pt;line-height:108%'>o1 == o2 </span>(ie
<span style='font-size:9.0pt;line-height:108%'>o1.__eq__(o2) is True</span>)
then <span style='font-size:9.0pt;line-height:108%'>hash(o1) == hash(o2) </span>(ie,
<span style='font-size:9.0pt;line-height:108%'>o1.__hash__() == o2.__hash__()</span>),
regardless of whether the object is in a dictionary or not. If you fail to meet
these restrictions dictionaries and other hash based structures will misbehave.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.05pt;
margin-left:-.25pt'>In the case of <span style='font-size:9.0pt;line-height:
108%'>ListWrapper</span>, whenever the wrapper object is in a dictionary the
wrapped list must not change to avoid anomalies. Dont do this unless you are
prepared to think hard about the requirements and the consequences of not
meeting them correctly. Consider yourself warned.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:70.7pt;text-align:left;text-indent:-34.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.21<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>Why doesnt list.sort() return the sorted
list?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>In situations where performance
matters, making a copy of the list just to sort it would be wasteful.
Therefore, <span style='font-size:9.0pt;line-height:108%'>list. sort() </span>sorts
the list in place. In order to remind you of that fact, it does not return the
sorted list. This way, you wont be fooled into accidentally overwriting a list
when you need a sorted copy but also need to keep the unsorted version around.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If you want to return a new list, use the built-in <span
style='font-size:9.0pt;line-height:108%'>sorted() </span>function instead. This
function creates a new list from a provided iterable, sorts it and returns it.
For example, heres how to iterate over the keys of a dictionary in sorted
order:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:21.85pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image148.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:70.7pt;text-align:left;text-indent:-34.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.22<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>How do you specify and enforce an interface
spec in Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>An interface specification for a
module as provided by languages such as C++ and Java describes the prototypes
for the methods and functions of the module. Many feel that compile-time
enforcement of interface specifications helps in the construction of large
programs.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Python 2.6 adds an <span
style='font-size:9.0pt;line-height:108%'>abc </span>module that lets you define
Abstract Base Classes (ABCs). You can then use <span style='font-size:9.0pt;
line-height:108%'>isinstance() </span>and <span style='font-size:9.0pt;
line-height:108%'>issubclass() </span>to check whether an instance or a class
implements a particular ABC. The <span style='font-size:9.0pt;line-height:108%'>collections.abc
</span>module defines a set of useful ABCs such as <span style='font-size:9.0pt;
line-height:108%'>Iterable</span>, <span style='font-size:9.0pt;line-height:
108%'>Container</span>, and <span style='font-size:9.0pt;line-height:108%'>MutableMapping</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For Python, many of the
advantages of interface specifications can be obtained by an appropriate test
discipline for components.</p>

<p class=MsoNormal style='margin-left:-.25pt'>A good test suite for a module
can both provide a regression test and serve as a module interface
specification and a set of examples. Many Python modules can be run as a script
to provide a simple self test. Even modules which use complex external interfaces
can often be tested in isolation using trivial stub emulations of the
external interface. The <span style='font-size:9.0pt;line-height:108%'>doctest </span>and
<span style='font-size:9.0pt;line-height:108%'>unittest </span>modules or
third-party test frameworks can be used to construct exhaustive test suites
that exercise every line of code in a module.</p>

<p class=MsoNormal style='margin-left:-.25pt'>An appropriate testing discipline
can help build large complex applications in Python as well as having interface
specifications would. In fact, it can be better because an interface
specification cannot test certain properties of a program. For example, the <span
style='font-size:9.0pt;line-height:108%'>list.append() </span>method is
expected to add new elements to the end of some internal list; an interface
specification cannot test that your <span style='font-size:9.0pt;line-height:
108%'>list.append() </span>implementation will actually do this correctly, but
its trivial to check this property in a test suite.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.1pt;
margin-left:-.25pt'>Writing test suites is very helpful, and you might want to
design your code to make it easily tested. One increasingly popular technique,
test-driven development, calls for writing parts of the test suite first,
before you write any of the actual code. Of course Python allows you to be
sloppy and not write test cases at all.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.23 Why is there no goto?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>In the 1970s people realized that
unrestricted goto could lead to messy spaghetti code that was hard to
understand and revise. In a high-level language, it is also unneeded as long as
there are ways to branch (in Python, with <span style='font-size:9.0pt;
line-height:108%'>if </span>statements and <span style='font-size:9.0pt;
line-height:108%'>or</span>, <span style='font-size:9.0pt;line-height:108%'>and</span>,
and <span style='font-size:9.0pt;line-height:108%'>if</span>/<span
style='font-size:9.0pt;line-height:108%'>else </span>expressions) and loop
(with <span style='font-size:9.0pt;line-height:108%'>while </span>and <span
style='font-size:9.0pt;line-height:108%'>for </span>statements, possibly
containing <span style='font-size:9.0pt;line-height:108%'>continue </span>and <span
style='font-size:9.0pt;line-height:108%'>break</span>).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>One can also use exceptions to provide a structured goto
that works even across function calls. Many feel that exceptions can
conveniently emulate all reasonable uses of the <span style='font-size:9.0pt;
line-height:108%'>go </span>or <span style='font-size:9.0pt;line-height:108%'>goto
</span>constructs of C, Fortran, and other languages. For example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=153
src="Python%20Frequently%20Asked%20Questions_files/image149.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>This doesnt allow you to jump into the middle of a loop,
but thats usually considered an abuse of <span style='font-size:9.0pt;
line-height:108%'>goto </span>anyway. Use sparingly.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.24 Why cant raw strings (r-strings) end with a backslash?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>More precisely, they cant end
with an odd number of backslashes: the unpaired backslash at the end escapes
the closing quote character, leaving an unterminated string.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Raw strings were designed to ease
creating input for processors (chiefly regular expression engines) that want to
do their own backslash escape processing. Such processors consider an unmatched
trailing backslash to be an error anyway, so raw strings disallow that. In
return, they allow you to pass on the string quote character by escaping it
with a backslash. These rules work well when r-strings are used for their
intended purpose.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If youre trying to build Windows pathnames, note that all
Windows system calls accept forward slashes too:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image150.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>If youre trying to build a pathname for a DOS command, try
e.g. one of</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:22.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image151.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:33.95pt;text-align:left;text-indent:-34.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>3.25 Why doesnt Python have a with
statement for attribute assignments?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Python has a <span style='font-size:9.0pt;line-height:108%'>with
</span>statement that wraps the execution of a block, calling code on the
entrance and exit from the block. Some languages have a construct that looks
like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image152.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>In Python, such a construct would
be ambiguous.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Other languages, such as Object
Pascal, Delphi, and C++, use static types, so its possible to know, in an
unambiguous way, what member is being assigned to. This is the main point of
static typing  the compiler <i>always </i>knows the scope of every variable at
compile time.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Python uses dynamic types. It is
impossible to know in advance which attribute will be referenced at runtime.
Member attributes may be added or removed from objects on the fly. This makes
it impossible to know, from a simple reading, what attribute is being
referenced: a local one, a global one, or a member attribute?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:17.8pt;
margin-left:-.25pt'>For instance, take the following incomplete snippet:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><img
border=0 width=603 height=1 id="Group 128310"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>3.24. Why cant raw strings
(r-strings) end with a backslash?</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image153.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The snippet assumes that <span
style='font-size:9.0pt;line-height:108%'>a </span>must have a member attribute
called <span style='font-size:9.0pt;line-height:108%'>x</span>. However, there
is nothing in Python that tells the interpreter this. What should happen if <span
style='font-size:9.0pt;line-height:108%'>a </span>is, let us say, an integer?
If there is a global variable named <span style='font-size:9.0pt;line-height:
108%'>x</span>, will it be used inside the <span style='font-size:9.0pt;
line-height:108%'>with </span>block? As you see, the dynamic nature of Python
makes such choices much harder.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The primary benefit of <span style='font-size:9.0pt;
line-height:108%'>with </span>and similar language features (reduction of code
volume) can, however, easily be achieved in Python by assignment. Instead of:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image154.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>write this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image155.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>This also has the side-effect of
increasing execution speed because name bindings are resolved at run-time in
Python, and the second version only needs to perform the resolution once.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.8pt;
margin-left:-.25pt'>Similar proposals that would introduce syntax to further
reduce code volume, such as using a leading dot, have been rejected in favour
of explicitness (see <a
href="https://mail.python.org/pipermail/python-ideas/2016-May/040070.html"><span
style='color:#377063;text-decoration:none'>https://mail.python.org/pipermail/python-ideas/2016-May/040070.html</span></a>).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.26 Why dont generators support the with statement?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.6pt;
margin-left:-.25pt'>For technical reasons, a generator used directly as a
context manager would not work correctly. When, as is most common, a generator
is used as an iterator run to completion, no closing is needed. When it is,
wrap it as <span style='font-size:9.0pt;line-height:108%'>contextlib.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:21.55pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>closing(generator) </span>in the <span
style='font-size:9.0pt;line-height:112%'>with </span>statement.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.27 Why are colons required for the if/while/def/class
statements?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The colon is required primarily to enhance readability (one
of the results of the experimental ABC language). Consider this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image156.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>versus</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image157.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>Notice how the second one is
slightly easier to read. Notice further how a colon sets off the example in
this FAQ answer; its a standard usage in English.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Another minor reason is that the
colon makes it easier for editors with syntax highlighting; they can look for
colons to decide when indentation needs to be increased instead of having to do
a more elaborate parsing of the program text.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>3.28 Why does Python allow commas at the end of lists and
tuples?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Python lets you add a trailing comma at the end of lists,
tuples, and dictionaries:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=105
src="Python%20Frequently%20Asked%20Questions_files/image158.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are several reasons to
allow this.</p>

<p class=MsoNormal style='margin-left:-.25pt'>When you have a literal value for
a list, tuple, or dictionary spread across multiple lines, its easier to add
more elements because you dont have to remember to add a comma to the previous
line. The lines can also be reordered without creating a syntax error.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Accidentally omitting the comma can lead to errors that are
hard to diagnose. For example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=105
src="Python%20Frequently%20Asked%20Questions_files/image159.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>This list looks like it has four
elements, but it actually contains three: fee, fiefoo and fum. Always
adding the comma avoids this source of error.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:364.6pt;
margin-left:-.25pt'>Allowing the trailing comma may also make programmatic code
generation easier.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><img
border=0 width=603 height=1 id="Group 127843"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>3.28. Why does Python allow commas at
the end of lists and tuples?</span></b></p>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:107%'>&nbsp;</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection13>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 128870"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>CHAPTER</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>FOUR</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 128871"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>LIBRARY
AND EXTENSION FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>4.1 General Library Questions</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.1.1 How do I find a module or application to perform task X?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Check the Library Reference to
see if theres a relevant standard library module. (Eventually youll learn
whats in the standard library and will be able to skip this step.)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>For third-party packages, search the <a
href="https://pypi.org/"><span style='color:#377063;text-decoration:none'>Python
Package Index</span></a><span style='color:#377063'> </span>or try <a
href="https://www.google.com/"><span style='color:#377063;text-decoration:none'>Google</span></a><span
style='color:#377063'> </span>or another web search engine. Searching for
Python plus a keyword or two for your topic of interest will usually find
something helpful.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.1.2 Where is the math.py (socket.py, regex.py, etc.) source
file?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>If you cant find a source file
for a module it may be a built-in or dynamically loaded module implemented in
C, C++ or other compiled language. In this case you may not have the source
file or it may be something like <span style='font-size:9.0pt;line-height:108%'>mathmodule.c</span>,
somewhere in a C source directory (not on the Python Path).</p>

<p class=MsoNormal style='margin-left:-.25pt'>There are (at least) three kinds
of modules in Python:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:58.4pt;margin-bottom:
5.65pt;margin-left:24.95pt;text-indent:-13.3pt'><span style='line-height:108%'>1)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>modules written
in Python (.py);</p>

<p class=MsoNormal style='margin-top:0in;margin-right:58.4pt;margin-bottom:
0in;margin-left:24.95pt;text-indent:-13.3pt;line-height:160%'><span
style='line-height:160%'>2)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>modules written in C and dynamically loaded (.dll, .pyd, .so,
.sl, etc); 3) modules written in C and linked with the interpreter; to get a
list of these, type:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:18.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=41
src="Python%20Frequently%20Asked%20Questions_files/image160.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.1.3 How do I make a Python script executable on Unix?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>You need to do two things: the
script files mode must be executable and the first line must begin with <span
style='font-size:9.0pt;line-height:108%'>#! </span>followed by the path of the
Python interpreter.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:59.95pt;margin-bottom:
0in;margin-left:-.25pt;line-height:160%'>The first is done by executing <span
style='font-size:9.0pt;line-height:160%'>chmod +x scriptfile </span>or perhaps <span
style='font-size:9.0pt;line-height:160%'>chmod 755 scriptfile</span>. The
second can be done in a number of ways. The most straightforward way is to
write</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image161.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>as the very first line of your
file, using the pathname for where the Python interpreter is installed on your
platform.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
margin-left:-.25pt'>If you would like the script to be independent of where the
Python interpreter lives, you can use the <b><span style='font-size:9.0pt;
line-height:108%'>env </span></b>program. Almost all Unix variants support the
following, assuming the Python interpreter is in a directory on the users <span
style='font-size:9.0pt;line-height:108%'>PATH</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image162.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'><i>Dont </i>do this for CGI
scripts. The <span style='font-size:9.0pt;line-height:108%'>PATH </span>variable
for CGI scripts is often very minimal, so you need to use the actual absolute
pathname of the interpreter.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Occasionally, a users
environment is so full that the <b><span style='font-size:9.0pt;line-height:
108%'>/usr/bin/env </span></b>program fails; or theres no env program at all.
In that case, you can try the following hack (due to Alex Rezinsky):</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image163.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The minor disadvantage is that this defines the scripts
__doc__ string. However, you can fix that by adding</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image164.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.1.4 Is there a curses/termcap package for Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>For Unix variants: The standard
Python source distribution comes with a curses module in the <a
href="https://github.com/python/cpython/tree/3.13/Modules"><span
style='color:#377063;text-decoration:none'>Modules</span></a><span
style='color:#377063'> </span>subdirectory, though its not compiled by
default. (Note that this is not available in the Windows distribution  there
is no curses module for Windows.)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>curses </span>module
supports basic curses features as well as many additional functions from
ncurses and SYSV curses such as colour, alternative character set support,
pads, and mouse support. This means the module isnt compatible with operating
systems that only have BSD curses, but there dont seem to be any currently
maintained OSes that fall into this category.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.1.5 Is there an equivalent to Cs onexit() in Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>atexit </span>module
provides a register function that is similar to Cs <span style='font-size:
9.0pt;line-height:108%'>onexit()</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.1.6 Why dont my signal handlers work?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The most common problem is that the signal handler is
declared with the wrong argument list. It is called as</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image165.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>so it should be declared with two parameters:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:22.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image166.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>4.2 Common tasks</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.2.1 How do I test a Python program or component?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python comes with two testing
frameworks. The <span style='font-size:9.0pt;line-height:108%'>doctest </span>module
finds examples in the docstrings for a module and runs them, comparing the
output with the expected output given in the docstring.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The <span style='font-size:9.0pt;
line-height:108%'>unittest </span>module is a fancier testing framework
modelled on Java and Smalltalk testing frameworks.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.8pt;
margin-left:-.25pt'>To make testing easier, you should use good modular design
in your program. Your program should have almost all functionality encapsulated
in either functions or class methods  and this sometimes has the surprising
and delightful effect of making the program run faster (because local variable
accesses are faster than global accesses). Furthermore the program should avoid
depending on mutating global variables, since this makes testing much more
difficult to do. The global main logic of your program may be as simple as</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image167.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>at the bottom of the main module
of your program.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Once your program is organized as
a tractable collection of function and class behaviours, you should write test
functions that exercise the behaviours. A test suite that automates a sequence
of tests can be associated with each module. This sounds like a lot of work,
but since Python is so terse and flexible its surprisingly easy. You can make
coding much more pleasant and fun by writing your test functions in parallel
with the production code, since this makes it easy to find bugs and even
design flaws earlier.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Support modules that are not intended to be the main
module of a program may include a self-test of the module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image168.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>Even programs that interact with complex external
interfaces may be tested when the external interfaces are unavailable by using
fake interfaces implemented in Python.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.2.2 How do I create documentation from doc strings?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>pydoc </span>module
can create HTML from the doc strings in your Python source code. An alternative
for creating API documentation purely from docstrings is <a
href="https://epydoc.sourceforge.net/"><span style='color:#377063;text-decoration:
none'>epydoc</span></a>. <a href="https://www.sphinx-doc.org/"><span
style='color:#377063;text-decoration:none'>Sphinx</span></a><span
style='color:#377063'> </span>can also include docstring content.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.2.3 How do I get a single keypress at a time?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>For Unix variants there are several solutions. Its
straightforward to do this using curses, but curses is a fairly large module to
learn.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>4.3 Threads</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.3.1 How do I program using threads?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>Be sure to use the <span style='font-size:9.0pt;line-height:
108%'>threading </span>module and not the <span style='font-size:9.0pt;
line-height:108%'>_thread </span>module. The <span style='font-size:9.0pt;
line-height:108%'>threading </span>module builds convenient abstractions on top
of the low-level primitives provided by the <span style='font-size:9.0pt;
line-height:108%'>_thread </span>module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.3.2 None of my threads seem to run: why?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>As soon as the main thread exits,
all threads are killed. Your main thread is running too quickly, giving the
threads no time to do any work.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A simple fix is to add a sleep to the end of the program
thats long enough for all the threads to finish:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=184
src="Python%20Frequently%20Asked%20Questions_files/image169.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>But now (on many platforms) the
threads dont run in parallel, but appear to run sequentially, one at a time!
The reason is that the OS thread scheduler doesnt start a new thread until the
previous thread is blocked.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A simple fix is to add a tiny sleep to the start of the run
function:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:23.2pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=612 height=130
src="Python%20Frequently%20Asked%20Questions_files/image170.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>4.3. Threads</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continued from previous page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.1pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=56
src="Python%20Frequently%20Asked%20Questions_files/image171.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>Instead of trying to guess a good delay value for <span
style='font-size:9.0pt;line-height:108%'>time.sleep()</span>, its better to
use some kind of semaphore mechanism. One idea is to use the <span
style='font-size:9.0pt;line-height:108%'>queue </span>module to create a queue
object, let each thread append a token to the queue when it finishes, and let
the main thread read as many tokens from the queue as there are threads.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.3.3 How do I parcel out work among a bunch of worker threads?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The easiest way is to use the <span
style='font-size:9.0pt;line-height:108%'>concurrent.futures </span>module,
especially the <span style='font-size:9.0pt;line-height:108%'>ThreadPoolExecutor
</span>class.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Or, if you want fine control over
the dispatching algorithm, you can write your own logic manually. Use the <span
style='font-size:9.0pt;line-height:108%'>queue </span>module to create a queue
containing a list of jobs. The <span style='font-size:9.0pt;line-height:108%'>Queue
</span>class maintains a list of objects and has a <span style='font-size:9.0pt;
line-height:108%'>.put(obj) </span>method that adds items to the queue and a <span
style='font-size:9.0pt;line-height:108%'>.get() </span>method to return them.
The class will take care of the locking necessary to ensure that each job is
handed out exactly once.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Heres a trivial example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=612 height=567
src="Python%20Frequently%20Asked%20Questions_files/image172.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>When run, this will produce the
following output:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Running worker</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Running worker</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Running worker</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Running worker</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Running worker</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Main thread sleeping</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Worker &lt;Thread(worker 1, started
130283832797456)&gt; running with argument 0</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Worker &lt;Thread(worker 2, started
130283824404752)&gt; running with argument 1</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Worker &lt;Thread(worker 3, started
130283816012048)&gt; running with argument 2</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Worker &lt;Thread(worker 4, started
130283807619344)&gt; running with argument 3</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:37.05pt;
margin-bottom:13.4pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895821312'><span style='left:0px;position:
absolute;left:-5px;top:-22355px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image173.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Worker &lt;Thread(worker 5, started
130283799226640)&gt; running with argument 4 Worker &lt;Thread(worker 1,
started 130283832797456)&gt; running with argument 5 ...</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>Consult the modules documentation for more details; the <span
style='font-size:9.0pt;line-height:108%'>Queue </span>class provides a
featureful interface.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.3.4 What kinds of global value mutation are thread-safe?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>A <i><span style='color:#355F7C'>global
interpreter lock </span></i>(GIL) is used internally to ensure that only one
thread runs in the Python VM at a time. In general, Python offers to switch
among threads only between bytecode instructions; how frequently it switches
can be set via <span style='font-size:9.0pt;line-height:108%'>sys.setswitchinterval()</span>.
Each bytecode instruction and therefore all the C implementation code reached
from each instruction is therefore atomic from the point of view of a Python
program.</p>

<p class=MsoNormal style='margin-left:-.25pt'>In theory, this means an exact
accounting requires an exact understanding of the PVM bytecode implementation.
In practice, it means that operations on shared variables of built-in data
types (ints, lists, dicts, etc) that look atomic really are.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>For example, the following operations are all atomic (L,
L1, L2 are lists, D, D1, D2 are dicts, x, y are objects, i, j are ints):</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=184
src="Python%20Frequently%20Asked%20Questions_files/image174.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>These arent:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image175.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>Operations that replace other objects may invoke those
other objects <span style='font-size:9.0pt;line-height:108%'>__del__() </span>method
when their reference count reaches zero, and that can affect things. This is
especially true for the mass updates to dictionaries and lists. When in doubt,
use a mutex!</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.3.5 Cant we get rid of the Global Interpreter Lock?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:34.7pt;
margin-left:-.25pt'>The <i><span style='color:#355F7C'>global interpreter lock </span></i>(GIL)
is often seen as a hindrance to Pythons deployment on high-end multiprocessor
server machines, because a multi-threaded Python program effectively only uses
one CPU, due to the insistence that (almost) all Python code can only run while
the GIL is held.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>4.3. Threads</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>With the approval of <a
href="https://peps.python.org/pep-0703/"><b><span style='color:#377063;
text-decoration:none'>PEP 703</span></b></a><b><span style='color:#377063'> </span></b>work
is now underway to remove the GIL from the CPython implementation of Python.
Initially it will be implemented as an optional compiler flag when building the
interpreter, and so separate builds will be available with and without the GIL.
Long-term, the hope is to settle on a single build, once the performance
implications of removing the GIL are fully understood. Python 3.13 is likely to
be the first release containing this work, although it may not be completely
functional in this release.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The current work to remove the
GIL is based on a <a href="https://github.com/colesbury/nogil"><span
style='color:#377063;text-decoration:none'>fork of Python 3.9 with the GIL
removed</span></a><span style='color:#377063'> </span>by Sam Gross. Prior to
that, in the days of Python 1.5, Greg Stein actually implemented a
comprehensive patch set (the free threading patches) that removed the GIL and
replaced it with fine-grained locking. Adam Olsen did a similar experiment in
his <a href="https://code.google.com/archive/p/python-safethread"><span
style='color:#377063;text-decoration:none'>python-safethread</span></a><span
style='color:#377063'> </span>project. Unfortunately, both of these earlier
experiments exhibited a sharp drop in single-thread performance (at least 30%
slower), due to the amount of fine-grained locking necessary to compensate for
the removal of the GIL. The Python 3.9 fork is the first attempt at removing
the GIL with an acceptable performance impact.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The presence of the GIL in
current Python releases doesnt mean that you cant make good use of Python on
multiCPU machines! You just have to be creative with dividing the work up
between multiple <i>processes </i>rather than multiple <i>threads</i>. The <span
style='font-size:9.0pt;line-height:108%'>ProcessPoolExecutor </span>class in
the new <span style='font-size:9.0pt;line-height:108%'>concurrent.futures </span>module
provides an easy way of doing so; the <span style='font-size:9.0pt;line-height:
108%'>multiprocessing </span>module provides a lower-level API in case you want
more control over dispatching of tasks.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Judicious use of C extensions
will also help; if you use a C extension to perform a time-consuming task, the
extension can release the GIL while the thread of execution is in the C code
and allow other threads to get some work done. Some standard library modules
such as <span style='font-size:9.0pt;line-height:108%'>zlib </span>and <span
style='font-size:9.0pt;line-height:108%'>hashlib </span>already do this.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>An alternative approach to reducing the impact of the GIL
is to make the GIL a per-interpreter-state lock rather than truly global. This
was first implemented in Python 3.12 and is available in the C API. A Python
interface to it is expected in Python 3.13. The main limitation to it at the
moment is likely to be 3rd party extension modules, since these must be written
with multiple interpreters in mind in order to be usable, so many older
extension modules will not be usable.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>4.4 Input and Output</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.4.1 How do I delete a file? (And other file questions)</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Use <span style='font-size:9.0pt;
line-height:108%'>os.remove(filename) </span>or <span style='font-size:9.0pt;
line-height:108%'>os.unlink(filename)</span>; for documentation, see the <span
style='font-size:9.0pt;line-height:108%'>os </span>module. The two functions
are identical; <span style='font-size:9.0pt;line-height:108%'>unlink() </span>is
simply the name of the Unix system call for this function.</p>

<p class=MsoNormal style='margin-left:-.25pt'>To remove a directory, use <span
style='font-size:9.0pt;line-height:108%'>os.rmdir()</span>; use <span
style='font-size:9.0pt;line-height:108%'>os.mkdir() </span>to create one. <span
style='font-size:9.0pt;line-height:108%'>os.makedirs(path) </span>will create
any intermediate directories in <span style='font-size:9.0pt;line-height:108%'>path
</span>that dont exist. <span style='font-size:9.0pt;line-height:108%'>os.removedirs(path)
</span>will remove intermediate directories as long as theyre empty; if you
want to delete an entire directory tree and its contents, use <span
style='font-size:9.0pt;line-height:108%'>shutil.rmtree()</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:6.2pt;margin-left:-.25pt;text-align:left;line-height:112%'>To
rename a file, use <span style='font-size:9.0pt;line-height:112%'>os.rename(old_path,
new_path)</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:-.25pt;text-align:left;line-height:107%'>To
truncate a file, open it using <span style='font-size:9.0pt;line-height:107%'>f
= open(filename, &quot;rb+&quot;)</span>, and use <span style='font-size:9.0pt;
line-height:107%'>f.truncate(offset)</span>; offset defaults to the current
seek position. Theres also <span style='font-size:9.0pt;line-height:107%'>os.ftruncate(fd,
offset) </span>for files opened with <span style='font-size:9.0pt;line-height:
107%'>os.open()</span>, where <i>fd </i>is the file descriptor (a small
integer).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>shutil </span>module
also contains a number of functions to work on files including <span
style='font-size:9.0pt;line-height:108%'>copyfile()</span>, <span
style='font-size:9.0pt;line-height:108%'>copytree()</span>, and <span
style='font-size:9.0pt;line-height:108%'>rmtree()</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.4.2 How do I copy a file?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.15pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>shutil </span>module
contains a <span style='font-size:9.0pt;line-height:108%'>copyfile() </span>function.
Note that on Windows NTFS volumes, it does not copy <a
href="https://en.wikipedia.org/wiki/NTFS#Alternate_data_stream_(ADS)"><span
style='color:#377063;text-decoration:none'>alternate data streams</span></a><span
style='color:#377063'> </span>nor <a
href="https://en.wikipedia.org/wiki/Resource_fork"><span style='color:#377063;
text-decoration:none'>resource forks</span></a><span style='color:#377063'> </span>on
macOS HFS+ volumes, though both are now rarely used. It also doesnt copy file
permissions and metadata, though using <span style='font-size:9.0pt;line-height:
108%'>shutil.copy2() </span>instead will preserve most (though not all) of it.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.4.3 How do I read (or write) binary data?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>To read or write complex binary
data formats, its best to use the <span style='font-size:9.0pt;line-height:
108%'>struct </span>module. It allows you to take a string containing binary
data (usually numbers) and convert it to Python objects; and vice versa.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For example, the following code
reads two 2-byte integers and one 4-byte integer in big-endian format from a
file:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=89
src="Python%20Frequently%20Asked%20Questions_files/image176.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>The &gt; in the format string
forces big-endian data; the letter h reads one short integer (2 bytes), and
l reads one long integer (4 bytes) from the string.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:20.4pt;
margin-left:-.25pt'>For data that is more regular (e.g. a homogeneous list of
ints or floats), you can also use the <span style='font-size:9.0pt;line-height:
108%'>array </span>module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.8pt;margin-left:7.95pt;text-align:left;line-height:107%'><span
style='color:#145DEA'>® </span><b>Note</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.5pt;margin-bottom:25.3pt;
margin-left:7.95pt'><span style='position:relative;z-index:-1895820288'><span
style='left:0px;position:absolute;left:0px;top:-24246px;width:602px;height:
1px'><img width=602 height=1
src="Python%20Frequently%20Asked%20Questions_files/image177.gif"></span></span>To
read and write binary data, it is mandatory to open the file in binary mode
(here, passing <span style='font-size:9.0pt;line-height:108%'>&quot;rb&quot; </span>to
<span style='font-size:9.0pt;line-height:108%'>open()</span>). If you use <span
style='font-size:9.0pt;line-height:108%'>&quot;r&quot; </span>instead (the
default), the file will be open in text mode and <span style='font-size:9.0pt;
line-height:108%'>f.read() </span>will return <span style='font-size:9.0pt;
line-height:108%'>str </span>objects rather than <span style='font-size:9.0pt;
line-height:108%'>bytes </span>objects.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.4.4 I cant seem to use os.read() on a pipe created with
os.popen(); why?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'><span style='font-size:9.0pt;line-height:108%'>os.read() </span>is
a low-level function which takes a file descriptor, a small integer
representing the opened file. <span style='font-size:9.0pt;line-height:108%'>os.
popen() </span>creates a high-level file object, the same type returned by the
built-in <span style='font-size:9.0pt;line-height:108%'>open() </span>function.
Thus, to read <i>n </i>bytes from a pipe <i>p </i>created with <span
style='font-size:9.0pt;line-height:108%'>os.popen()</span>, you need to use <span
style='font-size:9.0pt;line-height:108%'>p.read(n)</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.4.5 How do I access the serial (RS232) port?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>For Win32, OSX, Linux, BSD,
Jython, IronPython:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:24.65pt;text-align:left;line-height:110%'><a
href="https://pypi.org/project/pyserial/"><span style='color:#377063;
text-decoration:none'>pyserial</span></a></p>

<p class=MsoNormal style='margin-left:-.25pt'>For Unix, see a Usenet post by
Mitch Chapman:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:16.0pt;margin-left:24.65pt;text-align:left;line-height:110%'><a
href="https://groups.google.com/groups?selm=34A04430.CF9@ohioee.com"><span
style='color:#377063;text-decoration:none'>https://groups.google.com/groups?selm=34A04430.CF9@ohioee.com</span></a></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.4.6 Why doesnt closing sys.stdout (stdin, stderr) really
close it?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python <i><span style='color:
#355F7C'>file objects </span></i>are a high-level layer of abstraction on
low-level C file descriptors.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For most file objects you create
in Python via the built-in <span style='font-size:9.0pt;line-height:108%'>open()
</span>function, <span style='font-size:9.0pt;line-height:108%'>f.close() </span>marks
the Python file object as being closed from Pythons point of view, and also
arranges to close the underlying C file descriptor. This also happens
automatically in <span style='font-size:9.0pt;line-height:108%'>f</span>s
destructor, when <span style='font-size:9.0pt;line-height:108%'>f </span>becomes
garbage.</p>

<p class=MsoNormal style='margin-left:-.25pt'>But stdin, stdout and stderr are
treated specially by Python, because of the special status also given to them
by C. Running <span style='font-size:9.0pt;line-height:108%'>sys.stdout.close()
</span>marks the Python-level file object as being closed, but does <i>not </i>close
the associated C file descriptor.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To close the underlying C file descriptor for one of these
three, you should first be sure thats what you really want to do (e.g., you
may confuse extension modules trying to do I/O). If it is, use <span
style='font-size:9.0pt;line-height:108%'>os.close()</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image178.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>Or you can use the numeric constants 0, 1 and 2,
respectively.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>4.5 Network/Internet Programming</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.5.1 What WWW tools are there for Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:18.95pt;
margin-left:-.25pt'>See the chapters titled internet and netdata in the Library
Reference Manual. Python has many modules that will help you build server-side
and client-side web systems.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>4.5. Network/Internet Programming</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>A             summary                of            available               frameworks           is             maintained            by           Paul        Boddie   at <a
href="https://wiki.python.org/moin/WebProgramming"><span style='color:#377063;
text-decoration:none'>https://wiki.python.org/moin/ </span></a><a
href="https://wiki.python.org/moin/WebProgramming"><span style='color:#377063;
text-decoration:none'>WebProgramming</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.5.2 What module should I use to help with generating HTML?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>You can find a collection of useful links on the <a
href="https://wiki.python.org/moin/WebProgramming"><span style='color:#377063;
text-decoration:none'>Web Programming wiki page</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.5.3 How do I send mail from a Python script?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Use the standard library module <span
style='font-size:9.0pt;line-height:108%'>smtplib</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Heres a very simple interactive mail sender that uses it.
This method will work on any host that supports an SMTP listener.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=264
src="Python%20Frequently%20Asked%20Questions_files/image179.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A Unix-only alternative uses sendmail. The location of the
sendmail program varies between systems; sometimes it is <span
style='font-size:9.0pt;line-height:108%'>/usr/lib/sendmail</span>, sometimes <span
style='font-size:9.0pt;line-height:108%'>/usr/sbin/sendmail</span>. The
sendmail manual page will help you out. Heres some sample code:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:18.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=200
src="Python%20Frequently%20Asked%20Questions_files/image180.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.5.4 How do I avoid blocking in the connect() method of a
socket?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The <span style='font-size:9.0pt;
line-height:108%'>select </span>module is commonly used to help with
asynchronous I/O on sockets.</p>

<p class=MsoNormal style='margin-left:-.25pt'>To prevent the TCP connect from
blocking, you can set the socket to non-blocking mode. Then when you do the <span
style='font-size:9.0pt;line-height:108%'>connect()</span>, you will either
connect immediately (unlikely) or get an exception that contains the error
number as <span style='font-size:9.0pt;line-height:108%'>.errno</span>. <span
style='font-size:9.0pt;line-height:108%'>errno.EINPROGRESS </span>indicates
that the connection is in progress, but hasnt finished yet. Different OSes
will return different values, so youre going to have to check whats returned
on your system.</p>

<p class=MsoNormal style='margin-left:-.25pt'>You can use the <span
style='font-size:9.0pt;line-height:108%'>connect_ex() </span>method to avoid
creating an exception. It will just return the errno value. To poll, you can
call <span style='font-size:9.0pt;line-height:108%'>connect_ex() </span>again
later  <span style='font-size:9.0pt;line-height:108%'>0 </span>or <span
style='font-size:9.0pt;line-height:108%'>errno.EISCONN </span>indicate that
youre connected  or you can pass this socket to <span style='font-size:9.0pt;
line-height:108%'>select.select() </span>to check if its writable.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.8pt;margin-left:7.95pt;text-align:left;line-height:107%'><span
style='color:#145DEA'>® </span><b>Note</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.5pt;margin-bottom:27.95pt;
margin-left:7.95pt'><span style='position:relative;z-index:-1895819264'><span
style='left:0px;position:absolute;left:0px;top:-25957px;width:602px;height:
1px'><img width=602 height=1
src="Python%20Frequently%20Asked%20Questions_files/image181.gif"></span></span>The
<span style='font-size:9.0pt;line-height:108%'>asyncio </span>module provides a
general purpose single-threaded and concurrent asynchronous library, which can
be used for writing non-blocking network code. The third-party <a
href="https://twisted.org/"><span style='color:#377063;text-decoration:none'>Twisted</span></a><span
style='color:#377063'> </span>library is a popular and feature-rich
alternative.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>4.6 Databases</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.6.1 Are there any interfaces to database packages in Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Yes.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Interfaces to disk-based hashes
such as <span style='font-size:9.0pt;line-height:108%'>DBM </span>and <span
style='font-size:9.0pt;line-height:108%'>GDBM </span>are also included with
standard Python. There is also the <span style='font-size:9.0pt;line-height:
108%'>sqlite3 </span>module, which provides a lightweight disk-based relational
database.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.6pt;
margin-left:-.25pt'>Support for most relational databases is available. See the
<a href="https://wiki.python.org/moin/DatabaseProgramming"><span
style='color:#377063;text-decoration:none'>DatabaseProgramming wiki page</span></a><span
style='color:#377063'> </span>for details.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.6.2 How do you implement persistent objects in Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>pickle </span>library
module solves this in a very general way (though you still cant store things
like open files, sockets or windows), and the <span style='font-size:9.0pt;
line-height:108%'>shelve </span>library module uses pickle and (g)dbm to create
persistent mappings containing arbitrary Python objects.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>4.7 Mathematics and Numerics</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>4.7.1 How do I generate random numbers in Python?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The standard module <span style='font-size:9.0pt;
line-height:108%'>random </span>implements a random number generator. Usage is
simple:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image182.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>This returns a random
floating-point number in the range [0, 1).</p>

<p class=MsoNormal style='margin-left:-.25pt'>There are also many other
specialized generators in this module, such as:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>randrange(a, b) </span>chooses
an integer in the range [a, b).</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>uniform(a, b) </span>chooses
a floating-point number in the range [a, b).</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>normalvariate(mean,
sdev) </span>samples the normal (Gaussian) distribution.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Some higher-level functions
operate on sequences directly, such as:</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>choice(S) </span>chooses
a random element from a given sequence.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:108%'>shuffle(L) </span>shuffles
a list in-place, i.e. permutes it randomly.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:169.3pt;
margin-left:-.25pt'>Theres also a <span style='font-size:9.0pt;line-height:
108%'>Random </span>class you can instantiate to create independent multiple
random number generators.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>4.6. Databases</span></b></p>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:107%'>&nbsp;</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection14>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 131588"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>CHAPTER</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>FIVE</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 131589"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>EXTENDING/EMBEDDING
FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>Can I create my own functions in C?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Yes, you can create built-in
modules containing functions, variables, exceptions and even new types in C.
This is explained in the document extending-index.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>Most intermediate or advanced Python books will also cover
this topic.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>Can I create my own functions in C++?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.3pt;
margin-left:-.25pt'>Yes, using the C compatibility features found in C++. Place
<span style='font-size:9.0pt;line-height:108%'>extern &quot;C&quot; { ... } </span>around
the Python include files and put <span style='font-size:9.0pt;line-height:108%'>extern
&quot;C&quot; </span>before each function that is going to be called by the
Python interpreter. Global or static C++ objects with constructors are probably
not a good idea.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>Writing C is hard; are there any
alternatives?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>There are a number of
alternatives to writing your own C extensions, depending on what youre trying
to do.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:-.25pt;text-align:left;line-height:107%'><a
href="https://cython.org/"><span style='color:#377063;text-decoration:none'>Cython</span></a><span
style='color:#377063'> </span>and its relative <a
href="https://www.csse.canterbury.ac.nz/greg.ewing/python/Pyrex/"><span
style='color:#377063;text-decoration:none'>Pyrex</span></a><span
style='color:#377063'> </span>are compilers that accept a slightly modified
form of Python and generate the corresponding C code. Cython and Pyrex make it
possible to write an extension without having to learn Pythons C API.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>If you need to interface to some C or C++ library for which
no Python extension currently exists, you can try wrapping the librarys data
types and functions with a tool such as <a href="https://www.swig.org/"><span
style='color:#377063;text-decoration:none'>SWIG</span></a>. <a
href="https://github.com/Python-SIP/sip"><span style='color:#377063;text-decoration:
none'>SIP</span></a>, <a href="https://cxx.sourceforge.net/"><span
style='color:#377063;text-decoration:none'>CXX</span></a><span
style='color:#377063'> </span><a
href="https://www.boost.org/libs/python/doc/index.html"><span style='color:
#377063;text-decoration:none'>Boost</span></a>, or <a
href="https://github.com/scipy/weave"><span style='color:#377063;text-decoration:
none'>Weave</span></a><span style='color:#377063'> </span>are also alternatives
for wrapping C++ libraries.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.4<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>How can I execute arbitrary Python
statements from C?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.85pt;
margin-left:-.25pt'>The highest-level function to do this is <span
style='font-size:9.0pt;line-height:108%'>PyRun_SimpleString() </span>which
takes a single string argument to be executed in the context of the module <span
style='font-size:9.0pt;line-height:108%'>__main__ </span>and returns <span
style='font-size:9.0pt;line-height:108%'>0 </span>for success and <span
style='font-size:9.0pt;line-height:108%'>-1 </span>when an exception occurred
(including <span style='font-size:9.0pt;line-height:108%'>SyntaxError</span>).
If you want more control, use <span style='font-size:9.0pt;line-height:108%'>PyRun_String()</span>;
see the source for <span style='font-size:9.0pt;line-height:108%'>PyRun_SimpleString()
</span>in <span style='font-size:9.0pt;line-height:108%'>Python/pythonrun.c</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.5<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>How can I evaluate an arbitrary Python
expression from C?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:-.25pt'>Call the function <span style='font-size:9.0pt;line-height:
108%'>PyRun_String() </span>from the previous question with the start symbol <span
style='font-size:9.0pt;line-height:108%'>Py_eval_input</span>; it parses an
expression, evaluates it and returns its value.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.6<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I extract C values from a Python
object?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>That depends on the objects
type. If its a tuple, <span style='font-size:9.0pt;line-height:108%'>PyTuple_Size()
</span>returns its length and <span style='font-size:9.0pt;line-height:108%'>PyTuple_GetItem()
</span>returns the item at a specified index. Lists have similar functions, <span
style='font-size:9.0pt;line-height:108%'>PyList_Size() </span>and <span
style='font-size:9.0pt;line-height:108%'>PyList_GetItem()</span>.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For bytes, <span
style='font-size:9.0pt;line-height:108%'>PyBytes_Size() </span>returns its
length and <span style='font-size:9.0pt;line-height:108%'>PyBytes_AsStringAndSize()
</span>provides a pointer to its value and its length. Note that Python bytes
objects may contain null bytes so Cs <span style='font-size:9.0pt;line-height:
108%'>strlen() </span>should not be used.</p>

<p class=MsoNormal style='margin-left:-.25pt'>To test the type of an object,
first make sure it isnt <span style='font-size:9.0pt;line-height:108%'>NULL</span>,
and then use <span style='font-size:9.0pt;line-height:108%'>PyBytes_Check()</span>,
<span style='font-size:9.0pt;line-height:108%'>PyTuple_Check()</span>, <span
style='font-size:9.0pt;line-height:108%'>PyList_Check()</span>, etc.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.0pt;
margin-left:-.25pt'>There is also a high-level API to Python objects which is
provided by the so-called abstract interface  read <span style='font-size:
9.0pt;line-height:108%'>Include/abstract.h </span>for further details. It
allows interfacing with any kind of Python sequence using calls like <span
style='font-size:9.0pt;line-height:108%'>PySequence_Length()</span>, <span
style='font-size:9.0pt;line-height:108%'>PySequence_GetItem()</span>, etc. as
well as many other useful protocols such as numbers (<span style='font-size:
9.0pt;line-height:108%'>PyNumber_Index() </span>et al.) and mappings in the
PyMapping APIs.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.7<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I use Py_BuildValue() to create a
tuple of arbitrary length?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.25pt;
margin-left:-.25pt'>You cant. Use <span style='font-size:9.0pt;line-height:
108%'>PyTuple_Pack() </span>instead.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.8<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I call an objects method from C?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>PyObject_CallMethod()
</span>function can be used to call an arbitrary method of an object. The
parameters are the object, the name of the method to call, a format string like
that used with <span style='font-size:9.0pt;line-height:108%'>Py_BuildValue()</span>,
and the argument values:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=57
src="Python%20Frequently%20Asked%20Questions_files/image183.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>This works for any object that
has methods  whether built-in or user-defined. You are responsible for
eventually <span style='font-size:9.0pt;line-height:108%'>Py_DECREF()</span>ing
the return value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>To call, e.g., a file objects seek method with arguments
10, 0 (assuming the file object pointer is f):</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=121
src="Python%20Frequently%20Asked%20Questions_files/image184.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:20.8pt;
margin-left:-.25pt'>Note that since <span style='font-size:9.0pt;line-height:
108%'>PyObject_CallObject() </span><i>always </i>wants a tuple for the argument
list, to call a function without arguments, pass () for the format, and to
call a function with one argument, surround the argument in parentheses, e.g.
(i).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.9<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I catch the output from
PyErr_Print() (or anything that prints to stdout/stderr)?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>In Python code, define an object
that supports the <span style='font-size:9.0pt;line-height:108%'>write() </span>method.
Assign this object to <span style='font-size:9.0pt;line-height:108%'>sys.stdout
</span>and <span style='font-size:9.0pt;line-height:108%'>sys. stderr</span>.
Call print_error, or just allow the standard traceback mechanism to work. Then,
the output will go wherever your <span style='font-size:9.0pt;line-height:108%'>write()
</span>method sends it.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The easiest way to do this is to use the <span
style='font-size:9.0pt;line-height:108%'>io.StringIO </span>class:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:22.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=612 height=98
src="Python%20Frequently%20Asked%20Questions_files/image185.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Chapter 5. Extending/Embedding FAQ</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Python Frequently Asked Questions,
Release 3.13.2</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:27.75pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 129691"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continued from previous page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=40
src="Python%20Frequently%20Asked%20Questions_files/image186.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>A custom object to do the same would look like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:21.75pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=232
src="Python%20Frequently%20Asked%20Questions_files/image187.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>5.10 How do I access a module written in Python from C?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You can get a pointer to the module object as follows:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.05pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image188.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>If the module hasnt been
imported yet (i.e. it is not yet present in <span style='font-size:9.0pt;
line-height:108%'>sys.modules</span>), this initializes the module; otherwise
it simply returns the value of <span style='font-size:9.0pt;line-height:108%'>sys.modules[&quot;&lt;modulename&gt;&quot;]</span>.
Note that it doesnt enter the module into any namespace  it only ensures it
has been initialized and is stored in <span style='font-size:9.0pt;line-height:
108%'>sys.modules</span>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You can then access the modules attributes (i.e. any name
defined in the module) as follows:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.25pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image189.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.45pt;
margin-left:-.25pt'>Calling <span style='font-size:9.0pt;line-height:108%'>PyObject_SetAttrString()
</span>to assign to variables in the module also works.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>5.11 How do I interface to C++ objects from Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Depending on your requirements,
there are many approaches. To do this manually, begin by reading the Extending
and Embedding document. Realize that for the Python run-time system, there
isnt a whole lot of difference between C and C++  so the strategy of building
a new Python type around a C structure (pointer) type will also work for C++
objects.</p>

<p class=MsoNormal align=left style='margin-bottom:21.2pt;text-align:left;
line-height:110%'>For C++ libraries, see <i><span style='color:#355F7C'>Writing
C is hard; are there any alternatives?</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>5.12 I added a module using the Setup file and the make fails;
why?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.0pt;
margin-left:-.25pt'>Setup must end in a newline, if there is no newline there,
the build process fails. (Fixing this requires some ugly shell script hackery,
and this bug is so minor that it doesnt seem worth the effort.)</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>5.13 How do I debug an extension?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>When using GDB with dynamically
loaded extensions, you cant set a breakpoint in your extension until your
extension is loaded.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:3.25pt;
margin-left:-.25pt'>In your <span style='font-size:9.0pt;line-height:108%'>.gdbinit
</span>file (or interactively), add the command:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><img
border=0 width=603 height=1 id="Group 129696"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>5.10. How do I access a module written
in Python from C?</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image190.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Then, when you run GDB:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:22.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=105
src="Python%20Frequently%20Asked%20Questions_files/image191.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:33.95pt;text-align:left;text-indent:-34.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.14 I want to compile a Python module on
my Linux system, but some files are missing. Why?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Most packaged versions of Python
omit some files required for compiling Python extensions.</p>

<p class=MsoNormal style='margin-left:-.25pt'>For Red Hat, install the
python3-devel RPM to get the necessary files.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:21.55pt;margin-left:-.25pt;text-align:left;line-height:112%'>For
Debian, run <span style='font-size:9.0pt;line-height:112%'>apt-get install
python3-dev</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>5.15 How do I tell incomplete input from invalid input?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Sometimes you want to emulate the
Python interactive interpreters behavior, where it gives you a continuation
prompt when the input is incomplete (e.g. you typed the start of an if
statement or you didnt close your parentheses or triple string quotes), but it
gives you a syntax error message immediately when the input is invalid.</p>

<p class=MsoNormal style='margin-left:-.25pt'>In Python you can use the <span
style='font-size:9.0pt;line-height:108%'>codeop </span>module, which
approximates the parsers behavior sufficiently. IDLE uses this, for example.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.8pt;
margin-left:-.25pt'>The easiest way to do it in C is to call <span
style='font-size:9.0pt;line-height:108%'>PyRun_InteractiveLoop() </span>(perhaps
in a separate thread) and let the Python interpreter handle the input for you.
You can also set the <span style='font-size:9.0pt;line-height:108%'>PyOS_ReadlineFunctionPointer()
</span>to point at your custom input function. See <span style='font-size:9.0pt;
line-height:108%'>Modules/readline.c </span>and <span style='font-size:9.0pt;
line-height:108%'>Parser/myreadline.c </span>for more hints.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.15pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>5.16 How do I find undefined g++ symbols __builtin_new or</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:35.2pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>__pure_virtual?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.45pt;
margin-left:-.25pt'>To dynamically load g++ extension modules, you must
recompile Python, relink it using g++ (change LINKCC in the Python Modules
Makefile), and link your extension module using g++ (e.g., <span
style='font-size:9.0pt;line-height:108%'>g++ -shared -o mymodule.so mymodule.o</span>).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:33.95pt;text-align:left;text-indent:-34.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>5.17 Can I create an object class with some
methods implemented in C and others in Python (e.g. through inheritance)?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Yes, you can inherit from
built-in classes such as <span style='font-size:9.0pt;line-height:108%'>int</span>,
<span style='font-size:9.0pt;line-height:108%'>list</span>, <span
style='font-size:9.0pt;line-height:108%'>dict</span>, etc.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:119.6pt;
margin-left:-.25pt'>The Boost Python Library (BPL, <a
href="https://www.boost.org/libs/python/doc/index.html"><span style='color:
#377063;text-decoration:none'>https://www.boost.org/libs/python/doc/index.html</span></a>)
provides a way of doing this from C++ (i.e. you can inherit from an extension
class written in C++ using the BPL).</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Chapter 5. Extending/Embedding FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.45pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 131270"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>CHAPTER</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>SIX</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 131271"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>PYTHON
ON WINDOWS FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>6.1 How do I run a Python program under Windows?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>This is not necessarily a
straightforward question. If you are already familiar with running programs
from the Windows command line then everything will seem obvious; otherwise, you
might need a little more guidance.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Unless you use some sort of integrated development
environment, you will end up <i>typing </i>Windows commands into what is
referred to as a Command prompt window. Usually you can create such a window
from your search bar by searching for <span style='font-size:9.0pt;line-height:
108%'>cmd</span>. You should be able to recognize when you have started such a
window because you will see a Windows command prompt, which usually looks
like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image192.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>The letter may be different, and there might be other
things after it, so you might just as easily see something like:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image193.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>depending on how your computer
has been set up and what else you have recently done with it. Once you have
started such a window, you are well on the way to running Python programs.</p>

<p class=MsoNormal style='margin-left:-.25pt'>You need to realize that your
Python scripts have to be processed by another program called the Python <i>interpreter</i>.
The interpreter reads your script, compiles it into bytecodes, and then
executes the bytecodes to run your program. So, how do you arrange for the
interpreter to handle your Python?</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>First, you need to make sure that your command window
recognises the word py as an instruction to start the interpreter. If you
have opened a command window, you should try entering the command <span
style='font-size:9.0pt;line-height:108%'>py </span>and hitting return:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image194.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.2pt;
margin-left:-.25pt'>You should then see something like:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.35pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%;color:#333333'>Python 3.6.4
(v3.6.4:d48eceb, Dec 19 2017, 06:04:45) [MSC v.1900 32 bit (Intel)]</span><span
style='font-size:9.0pt;line-height:112%;color:red'>&#9251;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:2.85pt;margin-left:-.25pt;text-align:left;line-height:112%'><i><span
style='font-size:5.0pt;line-height:112%;font-family:"Cambria",serif;color:red'>,</span></i><sub><span
style='font-size:7.5pt;line-height:112%;font-family:"Cambria",serif;color:red'>&#8594;</span></sub><span
style='font-size:9.0pt;line-height:112%;color:#333333'>on win32</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:58.55pt;
margin-bottom:13.15pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895818240'><span style='left:0px;position:
absolute;left:-5px;top:-31439px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image195.gif"></span></span><span
style='font-size:9.0pt;line-height:112%;color:#333333'>Type &quot;help&quot;,
&quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more
information. </span><b><span style='font-size:9.0pt;line-height:112%;
color:#C75C0A'>&gt;&gt;&gt;</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>You have started the interpreter in interactive mode.
That means you can enter Python statements or expressions interactively and
have them executed or evaluated while you wait. This is one of Pythons
strongest features. Check it by entering a few expressions of your choice and
seeing the results:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=73
src="Python%20Frequently%20Asked%20Questions_files/image196.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:10.15pt;
margin-left:-.25pt'>Many people use the interactive mode as a convenient yet
highly programmable calculator. When you want to end your interactive Python
session, call the <span style='font-size:9.0pt;line-height:108%'>exit() </span>function
or hold the <span style='font-size:9.0pt;line-height:108%'>Ctrl </span>key down
while you enter a <span style='font-size:9.0pt;line-height:108%'>Z</span>, then
hit the <span style='font-size:9.0pt;line-height:108%'>Enter</span> key to
get back to your Windows command prompt.</p>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:107%'><span style='font-size:11.0pt;line-height:107%;
font-family:"Calibri",sans-serif'><img border=0 width=603 height=1
id="Group 131277"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>You may also find that you have a
Start-menu entry such as <i>Start &#8227; Programs &#8227; Python 3.x &#8227;
Python (command line) </i>that results in you seeing the <span
style='font-size:9.0pt;line-height:108%'>&gt;&gt;&gt; </span>prompt in a new
window. If so, the window will disappear after you call the <span
style='font-size:9.0pt;line-height:108%'>exit() </span>function or enter the <span
style='font-size:9.0pt;line-height:108%'>Ctrl-Z </span>character; Windows is
running a single python command in the window, and closes it when you
terminate the interpreter.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Now that we know the <span style='font-size:9.0pt;
line-height:108%'>py </span>command is recognized, you can give your Python
script to it. Youll have to give either an absolute or a relative path to the
Python script. Lets say your Python script is located in your desktop and is
named <span style='font-size:9.0pt;line-height:108%'>hello.py</span>, and your
command prompt is nicely opened in your home directory so youre seeing
something similar to:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.0pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=25
src="Python%20Frequently%20Asked%20Questions_files/image197.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>So now youll ask the <span style='font-size:9.0pt;
line-height:108%'>py </span>command to give your script to Python by typing <span
style='font-size:9.0pt;line-height:108%'>py </span>followed by your script
path:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:22.15pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=611 height=41
src="Python%20Frequently%20Asked%20Questions_files/image198.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>6.2 How do I make Python scripts executable?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>On Windows, the standard Python installer already
associates the .py extension with a file type (Python.File) and gives that file
type an open command that runs the interpreter (<span style='font-size:9.0pt;
line-height:108%'>D:\Program Files\Python\python.exe &quot;%1&quot; %*</span>).
This is enough to make scripts executable from the command prompt as foo.py.
If youd rather be able to execute the script by simple typing foo with no
extension you need to add .py to the PATHEXT environment variable.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>6.3 Why does Python sometimes take so long to start?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Usually Python starts very
quickly on Windows, but occasionally there are bug reports that Python suddenly
begins to take a long time to start up. This is made even more puzzling because
Python will work fine on other Windows systems which appear to be configured
identically.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:-.25pt'>The problem may be caused by a misconfiguration of virus
checking software on the problem machine. Some virus scanners have been known
to introduce startup overhead of two orders of magnitude when the scanner is
configured to monitor all reads from the filesystem. Try checking the
configuration of virus scanning software on your systems to ensure that they
are indeed configured identically. McAfee, when configured to scan all file
system read activity, is a particular offender.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>6.4 How do I make an executable from a Python script?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.95pt;
margin-left:-.25pt'>See <i><span style='color:#355F7C'>How can I create a
stand-alone binary from a Python script? </span></i>for a list of tools that
can be used to make executables.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>6.5 Is a </span></b><b><span style='font-size:13.0pt;line-height:
107%;color:#20435C'>*.pyd </span></b><b><span style='font-size:14.5pt;
line-height:107%;font-family:"Calibri",sans-serif;color:#20435C'>file the same
as a DLL?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Yes, .pyd files are dlls, but
there are a few differences. If you have a DLL named <span style='font-size:
9.0pt;line-height:108%'>foo.pyd</span>, then it must have a function <span
style='font-size:9.0pt;line-height:108%'>PyInit_foo()</span>. You can then
write Python import foo, and Python will search for foo.pyd (as well as
foo.py, foo.pyc) and if it finds it, will attempt to call <span
style='font-size:9.0pt;line-height:108%'>PyInit_foo() </span>to initialize it.
You do not link your .exe with foo.lib, as that would cause Windows to require
the DLL to be present.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:87.2pt;
margin-left:-.25pt'>Note that the search path for foo.pyd is PYTHONPATH, not
the same as the path that Windows uses to search for foo.dll. Also, foo.pyd
need not be present to run your program, whereas if you linked your program
with a dll, the dll is required. Of course, foo.pyd is required if you want to
say <span style='font-size:9.0pt;line-height:108%'>import foo</span>. In a DLL,
linkage is declared in the source code with <span style='font-size:9.0pt;
line-height:108%'>__declspec(dllexport)</span>. In a .pyd, linkage is defined
in a list of available functions.</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Chapter 6. Python on Windows FAQ</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Python Frequently Asked Questions,
Release 3.13.2</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:25.8pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 130976"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>6.6 How can I embed Python into a Windows application?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Embedding the Python interpreter
in a Windows app can be summarized as follows:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.15pt;
margin-left:24.9pt;text-indent:-12.45pt'><span style='line-height:108%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>Do <b>not </b>build
Python into your .exe file directly. On Windows, Python must be a DLL to handle
importing modules that are themselves DLLs. (This is the first key
undocumented fact.) Instead, link to <span style='font-size:9.0pt;line-height:
108%'>python<i>NN</i>.dll</span>; it is typically installed in <span
style='font-size:9.0pt;line-height:108%'>C:\Windows\System</span>. <i>NN </i>is
the Python version, a number such as 33 for Python</p>

<p class=MsoNormal style='margin-left:25.4pt'>3.3.</p>

<p class=MsoNormal style='margin-left:25.4pt'>You can link to Python in two
different ways. Load-time linking means linking against <span style='font-size:
9.0pt;line-height:108%'>python<i>NN</i>.lib</span>, while run-time linking
means linking against <span style='font-size:9.0pt;line-height:108%'>python<i>NN</i>.dll</span>.
(General note: <span style='font-size:9.0pt;line-height:108%'>python<i>NN</i>.lib
</span>is the so-called import lib corresponding to <span style='font-size:
9.0pt;line-height:108%'>python<i>NN</i>.dll</span>. It merely defines symbols
for the linker.)</p>

<p class=MsoNormal style='margin-left:25.4pt'>Run-time linking greatly
simplifies link options; everything happens at run time. Your code must load <span
style='font-size:9.0pt;line-height:108%'>python<i>NN</i>.dll </span>using the
Windows <span style='font-size:9.0pt;line-height:108%'>LoadLibraryEx() </span>routine.
The code must also use access routines and data in <span style='font-size:9.0pt;
line-height:108%'>python<i>NN</i>.dll </span>(that is, Pythons C APIs) using
pointers obtained by the Windows <span style='font-size:9.0pt;line-height:108%'>GetProcAddress()
</span>routine. Macros can make using these pointers transparent to any C code
that calls routines in Pythons C API.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>If you use SWIG, it is easy to create a Python extension module
that will make the apps data and methods available to Python. SWIG will handle
just about all the grungy details for you. The result is C code that you link <i>into
</i>your .exe file (!) You do <b>not </b>have to create a DLL file, and this
also simplifies linking.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>SWIG will create an init function (a C function) whose name
depends on the name of the extension module. For example, if the name of the
module is leo, the init function will be called initleo(). If you use SWIG
shadow classes, as you should, the init function will be called initleoc().
This initializes a mostly hidden helper class used by the shadow class.</p>

<p class=MsoNormal style='margin-left:25.4pt'>The reason you can link the C
code in step 2 into your .exe file is that calling the initialization function
is equivalent to importing the module into Python! (This is the second key
undocumented fact.)</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:24.9pt;text-indent:-12.45pt'><span style='line-height:108%'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>In short, you
can use the following code to initialize the Python interpreter with your
extension module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=89
src="Python%20Frequently%20Asked%20Questions_files/image199.gif"></span></p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-12.45pt'><span
style='line-height:108%'>5.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span>There are two problems with Pythons C API which will become
apparent if you use a compiler other than MSVC, the compiler used to build
pythonNN.dll.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Problem 1: The so-called Very
High Level functions that take <span style='font-size:9.0pt;line-height:108%'>FILE
* </span>arguments will not work in a multicompiler environment because each
compilers notion of a <span style='font-size:9.0pt;line-height:108%'>struct
FILE </span>will be different. From an implementation standpoint these are very
low level functions.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>Problem 2: SWIG generates the following code when
generating wrappers to void functions:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=57
src="Python%20Frequently%20Asked%20Questions_files/image200.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>Alas, Py_None is a macro that expands to a reference to a
complex data structure called _Py_NoneStruct inside pythonNN.dll. Again, this
code will fail in a mult-compiler environment. Replace such code by:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:10.05pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=25
src="Python%20Frequently%20Asked%20Questions_files/image201.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>It may be possible to use SWIGs <span
style='font-size:9.0pt;line-height:108%'>%typemap </span>command to make the
change automatically, though I have not been able to get this to work (Im a
complete SWIG newbie).</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:14.15pt;
margin-left:24.9pt;text-indent:-12.45pt'><span style='line-height:108%'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>Using a Python
shell script to put up a Python interpreter window from inside your Windows app
is not a good idea; the resulting window will be independent of your apps
windowing system. Rather, you (or the wxPythonWindow class) should create a
native interpreter window. It is easy to connect that window to the</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><img
border=0 width=603 height=1 id="Group 130980"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:75.15pt;text-align:left;text-indent:-26.7pt;
line-height:103%'><b><span style='line-height:103%;font-family:"Calibri",sans-serif'>6.6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='font-family:"Calibri",sans-serif'>How can I embed Python into a Windows
application?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.4pt;
margin-left:25.4pt'>Python interpreter. You can redirect Pythons i/o to _any_
object that supports read and write, so all you need is a Python object
(defined in your extension module) that contains read() and write() methods.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:75.15pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='line-height:107%;font-family:"Calibri",sans-serif'>6.7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>How do I keep editors from inserting tabs into my Python source?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>The FAQ does not recommend using
tabs, and the Python style guide, <a href="https://peps.python.org/pep-0008/"><b><span
style='color:#377063;text-decoration:none'>PEP</span></b></a><b><span
style='color:#377063'> </span></b><a href="https://peps.python.org/pep-0008/"><b><span
style='color:#377063;text-decoration:none'>8</span></b></a>, recommends 4
spaces for distributed Python code; this is also the Emacs python-mode default.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Under any editor, mixing tabs and
spaces is a bad idea. MSVC is no different in this respect, and is easily
configured to use spaces: Take <i>Tools &#8227; Options &#8227; Tabs</i>, and
for file type Default set Tab size and Indent size to 4, and select the
Insert spaces radio button.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.75pt;
margin-left:-.25pt'>Python raises <span style='font-size:9.0pt;line-height:
108%'>IndentationError </span>or <span style='font-size:9.0pt;line-height:108%'>TabError
</span>if mixed tabs and spaces are causing problems in leading whitespace. You
may also run the <span style='font-size:9.0pt;line-height:108%'>tabnanny </span>module
to check a directory tree in batch mode.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:75.15pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='line-height:107%;font-family:"Calibri",sans-serif'>6.8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>How do I check for a keypress without blocking?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.75pt;
margin-left:-.25pt'>Use the <span style='font-size:9.0pt;line-height:108%'>msvcrt
</span>module. This is a standard Windows-specific extension module. It defines
a function <span style='font-size:9.0pt;line-height:108%'>kbhit() </span>which
checks whether a keyboard hit is present, and <span style='font-size:9.0pt;
line-height:108%'>getch() </span>which gets one character without echoing it.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:75.15pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='line-height:107%;font-family:"Calibri",sans-serif'>6.9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span></b><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>How do I solve the missing api-ms-win-crt-runtime-l1-1-0.dll
error?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:366.95pt;
margin-left:-.25pt'>This can occur on Python 3.5 and later when using Windows
8.1 or earlier without all updates having been installed. First ensure your
operating system is supported and is up to date, and if that does not resolve
the issue, visit the <a href="https://support.microsoft.com/en-us/help/3118401/"><span
style='color:#377063;text-decoration:none'>Microsoft support page</span></a><span
style='color:#377063'> </span>for guidance on manually installing the C Runtime
update.</p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Chapter 6. Python on Windows FAQ</span></b></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection15>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>CHAPTER</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:35.5pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>SEVEN</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>GRAPHIC
USER INTERFACE FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:10.35pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>7.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>General GUI Questions</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>7.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>What GUI toolkits exist for Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Standard builds of Python include
an object-oriented interface to the Tcl/Tk widget set, called tkinter. This is
probably the easiest to install (since it comes included with most <a
href="https://www.python.org/downloads/"><span style='color:#377063;text-decoration:
none'>binary distributions</span></a><span style='color:#377063'> </span>of
Python) and use. For more info about Tk, including pointers to the source, see
the <a href="https://www.tcl.tk/"><span style='color:#377063;text-decoration:
none'>Tcl/Tk home page</span></a>. Tcl/Tk is fully portable to the macOS,
Windows, and Unix platforms.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.75pt;
margin-left:-.25pt'>Depending on what platform(s) you are aiming at, there are
also several alternatives. A <a
href="https://wiki.python.org/moin/GuiProgramming#Cross-Platform_Frameworks"><span
style='color:#377063;text-decoration:none'>list of cross-platform</span></a><span
style='color:#377063'> </span>and <a
href="https://wiki.python.org/moin/GuiProgramming#Platform-specific_Frameworks"><span
style='color:#377063;text-decoration:none'>platform-specific</span></a><span
style='color:#377063'> </span>GUI frameworks can be found on the python wiki.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.5pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>7.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>Tkinter questions</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>7.3.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>How do I freeze Tkinter applications?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Freeze is a tool to create
stand-alone applications. When freezing Tkinter applications, the applications
will not be truly stand-alone, as the application will still need the Tcl and
Tk libraries.</p>

<p class=MsoNormal style='margin-left:-.25pt'>One solution is to ship the
application with the Tcl and Tk libraries, and point to them at run-time using
the <span style='font-size:9.0pt;line-height:108%'>TCL_LIBRARY </span>and <span
style='font-size:9.0pt;line-height:108%'>TK_LIBRARY </span>environment
variables.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>Various third-party freeze libraries such as py2exe and
cx_Freeze have handling for Tkinter applications built-in.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>7.3.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>Can I have Tk events handled while waiting
for I/O?</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.2pt;
margin-left:-.25pt'>On platforms other than Windows, yes, and you dont even
need threads! But youll have to restructure your I/O code a bit. Tk has the
equivalent of Xts <span style='font-size:9.0pt;line-height:108%'>XtAddInput() </span>call,
which allows you to register a callback function which will be called from the
Tk mainloop when I/O is possible on a file descriptor. See
tkinter-file-handlers.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:67.9pt;text-align:left;text-indent:-31.9pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>7.3.3<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>I cant get key bindings to work in
Tkinter: why?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>An often-heard complaint is that
event handlers bound to events with the <span style='font-size:9.0pt;
line-height:108%'>bind() </span>method dont get handled even when the
appropriate key is pressed.</p>

<p class=MsoNormal style='margin-left:-.25pt'>The most common cause is that the
widget to which the binding applies doesnt have keyboard focus. Check out
the Tk documentation for the focus command. Usually a widget is given the
keyboard focus by clicking in it (but not for labels; see the takefocus
option).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:267.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>Chapter 7. Graphic User Interface FAQ
CHAPTER</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:35.5pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>EIGHT</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>WHY
IS PYTHON INSTALLED ON MY COMPUTER? FAQ</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>8.1<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>What is Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python is a programming language.
Its used for many different applications. Its used in some high schools and
colleges as an introductory programming language because Python is easy to
learn, but its also used by professional software developers at places such as
Google, NASA, and Lucasfilm Ltd.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.75pt;
margin-left:-.25pt'>If you wish to learn more about Python, start with the <a
href="https://wiki.python.org/moin/BeginnersGuide"><span style='color:#377063;
text-decoration:none'>Beginners Guide to Python</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:62.7pt;text-align:left;text-indent:-26.7pt;
line-height:107%'><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>8.2<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span></b><b><span style='font-size:14.5pt;line-height:107%;font-family:
"Calibri",sans-serif;color:#20435C'>Why is Python installed on my machine?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>If you find Python installed on
your system but dont remember installing it, there are several possible ways
it could have gotten there.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Perhaps another user on the computer wanted to learn programming
and installed it; youll have to figure out whos been using the machine and
might have installed it.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>A third-party application installed on the machine might have
been written in Python and included a Python installation. There are many such
applications, from GUI programs to network servers and administrative scripts.</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt;line-height:
107%'><span style='line-height:107%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Some Windows machines also have Python installed. At this writing
were aware of computers from HewlettPackard and Compaq that include Python.
Apparently some of HP/Compaqs administrative tools are written in Python.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.35pt;
margin-left:24.9pt;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Many
Unix-compatible operating systems, such as macOS and some Linux distributions,
have Python installed by default; its included in the base installation.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>8.3 Can I delete Python?</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>That depends on where Python came
from.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If someone installed it
deliberately, you can remove it without hurting anything. On Windows, use the
Add/Remove Programs icon in the Control Panel.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If Python was installed by a
third-party application, you can also remove it, but that application will no
longer work. You should use that applications uninstaller rather than removing
Python directly.</p>

<p class=MsoNormal style='margin-left:-.25pt'>If Python came with your
operating system, removing it is not recommended. If you remove it, whatever
tools were written in Python will no longer run, and some of them might be
important to you. Reinstalling the whole system would then be required to fix
things again.</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection16>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><img
border=0 width=603 height=1 id="Group 130446"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:166.45pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>Chapter 8. Why is Python Installed on
my Computer? FAQ APPENDIX</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:35.5pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>A</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:38.5pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>GLOSSARY</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.8pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%'>&gt;&gt;&gt;</span></b>&nbsp;</p>

<p class=MsoNormal style='margin-left:25.4pt'>The default Python prompt of the <i><span
style='color:#355F7C'>interactive </span></i>shell. Often seen for code
examples which can be executed interactively in the interpreter.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.8pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:9.0pt;line-height:107%'>...</span></b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Can refer to:</p>

<p class=MsoNormal style='margin-left:.65in;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The default Python prompt of the <i><span style='color:#355F7C'>interactive
</span></i>shell when entering the code for an indented code block, when within
a pair of matching left and right delimiters (parentheses, square brackets,
curly braces or triple quotes), or after specifying a decorator.</p>

<p class=MsoNormal style='margin-left:.65in;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The <span style='font-size:9.0pt;line-height:108%'>Ellipsis </span>built-in
constant.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>abstract
base class</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Abstract base classes complement <i><span
style='color:#355F7C'>duck-typing </span></i>by providing a way to define
interfaces when other techniques like <span style='font-size:9.0pt;line-height:
108%'>hasattr() </span>would be clumsy or subtly wrong (for example with magic
methods). ABCs introduce virtual subclasses, which are classes that dont
inherit from a class but are still recognized by <span style='font-size:9.0pt;
line-height:108%'>isinstance() </span>and <span style='font-size:9.0pt;
line-height:108%'>issubclass()</span>; see the <span style='font-size:9.0pt;
line-height:108%'>abc </span>module documentation. Python comes with many
built-in ABCs for data structures (in the <span style='font-size:9.0pt;
line-height:108%'>collections.abc </span>module), numbers (in the <span
style='font-size:9.0pt;line-height:108%'>numbers </span>module), streams (in
the <span style='font-size:9.0pt;line-height:108%'>io </span>module), import
finders and loaders (in the <span style='font-size:9.0pt;line-height:108%'>importlib.abc
</span>module). You can create your own ABCs with the <span style='font-size:
9.0pt;line-height:108%'>abc </span>module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>annotation</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A label associated with a
variable, a class attribute or a function parameter or return value, used by
convention as a <i><span style='color:#355F7C'>type hint</span></i>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Annotations of local variables
cannot be accessed at runtime, but annotations of global variables, class
attributes, and functions are stored in the <span style='font-size:9.0pt;
line-height:108%'>__annotations__ </span>special attribute of modules, classes,
and functions, respectively.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See <i><span style='color:#355F7C'>variable
annotation</span></i>, <i><span style='color:#355F7C'>function annotation</span></i>,
<a href="https://peps.python.org/pep-0484/"><b><span style='color:#377063;
text-decoration:none'>PEP 484</span></b></a><b><span style='color:#377063'> </span></b>and
<a href="https://peps.python.org/pep-0526/"><b><span style='color:#377063;
text-decoration:none'>PEP 526</span></b></a>, which describe this
functionality. Also see annotations-howto for best practices on working with
annotations.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>argument</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A value passed to a <i><span
style='color:#355F7C'>function </span></i>(or <i><span style='color:#355F7C'>method</span></i>)
when calling the function. There are two kinds of argument:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.25pt;
margin-left:.65in;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><i>keyword
argument</i>: an argument preceded by an identifier (e.g. <span
style='font-size:9.0pt;line-height:108%'>name=</span>) in a function call or
passed as a value in a dictionary preceded by <span style='font-size:9.0pt;
line-height:108%'>**</span>. For example, <span style='font-size:9.0pt;
line-height:108%'>3 </span>and <span style='font-size:9.0pt;line-height:108%'>5
</span>are both keyword arguments in the following calls to <span
style='font-size:9.0pt;line-height:108%'>complex()</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:9.95pt;margin-left:43.45pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=549 height=41
src="Python%20Frequently%20Asked%20Questions_files/image202.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
margin-left:.65in;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><i>positional
argument</i>: an argument that is not a keyword argument. Positional arguments
can appear at the beginning of an argument list and/or be passed as elements of
an <i><span style='color:#355F7C'>iterable </span></i>preceded by <span
style='font-size:9.0pt;line-height:108%'>*</span>. For example, <span
style='font-size:9.0pt;line-height:108%'>3 </span>and <span style='font-size:
9.0pt;line-height:108%'>5 </span>are both positional arguments in the following
calls:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.35pt;
margin-bottom:0in;margin-left:43.45pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=549 height=41
src="Python%20Frequently%20Asked%20Questions_files/image203.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>Arguments are assigned to the
named local variables in a function body. See the calls section for the rules
governing this assignment. Syntactically, any expression can be used to
represent an argument; the evaluated value is assigned to the local variable.</p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See also the <i><span style='color:#355F7C'>parameter </span></i>glossary
entry, the FAQ question on <i><span style='color:#355F7C'>the difference
between arguments and parameters</span></i>, and <a
href="https://peps.python.org/pep-0362/"><b><span style='color:#377063;
text-decoration:none'>PEP 362</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>asynchronous
context manager</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object which controls the
environment seen in an <span style='font-size:9.0pt;line-height:108%'>async
with </span>statement by defining <span style='font-size:9.0pt;line-height:
108%'>__aenter__() </span>and <span style='font-size:9.0pt;line-height:108%'>__aexit__()
</span>methods. Introduced by <a href="https://peps.python.org/pep-0492/"><b><span
style='color:#377063;text-decoration:none'>PEP 492</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>asynchronous
generator</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A function which returns an <i><span
style='color:#355F7C'>asynchronous generator iterator</span></i>. It looks like
a coroutine function defined with <span style='font-size:9.0pt;line-height:
108%'>async def </span>except that it contains <span style='font-size:9.0pt;
line-height:108%'>yield </span>expressions for producing a series of values
usable in an <span style='font-size:9.0pt;line-height:108%'>async for </span>loop.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Usually refers to an asynchronous
generator function, but may refer to an <i>asynchronous generator iterator </i>in
some contexts. In cases where the intended meaning isnt clear, using the full
terms avoids ambiguity.</p>

<p class=MsoNormal style='margin-left:25.4pt'>An asynchronous generator
function may contain <span style='font-size:9.0pt;line-height:108%'>await </span>expressions
as well as <span style='font-size:9.0pt;line-height:108%'>async for</span>, and
<span style='font-size:9.0pt;line-height:108%'>async with </span>statements.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>asynchronous
generator iterator</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object created by a <i><span
style='color:#355F7C'>asynchronous generator </span></i>function.</p>

<p class=MsoNormal style='margin-left:25.4pt'>This is an <i><span
style='color:#355F7C'>asynchronous iterator </span></i>which when called using
the <span style='font-size:9.0pt;line-height:108%'>__anext__() </span>method
returns an awaitable object which will execute the body of the asynchronous
generator function until the next <span style='font-size:9.0pt;line-height:
108%'>yield </span>expression.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Each <span style='font-size:9.0pt;
line-height:108%'>yield </span>temporarily suspends processing, remembering the
execution state (including local variables and pending try-statements). When
the <i>asynchronous generator iterator </i>effectively resumes with another
awaitable returned by <span style='font-size:9.0pt;line-height:108%'>__anext__()</span>,
it picks up where it left off. See <a href="https://peps.python.org/pep-0492/"><b><span
style='color:#377063;text-decoration:none'>PEP 492</span></b></a><b><span
style='color:#377063'> </span></b>and <a
href="https://peps.python.org/pep-0525/"><b><span style='color:#377063;
text-decoration:none'>PEP 525</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>asynchronous
iterable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object, that can be used in an
<span style='font-size:9.0pt;line-height:108%'>async for </span>statement. Must
return an <i><span style='color:#355F7C'>asynchronous iterator </span></i>from
its <span style='font-size:9.0pt;line-height:108%'>__aiter__() </span>method.
Introduced by <a href="https://peps.python.org/pep-0492/"><b><span
style='color:#377063;text-decoration:none'>PEP 492</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>asynchronous
iterator</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object that implements the <span
style='font-size:9.0pt;line-height:108%'>__aiter__() </span>and <span
style='font-size:9.0pt;line-height:108%'>__anext__() </span>methods. <span
style='font-size:9.0pt;line-height:108%'>__anext__() </span>must return an <i><span
style='color:#355F7C'>awaitable </span></i>object. <span style='font-size:9.0pt;
line-height:108%'>async for </span>resolves the awaitables returned by an
asynchronous iterators <span style='font-size:9.0pt;line-height:108%'>__anext__()
</span>method until it raises a <span style='font-size:9.0pt;line-height:108%'>StopAsyncIteration
</span>exception. Introduced by <a href="https://peps.python.org/pep-0492/"><b><span
style='color:#377063;text-decoration:none'>PEP 492</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>attribute</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A value associated with an object
which is usually referenced by name using dotted expressions. For example, if
an object <i>o </i>has an attribute <i>a </i>it would be referenced as <i>o.a</i>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>It is possible to give an object
an attribute whose name is not an identifier as defined by identifiers, for
example using <span style='font-size:9.0pt;line-height:108%'>setattr()</span>,
if the object allows it. Such an attribute will not be accessible using a
dotted expression, and would instead need to be retrieved with <span
style='font-size:9.0pt;line-height:108%'>getattr()</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>awaitable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object that can be used in an <span
style='font-size:9.0pt;line-height:108%'>await </span>expression. Can be a <i><span
style='color:#355F7C'>coroutine </span></i>or an object with an <span
style='font-size:9.0pt;line-height:108%'>__await__() </span>method. See also <a
href="https://peps.python.org/pep-0492/"><b><span style='color:#377063;
text-decoration:none'>PEP 492</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>BDFL</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Benevolent Dictator For Life,
a.k.a. <a href="https://gvanrossum.github.io/"><span style='color:#377063;
text-decoration:none'>Guido van Rossum</span></a>, Pythons creator.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>binary
file</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A <i><span style='color:#355F7C'>file
object </span></i>able to read and write <i><span style='color:#355F7C'>bytes-like
objects</span></i>. Examples of binary files are files opened in binary mode (<span
style='font-size:9.0pt;line-height:108%'>'rb'</span>, <span style='font-size:
9.0pt;line-height:108%'>'wb' </span>or <span style='font-size:9.0pt;line-height:
108%'>'rb+'</span>), <span style='font-size:9.0pt;line-height:108%'>sys.stdin.buffer</span>,
<span style='font-size:9.0pt;line-height:108%'>sys.stdout.buffer</span>, and
instances of <span style='font-size:9.0pt;line-height:108%'>io.BytesIO </span>and
<span style='font-size:9.0pt;line-height:108%'>gzip.GzipFile</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See also <i><span
style='color:#355F7C'>text file </span></i>for a file object able to read and
write <span style='font-size:9.0pt;line-height:108%'>str </span>objects.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>borrowed
reference</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:25.4pt;text-align:left;line-height:107%'>In
Pythons C API, a borrowed reference is a reference to an object, where the
code using the object does not own the reference. It becomes a dangling pointer
if the object is destroyed. For example, a garbage collection can remove the
last <i><span style='color:#355F7C'>strong reference </span></i>to the object
and so destroy it.</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection17>

<p class=MsoNormal style='margin-left:25.4pt'>Calling <span style='font-size:
9.0pt;line-height:108%'>Py_INCREF() </span>on the <i><span style='color:#355F7C'>borrowed
reference </span></i>is recommended to convert it to a <i><span
style='color:#355F7C'>strong reference </span></i>in-place, except when the
object cannot be destroyed before the last usage of the borrowed reference. The
<span style='font-size:9.0pt;line-height:108%'>Py_NewRef() </span>function can
be used to create a new <i><span style='color:#355F7C'>strong reference</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>bytes-like
object</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object that supports the
bufferobjects and can export a C-<i><span style='color:#355F7C'>contiguous </span></i>buffer.
This includes all <span style='font-size:9.0pt;line-height:108%'>bytes</span>, <span
style='font-size:9.0pt;line-height:108%'>bytearray</span>, and <span
style='font-size:9.0pt;line-height:108%'>array.array </span>objects, as well as
many common <span style='font-size:9.0pt;line-height:108%'>memoryview </span>objects.
Bytes-like objects can be used for various operations that work with binary
data; these include compression, saving to a binary file, and sending over a
socket.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Some operations need the binary
data to be mutable. The documentation often refers to these as read-write
bytes-like objects. Example mutable buffer objects include <span
style='font-size:9.0pt;line-height:108%'>bytearray </span>and a <span
style='font-size:9.0pt;line-height:108%'>memoryview </span>of a <span
style='font-size:9.0pt;line-height:108%'>bytearray</span>. Other operations
require the binary data to be stored in immutable objects (read-only
bytes-like objects); examples of these include <span style='font-size:9.0pt;
line-height:108%'>bytes </span>and a <span style='font-size:9.0pt;line-height:
108%'>memoryview </span>of a <span style='font-size:9.0pt;line-height:108%'>bytes
</span>object.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>bytecode</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Python source code is compiled
into bytecode, the internal representation of a Python program in the CPython
interpreter. The bytecode is also cached in <span style='font-size:9.0pt;
line-height:108%'>.pyc </span>files so that executing the same file is faster
the second time (recompilation from source to bytecode can be avoided). This
intermediate language is said to run on a <i><span style='color:#355F7C'>virtual
machine </span></i>that executes the machine code corresponding to each
bytecode. Do note that bytecodes are not expected to work between different
Python virtual machines, nor to be stable between Python releases.</p>

<p class=MsoNormal style='margin-left:25.4pt'>A list of bytecode instructions
can be found in the documentation for the dis module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>callable</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>A callable is an object that can be called, possibly with a
set of arguments (see <i><span style='color:#355F7C'>argument</span></i>), with
the following syntax:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=25
src="Python%20Frequently%20Asked%20Questions_files/image204.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>A <i><span style='color:#355F7C'>function</span></i>,
and by extension a <i><span style='color:#355F7C'>method</span></i>, is a
callable. An instance of a class that implements the <span style='font-size:
9.0pt;line-height:108%'>__call__() </span>method is also a callable.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>callback</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A subroutine function which is
passed as an argument to be executed at some point in the future.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>class</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A template for creating
user-defined objects. Class definitions normally contain method definitions
which operate on instances of the class.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>class
variable</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.75pt;text-indent:24.9pt;line-height:155%'>A variable defined in a
class and intended to be modified only at class level (i.e., not in an instance
of the class). <b>closure variable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A <i><span style='color:#355F7C'>free
variable </span></i>referenced from a <i><span style='color:#355F7C'>nested
scope </span></i>that is defined in an outer scope rather than being resolved
at runtime from the globals or builtin namespaces. May be explicitly defined
with the <span style='font-size:9.0pt;line-height:108%'>nonlocal </span>keyword
to allow write access, or implicitly defined if the variable is only being
read.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
margin-left:25.4pt'>For example, in the <span style='font-size:9.0pt;
line-height:108%'>inner </span>function in the following code, both <span
style='font-size:9.0pt;line-height:108%'>x </span>and <span style='font-size:
9.0pt;line-height:108%'>print </span>are <i><span style='color:#355F7C'>free
variables</span></i>, but only <span style='font-size:9.0pt;line-height:108%'>x
</span>is a <i>closure variable</i>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.2pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=121
src="Python%20Frequently%20Asked%20Questions_files/image205.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>Due to the <span
style='font-size:9.0pt;line-height:108%'>codeobject.co_freevars </span>attribute
(which, despite its name, only includes the names of closure variables rather
than listing all referenced free variables), the more general <i><span
style='color:#355F7C'>free variable </span></i>term is sometimes used even when
the intended meaning is to refer specifically to closure variables.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>complex
number</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.75pt;
margin-left:-.75pt;text-indent:24.9pt'>An extension of the familiar real number
system in which all numbers are expressed as a sum of a real part and an
imaginary part. Imaginary numbers are real multiples of the imaginary unit (the
square root of <span style='font-size:9.0pt;line-height:108%'>-1</span>), often
written <span style='font-size:9.0pt;line-height:108%'>i </span>in mathematics
or <span style='font-size:9.0pt;line-height:108%'>j </span>in engineering.
Python has built-in support for complex numbers, which are written with this
latter notation; the imaginary part is written with a <span style='font-size:
9.0pt;line-height:108%'>j </span>suffix, e.g., <span style='font-size:9.0pt;
line-height:108%'>3+1j</span>. To get access to complex equivalents of the <span
style='font-size:9.0pt;line-height:108%'>math </span>module, use <span
style='font-size:9.0pt;line-height:108%'>cmath</span>. Use of complex numbers
is a fairly advanced mathematical feature. If youre not aware of a need for
them, its almost certain you can safely ignore them. <b>context</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>This term has different meanings
depending on where and how it is used. Some common meanings:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:3.95pt;margin-bottom:
6.25pt;margin-left:27.9pt;text-indent:-8.95pt;line-height:107%'><span
style='line-height:107%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The temporary state or environment established by a <i><span
style='color:#355F7C'>context manager </span></i>via a <span style='font-size:
9.0pt;line-height:107%'>with </span>statement.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:3.95pt;margin-bottom:
2.6pt;margin-left:27.9pt;text-indent:-8.95pt;line-height:137%'><span
style='line-height:137%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>The collection of keyvalue bindings associated with a particular <span
style='font-size:9.0pt;line-height:137%'>contextvars.Context </span>object and
accessed via <span style='font-size:9.0pt;line-height:137%'>ContextVar </span>objects.
Also see <i><span style='color:#355F7C'>context variable</span></i>.  A <span
style='font-size:9.0pt;line-height:137%'>contextvars.Context </span>object.
Also see <i><span style='color:#355F7C'>current context</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>context
management protocol</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The <span style='font-size:9.0pt;
line-height:108%'>__enter__() </span>and <span style='font-size:9.0pt;
line-height:108%'>__exit__() </span>methods called by the <span
style='font-size:9.0pt;line-height:108%'>with </span>statement. See <a
href="https://peps.python.org/pep-0343/"><b><span style='color:#377063;
text-decoration:none'>PEP 343</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>context
manager</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object which implements the <i><span
style='color:#355F7C'>context management protocol </span></i>and controls the
environment seen in a <span style='font-size:9.0pt;line-height:108%'>with </span>statement.
See <a href="https://peps.python.org/pep-0343/"><b><span style='color:#377063;
text-decoration:none'>PEP 343</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>context
variable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A variable whose value depends on
which context is the <i><span style='color:#355F7C'>current context</span></i>.
Values are accessed via <span style='font-size:9.0pt;line-height:108%'>contextvars.ContextVar
</span>objects. Context variables are primarily used to isolate state between
concurrent asynchronous tasks.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>contiguous</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A buffer is considered contiguous
exactly if it is either <i>C-contiguous </i>or <i>Fortran contiguous</i>.
Zero-dimensional buffers are C and Fortran contiguous. In one-dimensional
arrays, the items must be laid out in memory next to each other, in order of
increasing indexes starting from zero. In multidimensional C-contiguous arrays,
the last index varies the fastest when visiting items in order of memory
address. However, in Fortran contiguous arrays, the first index varies the
fastest.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>coroutine</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Coroutines are a more generalized
form of subroutines. Subroutines are entered at one point and exited at another
point. Coroutines can be entered, exited, and resumed at many different points.
They can be implemented with the <span style='font-size:9.0pt;line-height:108%'>async
def </span>statement. See also <a href="https://peps.python.org/pep-0492/"><b><span
style='color:#377063;text-decoration:none'>PEP 492</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>coroutine
function</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.25pt;
margin-left:25.4pt'>A function which returns a <i><span style='color:#355F7C'>coroutine
</span></i>object. A coroutine function may be defined with the <span
style='font-size:9.0pt;line-height:108%'>async def </span>statement, and may
contain <span style='font-size:9.0pt;line-height:108%'>await</span>, <span
style='font-size:9.0pt;line-height:108%'>async for</span>, and <span
style='font-size:9.0pt;line-height:108%'>async with </span>keywords. These were
introduced by <a href="https://peps.python.org/pep-0492/"><b><span
style='color:#377063;text-decoration:none'>PEP</span></b></a></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.7pt;margin-left:24.65pt;text-align:left;line-height:107%'><a
href="https://peps.python.org/pep-0492/"><b><span style='color:#377063;
text-decoration:none'>492</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>CPython</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.75pt;text-indent:24.9pt;line-height:131%'>The canonical
implementation of the Python programming language, as distributed on <a
href="https://www.python.org/"><span style='color:#377063;text-decoration:none'>python.org</span></a>.
The term CPython is used when necessary to distinguish this implementation
from others such as Jython or IronPython. <b>current context</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The <i><span style='color:#355F7C'>context
</span></i>(<span style='font-size:9.0pt;line-height:108%'>contextvars.Context </span>object)
that is currently used by <span style='font-size:9.0pt;line-height:108%'>ContextVar
</span>objects to access (get or set) the values of <i><span style='color:#355F7C'>context
variables</span></i>. Each thread has its own current context. Frameworks for
executing asynchronous tasks (see <span style='font-size:9.0pt;line-height:
108%'>asyncio</span>) associate each task with a context which becomes the
current context whenever the task starts or resumes execution.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>decorator</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A function returning another
function, usually applied as a function transformation using the <span
style='font-size:9.0pt;line-height:108%'>@wrapper </span>syntax. Common
examples for decorators are <span style='font-size:9.0pt;line-height:108%'>classmethod()
</span>and <span style='font-size:9.0pt;line-height:108%'>staticmethod()</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>The decorator syntax is merely
syntactic sugar, the following two function definitions are semantically
equivalent:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=121
src="Python%20Frequently%20Asked%20Questions_files/image206.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>The same concept exists for
classes, but is less commonly used there. See the documentation for function
definitions and class definitions for more about decorators.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>descriptor</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Any object which defines the
methods <span style='font-size:9.0pt;line-height:108%'>__get__()</span>, <span
style='font-size:9.0pt;line-height:108%'>__set__()</span>, or <span
style='font-size:9.0pt;line-height:108%'>__delete__()</span>. When a class
attribute is a descriptor, its special binding behavior is triggered upon
attribute lookup. Normally, using <i>a.b </i>to get, set or delete an attribute
looks up the object named <i>b </i>in the class dictionary for <i>a</i>, but if
<i>b </i>is a descriptor, the respective descriptor method gets called.
Understanding descriptors is a key to a deep understanding of Python because
they are the basis for many features including functions, methods, properties,
class methods, static methods, and reference to super classes.</p>

<p class=MsoNormal style='margin-left:25.4pt'>For more information about
descriptors methods, see descriptors or the Descriptor How To Guide.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>dictionary</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An associative array, where
arbitrary keys are mapped to values. The keys can be any object with <span
style='font-size:9.0pt;line-height:108%'>__hash__() </span>and <span
style='font-size:9.0pt;line-height:108%'>__eq__() </span>methods. Called a hash
in Perl.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>dictionary
comprehension</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A compact way to process all or
part of the elements in an iterable and return a dictionary with the results. <span
style='font-size:9.0pt;line-height:108%'>results = {n: n ** 2 for n in
range(10)} </span>generates a dictionary containing key <span style='font-size:
9.0pt;line-height:108%'>n </span>mapped to value <span style='font-size:9.0pt;
line-height:108%'>n ** 2</span>. See comprehensions.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>dictionary
view</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The objects returned from <span
style='font-size:9.0pt;line-height:108%'>dict.keys()</span>, <span
style='font-size:9.0pt;line-height:108%'>dict.values()</span>, and <span
style='font-size:9.0pt;line-height:108%'>dict.items() </span>are called
dictionary views. They provide a dynamic view on the dictionarys entries,
which means that when the dictionary changes, the view reflects these changes.
To force the dictionary view to become a full list use <span style='font-size:
9.0pt;line-height:108%'>list(dictview)</span>. See dict-views.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>docstring</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:25.4pt;text-align:left;line-height:107%'>A
string literal which appears as the first expression in a class, function or
module. While ignored when the suite is executed, it is recognized by the
compiler and put into the <span style='font-size:9.0pt;line-height:107%'>__doc__
</span>attribute of the enclosing class, function or module. Since it is
available via introspection, it is the canonical place for documentation of the
object.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>duck-typing</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A programming style which does
not look at an objects type to determine if it has the right interface;
instead, the method or attribute is simply called or used (If it looks like a
duck and quacks like a duck, it must be a duck.) By emphasizing interfaces
rather than specific types, well-designed code improves its flexibility by
allowing polymorphic substitution. Duck-typing avoids tests using <span
style='font-size:9.0pt;line-height:108%'>type() </span>or <span
style='font-size:9.0pt;line-height:108%'>isinstance()</span>. (Note, however,
that duck-typing can be complemented with <i><span style='color:#355F7C'>abstract
base classes</span></i>.) Instead, it typically employs <span style='font-size:
9.0pt;line-height:108%'>hasattr() </span>tests or <i><span style='color:#355F7C'>EAFP
</span></i>programming.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>EAFP</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Easier to ask for forgiveness
than permission. This common Python coding style assumes the existence of valid
keys or attributes and catches exceptions if the assumption proves false. This
clean and fast style is characterized by the presence of many <span
style='font-size:9.0pt;line-height:108%'>try </span>and <span style='font-size:
9.0pt;line-height:108%'>except </span>statements. The technique contrasts with
the <i><span style='color:#355F7C'>LBYL </span></i>style common to many other
languages such as C.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>expression</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A piece of syntax which can be
evaluated to some value. In other words, an expression is an accumulation of
expression elements like literals, names, attribute access, operators or
function calls which all return a value. In contrast to many other languages,
not all language constructs are expressions. There are also <i><span
style='color:#355F7C'>statement</span></i>s which cannot be used as
expressions, such as <span style='font-size:9.0pt;line-height:108%'>while</span>.
Assignments are also statements, not expressions.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>extension
module</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A module written in C or C++,
using Pythons C API to interact with the core and with user code.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>f-string</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>String literals prefixed with <span
style='font-size:9.0pt;line-height:108%'>'f' </span>or <span style='font-size:
9.0pt;line-height:108%'>'F' </span>are commonly called f-strings which is
short for formatted string literals. See also <a
href="https://peps.python.org/pep-0498/"><b><span style='color:#377063;
text-decoration:none'>PEP 498</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>file
object</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object exposing a
file-oriented API (with methods such as <span style='font-size:9.0pt;
line-height:108%'>read() </span>or <span style='font-size:9.0pt;line-height:
108%'>write()</span>) to an underlying resource. Depending on the way it was
created, a file object can mediate access to a real on-disk file or to another
type of storage or communication device (for example standard input/output,
in-memory buffers, sockets, pipes, etc.). File objects are also called <i>file-like
objects </i>or <i>streams</i>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>There are actually three
categories of file objects: raw <i><span style='color:#355F7C'>binary files</span></i>,
buffered <i><span style='color:#355F7C'>binary files </span></i>and <i><span
style='color:#355F7C'>text files</span></i>. Their interfaces are defined in
the <span style='font-size:9.0pt;line-height:108%'>io </span>module. The
canonical way to create a file object is by using the <span style='font-size:
9.0pt;line-height:108%'>open() </span>function.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>file-like
object</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A synonym for <i><span
style='color:#355F7C'>file object</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>filesystem
encoding and error handler</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Encoding and error handler used
by Python to decode bytes from the operating system and encode Unicode to the
operating system.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:6.7pt;
margin-left:25.4pt'>The filesystem encoding must guarantee to successfully
decode all bytes below 128. If the file system encoding fails to provide this
guarantee, API functions can raise <span style='font-size:9.0pt;line-height:
108%'>UnicodeError</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>The <span style='font-size:9.0pt;
line-height:108%'>sys.getfilesystemencoding() </span>and <span
style='font-size:9.0pt;line-height:108%'>sys.getfilesystemencodeerrors() </span>functions
can be used to get the filesystem encoding and error handler.</p>

<p class=MsoNormal style='margin-left:25.4pt'>The <i><span style='color:#355F7C'>filesystem
encoding and error handler </span></i>are configured at Python startup by the <span
style='font-size:9.0pt;line-height:108%'>PyConfig_Read() </span>function: see <span
style='font-size:9.0pt;line-height:108%'>filesystem_encoding </span>and <span
style='font-size:9.0pt;line-height:108%'>filesystem_errors </span>members of <span
style='font-size:9.0pt;line-height:108%'>PyConfig</span>.</p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See also the <i><span style='color:#355F7C'>locale encoding</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>finder</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object that tries to find the <i><span
style='color:#355F7C'>loader </span></i>for a module that is being imported.</p>

<p class=MsoNormal style='margin-left:25.4pt'>There are two types of finder: <i><span
style='color:#355F7C'>meta path finders </span></i>for use with <span
style='font-size:9.0pt;line-height:108%'>sys.meta_path</span>, and <i><span
style='color:#355F7C'>path entry finders </span></i>for use with <span
style='font-size:9.0pt;line-height:108%'>sys.path_hooks</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See finders-and-loaders and <span
style='font-size:9.0pt;line-height:108%'>importlib </span>for much more detail.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>floor
division</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Mathematical division that rounds
down to nearest integer. The floor division operator is <span style='font-size:
9.0pt;line-height:108%'>//</span>. For example, the expression <span
style='font-size:9.0pt;line-height:108%'>11 // 4 </span>evaluates to <span
style='font-size:9.0pt;line-height:108%'>2 </span>in contrast to the <span
style='font-size:9.0pt;line-height:108%'>2.75 </span>returned by float true
division. Note that <span style='font-size:9.0pt;line-height:108%'>(-11) // 4 </span>is
<span style='font-size:9.0pt;line-height:108%'>-3 </span>because that is <span
style='font-size:9.0pt;line-height:108%'>-2.75 </span>rounded <i>downward</i>.
See <a href="https://peps.python.org/pep-0238/"><b><span style='color:#377063;
text-decoration:none'>PEP 238</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>free
threading</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A threading model where multiple
threads can run Python bytecode simultaneously within the same interpreter.
This is in contrast to the <i><span style='color:#355F7C'>global interpreter
lock </span></i>which allows only one thread to execute Python bytecode at a
time. See <a href="https://peps.python.org/pep-0703/"><b><span
style='color:#377063;text-decoration:none'>PEP 703</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>free
variable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Formally, as defined in the
language execution model, a free variable is any variable used in a namespace
which is not a local variable in that namespace. See <i><span style='color:
#355F7C'>closure variable </span></i>for an example. Pragmatically, due to the
name of the <span style='font-size:9.0pt;line-height:108%'>codeobject.co_freevars
</span>attribute, the term is also sometimes used as a synonym for <i><span
style='color:#355F7C'>closure variable</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>function</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A series of statements which
returns some value to a caller. It can also be passed zero or more <i><span
style='color:#355F7C'>arguments </span></i>which may be used in the execution
of the body. See also <i><span style='color:#355F7C'>parameter</span></i>, <i><span
style='color:#355F7C'>method</span></i>, and the function section.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>function
annotation</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An <i><span style='color:#355F7C'>annotation
</span></i>of a function parameter or return value.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.05pt;
margin-left:25.4pt'>Function annotations are usually used for <i><span
style='color:#355F7C'>type hints</span></i>: for example, this function is
expected to take two <span style='font-size:9.0pt;line-height:108%'>int </span>arguments
and is also expected to have an <span style='font-size:9.0pt;line-height:108%'>int
</span>return value:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=41
src="Python%20Frequently%20Asked%20Questions_files/image207.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>Function annotation syntax is
explained in section function.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See <i><span style='color:#355F7C'>variable
annotation </span></i>and <a href="https://peps.python.org/pep-0484/"><b><span
style='color:#377063;text-decoration:none'>PEP 484</span></b></a>, which
describe this functionality. Also see annotations-howto for best practices on
working with annotations.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>__future__</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>A future statement, <span style='font-size:9.0pt;
line-height:108%'>from __future__ import &lt;feature&gt;</span>, directs the
compiler to compile the current module using syntax or semantics that will
become standard in a future release of Python. The <span style='font-size:9.0pt;
line-height:108%'>__future__ </span>module documents the possible values of <i>feature</i>.
By importing this module and evaluating its variables, you can see when a new
feature was first added to the language and when it will (or did) become the
default:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=57
src="Python%20Frequently%20Asked%20Questions_files/image208.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>garbage
collection</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The process of freeing memory
when it is not used anymore. Python performs garbage collection via reference
counting and a cyclic garbage collector that is able to detect and break
reference cycles. The garbage collector can be controlled using the <span
style='font-size:9.0pt;line-height:108%'>gc </span>module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>generator</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A function which returns a <i><span
style='color:#355F7C'>generator iterator</span></i>. It looks like a normal
function except that it contains <span style='font-size:9.0pt;line-height:108%'>yield
</span>expressions for producing a series of values usable in a for-loop or
that can be retrieved one at a time with the <span style='font-size:9.0pt;
line-height:108%'>next() </span>function.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Usually refers to a generator
function, but may refer to a <i>generator iterator </i>in some contexts. In
cases where the intended meaning isnt clear, using the full terms avoids
ambiguity.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>generator
iterator</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object created by a <i><span
style='color:#355F7C'>generator </span></i>function.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Each <span style='font-size:9.0pt;
line-height:108%'>yield </span>temporarily suspends processing, remembering the
execution state (including local variables and pending try-statements). When
the <i>generator iterator </i>resumes, it picks up where it left off (in
contrast to functions which start fresh on every invocation).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>generator
expression</b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:25.4pt;text-align:left;line-height:107%'>An <i><span
style='color:#355F7C'>expression </span></i>that returns an <i><span
style='color:#355F7C'>iterator</span></i>. It looks like a normal expression
followed by a <span style='font-size:9.0pt;line-height:107%'>for </span>clause
defining a loop variable, range, and an optional <span style='font-size:9.0pt;
line-height:107%'>if </span>clause. The combined expression generates values
for an enclosing function:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=41
src="Python%20Frequently%20Asked%20Questions_files/image209.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>generic
function</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A function composed of multiple
functions implementing the same operation for different types. Which
implementation should be used during a call is determined by the dispatch
algorithm.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.75pt;text-indent:24.9pt;line-height:159%'>See also the <i><span
style='color:#355F7C'>single dispatch </span></i>glossary entry, the <span
style='font-size:9.0pt;line-height:159%'>functools.singledispatch() </span>decorator,
and <a href="https://peps.python.org/pep-0443/"><b><span style='color:#377063;
text-decoration:none'>PEP 443</span></b></a>. <b>generic type</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A <i><span style='color:#355F7C'>type
</span></i>that can be parameterized; typically a container class such as <span
style='font-size:9.0pt;line-height:108%'>list </span>or <span style='font-size:
9.0pt;line-height:108%'>dict</span>. Used for <i><span style='color:#355F7C'>type
hints </span></i>and <i><span style='color:#355F7C'>annotations</span></i>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>For more details, see generic
alias types, <a href="https://peps.python.org/pep-0483/"><b><span
style='color:#377063;text-decoration:none'>PEP 483</span></b></a>, <a
href="https://peps.python.org/pep-0484/"><b><span style='color:#377063;
text-decoration:none'>PEP 484</span></b></a>, <a
href="https://peps.python.org/pep-0585/"><b><span style='color:#377063;
text-decoration:none'>PEP 585</span></b></a>, and the <span style='font-size:
9.0pt;line-height:108%'>typing </span>module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>GIL</b></p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See <i><span style='color:#355F7C'>global interpreter lock</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>global
interpreter lock</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The mechanism used by the <i><span
style='color:#355F7C'>CPython </span></i>interpreter to assure that only one
thread executes Python <i><span style='color:#355F7C'>bytecode </span></i>at a
time. This simplifies the CPython implementation by making the object model
(including critical built-in types such as <span style='font-size:9.0pt;
line-height:108%'>dict</span>) implicitly safe against concurrent access.
Locking the entire interpreter makes it easier for the interpreter to be
multi-threaded, at the expense of much of the parallelism afforded by
multi-processor machines.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-.75pt;
margin-bottom:5.65pt;margin-left:25.4pt;text-align:left;line-height:107%'>However,
some extension modules, either standard or third-party, are designed so as to
release the GIL when doing computationally intensive tasks such as compression
or hashing. Also, the GIL is always released when doing I/O.</p>

<p class=MsoNormal style='margin-left:25.4pt'>As of Python 3.13, the GIL can be
disabled using the <span style='font-size:9.0pt;line-height:108%'>--disable-gil
</span>build configuration. After building Python with this option, code must
be run with <span style='font-size:9.0pt;line-height:108%'>-X gil=0 </span>or
after setting the <span style='font-size:9.0pt;line-height:108%'>PYTHON_GIL=0 </span>environment
variable. This feature enables improved performance for multi-threaded
applications and makes it easier to use multi-core CPUs efficiently. For more
details, see <a href="https://peps.python.org/pep-0703/"><b><span
style='color:#377063;text-decoration:none'>PEP 703</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>hash-based
pyc</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A bytecode cache file that uses
the hash rather than the last-modified time of the corresponding source file to
determine its validity. See pyc-invalidation.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>hashable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object is <i>hashable </i>if
it has a hash value which never changes during its lifetime (it needs a <span
style='font-size:9.0pt;line-height:108%'>__hash__() </span>method), and can be
compared to other objects (it needs an <span style='font-size:9.0pt;line-height:
108%'>__eq__() </span>method). Hashable objects which compare equal must have
the same hash value.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Hashability makes an object
usable as a dictionary key and a set member, because these data structures use
the hash value internally.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Most of Pythons immutable
built-in objects are hashable; mutable containers (such as lists or
dictionaries) are not; immutable containers (such as tuples and frozensets) are
only hashable if their elements are hashable. Objects which are instances of user-defined
classes are hashable by default. They all compare unequal (except with
themselves), and their hash value is derived from their <span style='font-size:
9.0pt;line-height:108%'>id()</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>IDLE</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An Integrated Development and
Learning Environment for Python. idle is a basic editor and interpreter
environment which ships with the standard distribution of Python.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>immortal</b></p>

<p class=MsoNormal style='margin-left:25.4pt'><i>Immortal objects </i>are a
CPython implementation detail introduced in <a
href="https://peps.python.org/pep-0683/"><b><span style='color:#377063;
text-decoration:none'>PEP 683</span></b></a>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>If an object is immortal, its <i><span
style='color:#355F7C'>reference count </span></i>is never modified, and
therefore it is never deallocated while the interpreter is running. For
example, <span style='font-size:9.0pt;line-height:108%'>True </span>and <span
style='font-size:9.0pt;line-height:108%'>None </span>are immortal in CPython.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>immutable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object with a fixed value.
Immutable objects include numbers, strings and tuples. Such an object cannot be
altered. A new object has to be created if a different value has to be stored.
They play an important role in places where a constant hash value is needed,
for example as a key in a dictionary.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>import
path</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A list of locations (or <i><span
style='color:#355F7C'>path entries</span></i>) that are searched by the <i><span
style='color:#355F7C'>path based finder </span></i>for modules to import.
During import, this list of locations usually comes from <span
style='font-size:9.0pt;line-height:108%'>sys.path</span>, but for subpackages
it may also come from the parent packages <span style='font-size:9.0pt;
line-height:108%'>__path__ </span>attribute.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>importing</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The process by which Python code
in one module is made available to Python code in another module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>importer</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object that both finds and
loads a module; both a <i><span style='color:#355F7C'>finder </span></i>and <i><span
style='color:#355F7C'>loader </span></i>object.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>interactive</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Python has an interactive
interpreter which means you can enter statements and expressions at the
interpreter prompt, immediately execute them and see their results. Just launch
<span style='font-size:9.0pt;line-height:108%'>python </span>with no arguments
(possibly by selecting it from your computers main menu). It is a very
powerful way to test out new ideas or inspect modules and packages (remember <span
style='font-size:9.0pt;line-height:108%'>help(x)</span>). For more on
interactive mode, see tut-interac.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>interpreted</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Python is an interpreted
language, as opposed to a compiled one, though the distinction can be blurry
because of the presence of the bytecode compiler. This means that source files
can be run directly without explicitly creating an executable which is then
run. Interpreted languages typically have a shorter development/debug cycle
than compiled ones, though their programs generally also run more slowly. See
also <i><span style='color:#355F7C'>interactive</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>interpreter
shutdown</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>When asked to shut down, the
Python interpreter enters a special phase where it gradually releases all
allocated resources, such as modules and various critical internal structures.
It also makes several calls to the <i><span style='color:#355F7C'>garbage
collector</span></i>. This can trigger the execution of code in user-defined
destructors or weakref callbacks. Code executed during the shutdown phase can
encounter various exceptions as the resources it relies on may not function
anymore (common examples are library modules or the warnings machinery).</p>

<p class=MsoNormal style='margin-left:25.4pt'>The main reason for interpreter
shutdown is that the <span style='font-size:9.0pt;line-height:108%'>__main__ </span>module
or the script being run has finished executing.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>iterable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object capable of returning
its members one at a time. Examples of iterables include all sequence types
(such as <span style='font-size:9.0pt;line-height:108%'>list</span>, <span
style='font-size:9.0pt;line-height:108%'>str</span>, and <span
style='font-size:9.0pt;line-height:108%'>tuple</span>) and some non-sequence
types like <span style='font-size:9.0pt;line-height:108%'>dict</span>, <i><span
style='color:#355F7C'>file objects</span></i>, and objects of any classes you
define with an <span style='font-size:9.0pt;line-height:108%'>__iter__() </span>method
or with a <span style='font-size:9.0pt;line-height:108%'>__getitem__() </span>method
that implements <i><span style='color:#355F7C'>sequence </span></i>semantics.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Iterables can be used in a <span
style='font-size:9.0pt;line-height:108%'>for </span>loop and in many other
places where a sequence is needed (<span style='font-size:9.0pt;line-height:
108%'>zip()</span>, <span style='font-size:9.0pt;line-height:108%'>map()</span>,
). When an iterable object is passed as an argument to the built-in function <span
style='font-size:9.0pt;line-height:108%'>iter()</span>, it returns an iterator
for the object. This iterator is good for one pass over the set of values. When
using iterables, it is usually not necessary to call <span style='font-size:
9.0pt;line-height:108%'>iter() </span>or deal with iterator objects yourself.
The <span style='font-size:9.0pt;line-height:108%'>for </span>statement does
that automatically for you, creating a temporary unnamed variable to hold the
iterator for the duration of the loop. See also <i><span style='color:#355F7C'>iterator</span></i>,
<i><span style='color:#355F7C'>sequence</span></i>, and <i><span
style='color:#355F7C'>generator</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>iterator</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object representing a stream
of data. Repeated calls to the iterators <span style='font-size:9.0pt;
line-height:108%'>__next__() </span>method (or passing it to the built-in
function <span style='font-size:9.0pt;line-height:108%'>next()</span>) return
successive items in the stream. When no more data are available a <span
style='font-size:9.0pt;line-height:108%'>StopIteration </span>exception is
raised instead. At this point, the iterator object is exhausted and any further
calls to its <span style='font-size:9.0pt;line-height:108%'>__next__() </span>method
just raise <span style='font-size:9.0pt;line-height:108%'>StopIteration </span>again.
Iterators are required to have an <span style='font-size:9.0pt;line-height:
108%'>__iter__() </span>method that returns the iterator object itself so every
iterator is also iterable and may be used in most places where other iterables
are accepted. One notable exception is code which attempts multiple iteration
passes. A container object (such as a <span style='font-size:9.0pt;line-height:
108%'>list</span>) produces a fresh new iterator each time you pass it to the <span
style='font-size:9.0pt;line-height:108%'>iter() </span>function or use it in a <span
style='font-size:9.0pt;line-height:108%'>for </span>loop. Attempting this with
an iterator will just return the same exhausted iterator object used in the
previous iteration pass, making it appear like an empty container.</p>

<p class=MsoNormal style='margin-left:25.4pt'>More information can be found in
typeiter.</p>

<p class=MsoNormal style='margin-left:25.4pt'><b>CPython implementation detail:
</b>CPython does not consistently apply the requirement that an iterator define
<span style='font-size:9.0pt;line-height:108%'>__iter__()</span>. And also
please note that the free-threading CPython does not guarantee the
thread-safety of iterator operations.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>key
function</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A key function or collation
function is a callable that returns a value used for sorting or ordering. For
example, <span style='font-size:9.0pt;line-height:108%'>locale.strxfrm() </span>is
used to produce a sort key that is aware of locale specific sort conventions.</p>

<p class=MsoNormal style='margin-left:25.4pt'>A number of tools in Python
accept key functions to control how elements are ordered or grouped. They
include <span style='font-size:9.0pt;line-height:108%'>min()</span>, <span
style='font-size:9.0pt;line-height:108%'>max()</span>, <span style='font-size:
9.0pt;line-height:108%'>sorted()</span>, <span style='font-size:9.0pt;
line-height:108%'>list.sort()</span>, <span style='font-size:9.0pt;line-height:
108%'>heapq.merge()</span>, <span style='font-size:9.0pt;line-height:108%'>heapq.nsmallest()</span>,
<span style='font-size:9.0pt;line-height:108%'>heapq. nlargest()</span>, and <span
style='font-size:9.0pt;line-height:108%'>itertools.groupby()</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>There are several ways to create
a key function. For example. the <span style='font-size:9.0pt;line-height:108%'>str.lower()
</span>method can serve as a key function for case insensitive sorts.
Alternatively, a key function can be built from a <span style='font-size:9.0pt;
line-height:108%'>lambda </span>expression such as <span style='font-size:9.0pt;
line-height:108%'>lambda r: (r[0], r[2])</span>. Also, <span style='font-size:
9.0pt;line-height:108%'>operator.attrgetter()</span>, <span style='font-size:
9.0pt;line-height:108%'>operator.itemgetter()</span>, and <span
style='font-size:9.0pt;line-height:108%'>operator.methodcaller() </span>are
three key function constructors. See the Sorting HOW TO for examples of how to
create and use key functions.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>keyword
argument</b></p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See <i><span style='color:#355F7C'>argument</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>lambda</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An anonymous inline function
consisting of a single <i><span style='color:#355F7C'>expression </span></i>which
is evaluated when the function is called. The syntax to create a lambda
function is <span style='font-size:9.0pt;line-height:108%'>lambda [parameters]:
expression</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>LBYL</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Look before you leap. This coding
style explicitly tests for pre-conditions before making calls or lookups. This
style contrasts with the <i><span style='color:#355F7C'>EAFP </span></i>approach
and is characterized by the presence of many <span style='font-size:9.0pt;
line-height:108%'>if </span>statements.</p>

<p class=MsoNormal style='margin-left:25.4pt'>In a multi-threaded environment,
the LBYL approach can risk introducing a race condition between the looking
and the leaping. For example, the code, <span style='font-size:9.0pt;
line-height:108%'>if key in mapping: return mapping[key] </span>can fail if
another thread removes <i>key </i>from <i>mapping </i>after the test, but
before the lookup. This issue can be solved with locks or by using the EAFP
approach.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>list</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A built-in Python <i><span
style='color:#355F7C'>sequence</span></i>. Despite its name it is more akin to
an array in other languages than to a linked list since access to elements is <i>O</i>(1).</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>list
comprehension</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.45pt;
margin-left:25.4pt'>A compact way to process all or part of the elements in a
sequence and return a list with the results. <span style='font-size:9.0pt;
line-height:108%'>result</span></p>

<p class=MsoNormal style='margin-left:25.4pt'><span style='font-size:9.0pt;
line-height:108%'>= ['{:#04x}'.format(x) for x in range(256) if x % 2 == 0] </span>generates
a list of strings containing even hex numbers (0x..) in the range from 0 to
255. The <span style='font-size:9.0pt;line-height:108%'>if </span>clause is
optional. If omitted, all elements in <span style='font-size:9.0pt;line-height:
108%'>range(256) </span>are processed.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>loader</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object that loads a module. It
must define the <span style='font-size:9.0pt;line-height:108%'>exec_module() </span>and
<span style='font-size:9.0pt;line-height:108%'>create_module() </span>methods
to implement the <span style='font-size:9.0pt;line-height:108%'>Loader </span>interface.
A loader is typically returned by a <i><span style='color:#355F7C'>finder</span></i>.
See also:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:6.75pt;margin-left:.65in;text-align:left;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>finders-and-loaders</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.85pt;margin-left:.65in;text-align:left;text-indent:-8.95pt;
line-height:112%'><span style='line-height:112%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><span style='font-size:9.0pt;line-height:112%'>importlib.abc.Loader</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.7pt;margin-left:.65in;text-align:left;text-indent:-8.95pt;
line-height:107%'><span style='line-height:107%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><a href="https://peps.python.org/pep-0302/"><b><span
style='color:#377063;text-decoration:none'>PEP 302</span></b></a></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>locale
encoding</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>On Unix, it is the encoding of
the LC_CTYPE locale. It can be set with <span style='font-size:9.0pt;
line-height:108%'>locale.setlocale(locale. LC_CTYPE, new_locale)</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>On Windows, it is the ANSI code
page (ex: <span style='font-size:9.0pt;line-height:108%'>&quot;cp1252&quot;</span>).</p>

<p class=MsoNormal style='margin-left:25.4pt'>On Android and VxWorks, Python
uses <span style='font-size:9.0pt;line-height:108%'>&quot;utf-8&quot; </span>as
the locale encoding.</p>

<p class=MsoNormal style='margin-left:25.4pt'><span style='font-size:9.0pt;
line-height:108%'>locale.getencoding() </span>can be used to get the locale
encoding.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:203.55pt;
margin-bottom:0in;margin-left:0in;text-align:left;text-indent:24.9pt;
line-height:159%'>See also the <i><span style='color:#355F7C'>filesystem
encoding and error handler</span></i>. <b>magic method</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An informal synonym for <i><span
style='color:#355F7C'>special method</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>mapping</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A container object that supports
arbitrary key lookups and implements the methods specified in the <span
style='font-size:9.0pt;line-height:108%'>collections.abc.Mapping </span>or <span
style='font-size:9.0pt;line-height:108%'>collections.abc.MutableMapping </span>abstract
base classes. Examples include <span style='font-size:9.0pt;line-height:108%'>dict</span>,
<span style='font-size:9.0pt;line-height:108%'>collections.defaultdict</span>, <span
style='font-size:9.0pt;line-height:108%'>collections.OrderedDict </span>and <span
style='font-size:9.0pt;line-height:108%'>collections. Counter</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>meta
path finder</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A <i><span style='color:#355F7C'>finder
</span></i>returned by a search of <span style='font-size:9.0pt;line-height:
108%'>sys.meta_path</span>. Meta path finders are related to, but different
from <i><span style='color:#355F7C'>path entry finders</span></i>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See <span style='font-size:9.0pt;
line-height:108%'>importlib.abc.MetaPathFinder </span>for the methods that meta
path finders implement.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>metaclass</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The class of a class. Class
definitions create a class name, a class dictionary, and a list of base
classes. The metaclass is responsible for taking those three arguments and
creating the class. Most object oriented programming languages provide a default
implementation. What makes Python special is that it is possible to create
custom metaclasses. Most users never need this tool, but when the need arises,
metaclasses can provide powerful, elegant solutions. They have been used for
logging attribute access, adding thread-safety, tracking object creation,
implementing singletons, and many other tasks.</p>

<p class=MsoNormal style='margin-left:25.4pt'>More information can be found in
metaclasses.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>method</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.75pt;text-indent:24.9pt;line-height:132%'>A function which is
defined inside a class body. If called as an attribute of an instance of that
class, the method will get the instance object as its first <i><span
style='color:#355F7C'>argument </span></i>(which is usually called <span
style='font-size:9.0pt;line-height:132%'>self</span>). See <i><span
style='color:#355F7C'>function </span></i>and <i><span style='color:#355F7C'>nested
scope</span></i>. <b>method resolution order</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Method Resolution Order is the
order in which base classes are searched for a member during lookup. See
python_2.3_mro for details of the algorithm used by the Python interpreter
since the 2.3 release.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>module</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object that serves as an
organizational unit of Python code. Modules have a namespace containing
arbitrary Python objects. Modules are loaded into Python by the process of <i><span
style='color:#355F7C'>importing</span></i>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See also <i><span
style='color:#355F7C'>package</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>module
spec</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A namespace containing the
import-related information used to load a module. An instance of <span
style='font-size:9.0pt;line-height:108%'>importlib. machinery.ModuleSpec</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See also module-specs.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>MRO</b></p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See <i><span style='color:#355F7C'>method resolution order</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>mutable</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Mutable objects can change their
value but keep their <span style='font-size:9.0pt;line-height:108%'>id()</span>.
See also <i><span style='color:#355F7C'>immutable</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>named
tuple</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The term named tuple applies to
any type or class that inherits from tuple and whose indexable elements are
also accessible using named attributes. The type or class may have other
features as well.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>Several built-in types are named tuples, including the
values returned by <span style='font-size:9.0pt;line-height:108%'>time.localtime()
</span>and <span style='font-size:9.0pt;line-height:108%'>os.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=127
src="Python%20Frequently%20Asked%20Questions_files/image210.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>Some named tuples are built-in
types (such as the above examples). Alternatively, a named tuple can be created
from a regular class definition that inherits from <span style='font-size:9.0pt;
line-height:108%'>tuple </span>and that defines named fields. Such a class can
be written by hand, or it can be created by inheriting <span style='font-size:
9.0pt;line-height:108%'>typing.NamedTuple</span>, or with the factory function <span
style='font-size:9.0pt;line-height:108%'>collections.namedtuple()</span>. The
latter techniques also add some extra methods that may not be found in
hand-written or built-in named tuples.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>namespace</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.8pt;
margin-left:-.75pt;text-indent:24.9pt'>The place where a variable is stored.
Namespaces are implemented as dictionaries. There are the local, global and
built-in namespaces as well as nested namespaces in objects (in methods).
Namespaces support modularity by preventing naming conflicts. For instance, the
functions <span style='font-size:9.0pt;line-height:108%'>builtins.open </span>and
<span style='font-size:9.0pt;line-height:108%'>os.open() </span>are
distinguished by their namespaces. Namespaces also aid readability and
maintainability by making it clear which module implements a function. For
instance, writing <span style='font-size:9.0pt;line-height:108%'>random.seed() </span>or
<span style='font-size:9.0pt;line-height:108%'>itertools.islice() </span>makes
it clear that those functions are implemented by the <span style='font-size:
9.0pt;line-height:108%'>random </span>and <span style='font-size:9.0pt;
line-height:108%'>itertools </span>modules, respectively. <b>namespace package</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A <i><span style='color:#355F7C'>package
</span></i>which serves only as a container for subpackages. Namespace packages
may have no physical representation, and specifically are not like a <i><span
style='color:#355F7C'>regular package </span></i>because they have no <span
style='font-size:9.0pt;line-height:108%'>__init__.py </span>file.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Namespace packages allow several
individually installable packages to have a common parent package. Otherwise,
it is recommended to use a <i><span style='color:#355F7C'>regular package</span></i>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>For more information, see <a
href="https://peps.python.org/pep-0420/"><b><span style='color:#377063;
text-decoration:none'>PEP 420</span></b></a><b><span style='color:#377063'> </span></b>and
reference-namespace-package.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See also <i><span
style='color:#355F7C'>module</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>nested
scope</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The ability to refer to a
variable in an enclosing definition. For instance, a function defined inside
another function can refer to variables in the outer function. Note that nested
scopes by default work only for reference and not for assignment. Local
variables both read and write in the innermost scope. Likewise, global
variables read and write to the global namespace. The <span style='font-size:
9.0pt;line-height:108%'>nonlocal </span>allows writing to outer scopes.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>new-style
class</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Old name for the flavor of
classes now used for all class objects. In earlier Python versions, only
new-style classes could use Pythons newer, versatile features like <span
style='font-size:9.0pt;line-height:108%'>__slots__</span>, descriptors,
properties, <span style='font-size:9.0pt;line-height:108%'>__getattribute__()</span>,
class methods, and static methods.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>object</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Any data with state (attributes
or value) and defined behavior (methods). Also the ultimate base class of any <i><span
style='color:#355F7C'>new-style class</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>optimized
scope</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A scope where target local
variable names are reliably known to the compiler when the code is compiled,
allowing optimization of read and write access to these names. The local
namespaces for functions, generators, coroutines, comprehensions, and generator
expressions are optimized in this fashion. Note: most interpreter optimizations
are applied to all scopes, only those relying on a known set of local and
nonlocal variable names are restricted to optimized scopes.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>package</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A Python <i><span
style='color:#355F7C'>module </span></i>which can contain submodules or
recursively, subpackages. Technically, a package is a Python module with a <span
style='font-size:9.0pt;line-height:108%'>__path__ </span>attribute.</p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See also <i><span style='color:#355F7C'>regular package </span></i>and
<i><span style='color:#355F7C'>namespace package</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>parameter</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A named entity in a <i><span
style='color:#355F7C'>function </span></i>(or method) definition that specifies
an <i><span style='color:#355F7C'>argument </span></i>(or in some cases,
arguments) that the function can accept. There are five kinds of parameter:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.65in;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><i>positional-or-keyword</i>:
specifies an argument that can be passed either <i><span style='color:#355F7C'>positionally
</span></i>or as a <i><span style='color:#355F7C'>keyword argument</span></i>.
This is the default kind of parameter, for example <i>foo </i>and <i>bar </i>in
the following:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:43.45pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=549 height=25
src="Python%20Frequently%20Asked%20Questions_files/image211.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.1pt;
margin-left:.65in;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><i>positional-only</i>:
specifies an argument that can be supplied only by position. Positional-only
parameters can be defined by including a <span style='font-size:9.0pt;
line-height:108%'>/ </span>character in the parameter list of the function
definition after them, for example <i>posonly1 </i>and <i>posonly2 </i>in the
following:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:13.85pt;margin-left:47.3pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895817216'><span style='left:0px;position:
absolute;left:58px;top:-46522px;width:548px;height:1px'><img width=548
height=1 src="Python%20Frequently%20Asked%20Questions_files/image212.gif"></span></span><b><span
style='font-size:9.0pt;line-height:112%;color:#007021'>def </span></b><span
style='font-size:9.0pt;line-height:112%;color:#05297D'>func</span><span
style='font-size:9.0pt;line-height:112%'>(posonly1, posonly2, </span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>/</span><span
style='font-size:9.0pt;line-height:112%'>, positional_or_keyword): </span><span
style='font-size:9.0pt;line-height:112%;color:#666666'>...</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.65in;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><i>keyword-only</i>:
specifies an argument that can be supplied only by keyword. Keyword-only
parameters can be defined by including a single var-positional parameter or
bare <span style='font-size:9.0pt;line-height:108%'>* </span>in the parameter
list of the function definition before them, for example <i>kw_only1 </i>and <i>kw_only2
</i>in the following:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:43.45pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=549 height=25
src="Python%20Frequently%20Asked%20Questions_files/image213.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:.65in;text-indent:-8.95pt;line-height:107%'><span style='line-height:
107%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><i>var-positional</i>:
specifies that an arbitrary sequence of positional arguments can be provided
(in addition to any positional arguments already accepted by other parameters).
Such a parameter can be defined by prepending the parameter name with <span
style='font-size:9.0pt;line-height:107%'>*</span>, for example <i>args </i>in
the following:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:43.45pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=549 height=25
src="Python%20Frequently%20Asked%20Questions_files/image214.gif"></span></p>

<p class=MsoNormal style='margin-left:.65in;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span><i>var-keyword</i>: specifies that arbitrarily many keyword
arguments can be provided (in addition to any keyword arguments already
accepted by other parameters). Such a parameter can be defined by prepending
the parameter name with <span style='font-size:9.0pt;line-height:108%'>**</span>,
for example <i>kwargs </i>in the example above.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Parameters can specify both
optional and required arguments, as well as default values for some optional
arguments.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See also the <i><span
style='color:#355F7C'>argument </span></i>glossary entry, the FAQ question on <i><span
style='color:#355F7C'>the difference between arguments and parameters</span></i>,
the <span style='font-size:9.0pt;line-height:108%'>inspect.Parameter </span>class,
the function section, and <a href="https://peps.python.org/pep-0362/"><b><span
style='color:#377063;text-decoration:none'>PEP 362</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>path
entry</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.75pt;text-indent:24.9pt;line-height:159%'>A single location on
the <i><span style='color:#355F7C'>import path </span></i>which the <i><span
style='color:#355F7C'>path based finder </span></i>consults to find modules for
importing. <b>path entry finder</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A <i><span style='color:#355F7C'>finder
</span></i>returned by a callable on <span style='font-size:9.0pt;line-height:
108%'>sys.path_hooks </span>(i.e. a <i><span style='color:#355F7C'>path entry
hook</span></i>) which knows how to locate modules given a <i><span
style='color:#355F7C'>path entry</span></i>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See <span style='font-size:9.0pt;
line-height:108%'>importlib.abc.PathEntryFinder </span>for the methods that
path entry finders implement.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>path
entry hook</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A callable on the <span
style='font-size:9.0pt;line-height:108%'>sys.path_hooks </span>list which
returns a <i><span style='color:#355F7C'>path entry finder </span></i>if it
knows how to find modules on a specific <i><span style='color:#355F7C'>path
entry</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>path
based finder</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>One of the default <i><span
style='color:#355F7C'>meta path finders </span></i>which searches an <i><span
style='color:#355F7C'>import path </span></i>for modules.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>path-like
object</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object representing a file
system path. A path-like object is either a <span style='font-size:9.0pt;
line-height:108%'>str </span>or <span style='font-size:9.0pt;line-height:108%'>bytes
</span>object representing a path, or an object implementing the <span
style='font-size:9.0pt;line-height:108%'>os.PathLike </span>protocol. An object
that supports the <span style='font-size:9.0pt;line-height:108%'>os.PathLike </span>protocol
can be converted to a <span style='font-size:9.0pt;line-height:108%'>str </span>or
<span style='font-size:9.0pt;line-height:108%'>bytes </span>file system path by
calling the <span style='font-size:9.0pt;line-height:108%'>os.fspath() </span>function;
<span style='font-size:9.0pt;line-height:108%'>os. fsdecode() </span>and <span
style='font-size:9.0pt;line-height:108%'>os.fsencode() </span>can be used to
guarantee a <span style='font-size:9.0pt;line-height:108%'>str </span>or <span
style='font-size:9.0pt;line-height:108%'>bytes </span>result instead,
respectively. Introduced by <a href="https://peps.python.org/pep-0519/"><b><span
style='color:#377063;text-decoration:none'>PEP 519</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>PEP</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Python Enhancement Proposal. A
PEP is a design document providing information to the Python community, or
describing a new feature for Python or its processes or environment. PEPs
should provide a concise technical specification and a rationale for proposed
features.</p>

<p class=MsoNormal style='margin-left:25.4pt'>PEPs are intended to be the
primary mechanisms for proposing major new features, for collecting community
input on an issue, and for documenting the design decisions that have gone into
Python. The PEP author is responsible for building consensus within the
community and documenting dissenting opinions.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See <a
href="https://peps.python.org/pep-0001/"><b><span style='color:#377063;
text-decoration:none'>PEP</span></b></a><b><span style='color:#377063'> </span></b><a
href="https://peps.python.org/pep-0001/"><b><span style='color:#377063;
text-decoration:none'>1</span></b></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>portion</b></p>

<p class=MsoNormal style='margin-left:-.75pt;text-indent:24.9pt'>A set of files
in a single directory (possibly stored in a zip file) that contribute to a
namespace package, as defined in <a href="https://peps.python.org/pep-0420/"><b><span
style='color:#377063;text-decoration:none'>PEP 420</span></b></a>. <b>positional
argument </b>See <i><span style='color:#355F7C'>argument</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>provisional
API</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A provisional API is one which
has been deliberately excluded from the standard librarys backwards
compatibility guarantees. While major changes to such interfaces are not
expected, as long as they are marked provisional, backwards incompatible
changes (up to and including removal of the interface) may occur if deemed
necessary by core developers. Such changes will not be made gratuitously  they
will occur only if serious fundamental flaws are uncovered that were missed
prior to the inclusion of the API.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Even for provisional APIs,
backwards incompatible changes are seen as a solution of last resort - every
attempt will still be made to find a backwards compatible resolution to any
identified problems.</p>

<p class=MsoNormal style='margin-left:25.4pt'>This process allows the standard
library to continue to evolve over time, without locking in problematic design
errors for extended periods of time. See <a
href="https://peps.python.org/pep-0411/"><b><span style='color:#377063;
text-decoration:none'>PEP 411</span></b></a><b><span style='color:#377063'> </span></b>for
more details.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>provisional
package</b></p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See <i><span style='color:#355F7C'>provisional API</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>Python
3000</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Nickname for the Python 3.x
release line (coined long ago when the release of version 3 was something in
the distant future.) This is also abbreviated Py3k.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>Pythonic</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An idea or piece of code which
closely follows the most common idioms of the Python language, rather than
implementing code using concepts common to other languages. For example, a
common idiom in Python is to loop over all elements of an iterable using a <span
style='font-size:9.0pt;line-height:108%'>for </span>statement. Many other
languages dont have this type of construct, so people unfamiliar with Python
sometimes use a numerical counter instead:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=41
src="Python%20Frequently%20Asked%20Questions_files/image215.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>As opposed to the cleaner, Pythonic method:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=41
src="Python%20Frequently%20Asked%20Questions_files/image216.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>qualified
name</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>A dotted name showing the path from a modules global
scope to a class, function or method defined in that module, as defined in <a
href="https://peps.python.org/pep-3155/"><b><span style='color:#377063;
text-decoration:none'>PEP 3155</span></b></a>. For top-level functions and
classes, the qualified name is the same as the objects name:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=184
src="Python%20Frequently%20Asked%20Questions_files/image217.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.3pt;
margin-left:25.4pt'>When used to refer to modules, the <i>fully qualified name </i>means
the entire dotted path to the module, including any parent packages, e.g. <span
style='font-size:9.0pt;line-height:108%'>email.mime.text</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=57
src="Python%20Frequently%20Asked%20Questions_files/image218.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>reference
count</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The number of references to an
object. When the reference count of an object drops to zero, it is deallocated.
Some objects are <i><span style='color:#355F7C'>immortal </span></i>and have
reference counts that are never modified, and therefore the objects are never
deallocated. Reference counting is generally not visible to Python code, but it
is a key element of the <i><span style='color:#355F7C'>CPython </span></i>implementation.
Programmers can call the <span style='font-size:9.0pt;line-height:108%'>sys.getrefcount()
</span>function to return the reference count for a particular object.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>regular
package</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A traditional <i><span
style='color:#355F7C'>package</span></i>, such as a directory containing an <span
style='font-size:9.0pt;line-height:108%'>__init__.py </span>file.</p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See also <i><span style='color:#355F7C'>namespace package</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>REPL</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An acronym for the
readevalprint loop, another name for the <i><span style='color:#355F7C'>interactive
</span></i>interpreter shell.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>__slots__</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A declaration inside a class that
saves memory by pre-declaring space for instance attributes and eliminating
instance dictionaries. Though popular, the technique is somewhat tricky to get
right and is best reserved for rare cases where there are large numbers of
instances in a memory-critical application.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>sequence</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An <i><span style='color:#355F7C'>iterable
</span></i>which supports efficient element access using integer indices via
the <span style='font-size:9.0pt;line-height:108%'>__getitem__() </span>special
method and defines a <span style='font-size:9.0pt;line-height:108%'>__len__() </span>method
that returns the length of the sequence. Some built-in sequence types are <span
style='font-size:9.0pt;line-height:108%'>list</span>, <span style='font-size:
9.0pt;line-height:108%'>str</span>, <span style='font-size:9.0pt;line-height:
108%'>tuple</span>, and <span style='font-size:9.0pt;line-height:108%'>bytes</span>.
Note that <span style='font-size:9.0pt;line-height:108%'>dict </span>also
supports <span style='font-size:9.0pt;line-height:108%'>__getitem__() </span>and
<span style='font-size:9.0pt;line-height:108%'>__len__()</span>, but is
considered a mapping rather than a sequence because the lookups use arbitrary <i><span
style='color:#355F7C'>hashable </span></i>keys rather than integers.</p>

<p class=MsoNormal style='margin-left:25.4pt'>The <span style='font-size:9.0pt;
line-height:108%'>collections.abc.Sequence </span>abstract base class defines a
much richer interface that goes beyond just <span style='font-size:9.0pt;
line-height:108%'>__getitem__() </span>and <span style='font-size:9.0pt;
line-height:108%'>__len__()</span>, adding <span style='font-size:9.0pt;
line-height:108%'>count()</span>, <span style='font-size:9.0pt;line-height:
108%'>index()</span>, <span style='font-size:9.0pt;line-height:108%'>__contains__()</span>,
and <span style='font-size:9.0pt;line-height:108%'>__reversed__()</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Types that implement this
expanded interface can be registered explicitly using <span style='font-size:
9.0pt;line-height:108%'>register()</span>. For more documentation on sequence
methods generally, see Common Sequence Operations.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>set
comprehension</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:.6pt;
margin-left:25.4pt'>A compact way to process all or part of the elements in an
iterable and return a set with the results. <span style='font-size:9.0pt;
line-height:108%'>results</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.05pt;margin-left:25.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>= {c for c in 'abracadabra' if c not
in 'abc'} </span>generates the set of strings <span style='font-size:9.0pt;
line-height:112%'>{'r', 'd'}</span>. See comprehensions.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>single
dispatch</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A form of <i><span
style='color:#355F7C'>generic function </span></i>dispatch where the
implementation is chosen based on the type of a single argument.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>slice</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An object usually containing a
portion of a <i><span style='color:#355F7C'>sequence</span></i>. A slice is
created using the subscript notation, <span style='font-size:9.0pt;line-height:
108%'>[] </span>with colons between numbers when several are given, such as in <span
style='font-size:9.0pt;line-height:108%'>variable_name[1:3:5]</span>. The
bracket (subscript) notation uses <span style='font-size:9.0pt;line-height:
108%'>slice </span>objects internally.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>soft
deprecated</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A soft deprecated API should not
be used in new code, but it is safe for already existing code to use it. The
API remains documented and tested, but will not be enhanced further.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Soft deprecation, unlike normal
deprecation, does not plan on removing the API and will not emit warnings.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.45pt;margin-left:24.65pt;text-align:left;line-height:110%'>See <a
href="https://peps.python.org/pep-0387/#soft-deprecation"><span
style='color:#377063;text-decoration:none'>PEP 387: Soft Deprecation</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>special
method</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A method that is called
implicitly by Python to execute a certain operation on a type, such as
addition. Such methods have names starting and ending with double underscores.
Special methods are documented in specialnames.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>statement</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A statement is part of a suite (a
block of code). A statement is either an <i><span style='color:#355F7C'>expression
</span></i>or one of several constructs with a keyword, such as <span
style='font-size:9.0pt;line-height:108%'>if</span>, <span style='font-size:
9.0pt;line-height:108%'>while </span>or <span style='font-size:9.0pt;
line-height:108%'>for</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>static
type checker</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An external tool that reads
Python code and analyzes it, looking for issues such as incorrect types. See
also <i><span style='color:#355F7C'>type hints </span></i>and the <span
style='font-size:9.0pt;line-height:108%'>typing </span>module.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>strong
reference</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>In Pythons C API, a strong
reference is a reference to an object which is owned by the code holding the
reference. The strong reference is taken by calling <span style='font-size:
9.0pt;line-height:108%'>Py_INCREF() </span>when the reference is created and
released with <span style='font-size:9.0pt;line-height:108%'>Py_DECREF() </span>when
the reference is deleted.</p>

<p class=MsoNormal style='margin-left:25.4pt'>The <span style='font-size:9.0pt;
line-height:108%'>Py_NewRef() </span>function can be used to create a strong
reference to an object. Usually, the <span style='font-size:9.0pt;line-height:
108%'>Py_DECREF() </span>function must be called on the strong reference before
exiting the scope of the strong reference, to avoid leaking one reference.</p>

<p class=MsoNormal align=left style='margin-left:24.65pt;text-align:left;
line-height:110%'>See also <i><span style='color:#355F7C'>borrowed reference</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>text
encoding</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A string in Python is a sequence
of Unicode code points (in range <span style='font-size:9.0pt;line-height:108%'>U+0000</span><span
style='font-size:9.0pt;line-height:108%'>U+10FFFF</span>). To store or transfer
a string, it needs to be serialized as a sequence of bytes.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Serializing a string into a
sequence of bytes is known as encoding, and recreating the string from the
sequence of bytes is known as decoding.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.75pt;text-indent:24.9pt;line-height:155%'>There are a variety of
different text serialization codecs, which are collectively referred to as
text encodings. <b>text file</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A <i><span style='color:#355F7C'>file
object </span></i>able to read and write <span style='font-size:9.0pt;
line-height:108%'>str </span>objects. Often, a text file actually accesses a
byte-oriented datastream and handles the <i><span style='color:#355F7C'>text
encoding </span></i>automatically. Examples of text files are files opened in
text mode (<span style='font-size:9.0pt;line-height:108%'>'r' </span>or <span
style='font-size:9.0pt;line-height:108%'>'w'</span>), <span style='font-size:
9.0pt;line-height:108%'>sys.stdin</span>, <span style='font-size:9.0pt;
line-height:108%'>sys.stdout</span>, and instances of <span style='font-size:
9.0pt;line-height:108%'>io.StringIO</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See also <i><span
style='color:#355F7C'>binary file </span></i>for a file object able to read and
write <i><span style='color:#355F7C'>bytes-like objects</span></i>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>triple-quoted
string</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A string which is bound by three
instances of either a quotation mark () or an apostrophe (). While they dont
provide any functionality not available with single-quoted strings, they are
useful for a number of reasons.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.75pt;text-indent:24.9pt;line-height:129%'>They allow you to
include unescaped single and double quotes within a string and they can span
multiple lines without the use of the continuation character, making them
especially useful when writing docstrings. <b>type</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>The type of a Python object
determines what kind of object it is; every object has a type. An objects type
is accessible as its <span style='font-size:9.0pt;line-height:108%'>__class__ </span>attribute
or can be retrieved with <span style='font-size:9.0pt;line-height:108%'>type(obj)</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>type
alias</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A synonym for a type, created by
assigning the type to an identifier.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>Type aliases are useful for simplifying <i><span
style='color:#355F7C'>type hints</span></i>. For example:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=57
src="Python%20Frequently%20Asked%20Questions_files/image219.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>could be made more readable like this:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.05pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=73
src="Python%20Frequently%20Asked%20Questions_files/image220.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>See <span style='font-size:9.0pt;
line-height:108%'>typing </span>and <a href="https://peps.python.org/pep-0484/"><b><span
style='color:#377063;text-decoration:none'>PEP 484</span></b></a>, which
describe this functionality.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>type
hint</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An <i><span style='color:#355F7C'>annotation
</span></i>that specifies the expected type for a variable, a class attribute,
or a function parameter or return value.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Type hints are optional and are
not enforced by Python but they are useful to <i><span style='color:#355F7C'>static
type checkers</span></i>. They can also aid IDEs with code completion and
refactoring.</p>

<p class=MsoNormal style='margin-left:25.4pt'>Type hints of global variables,
class attributes, and functions, but not local variables, can be accessed using
<span style='font-size:9.0pt;line-height:108%'>typing.get_type_hints()</span>.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See <span style='font-size:9.0pt;
line-height:108%'>typing </span>and <a href="https://peps.python.org/pep-0484/"><b><span
style='color:#377063;text-decoration:none'>PEP 484</span></b></a>, which
describe this functionality.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>universal
newlines</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A manner of interpreting text
streams in which all of the following are recognized as ending a line: the Unix
end-of-line convention <span style='font-size:9.0pt;line-height:108%'>'\n'</span>,
the Windows convention <span style='font-size:9.0pt;line-height:108%'>'\r\n'</span>,
and the old Macintosh convention <span style='font-size:9.0pt;line-height:108%'>'\r'</span>.
See <a href="https://peps.python.org/pep-0278/"><b><span style='color:#377063;
text-decoration:none'>PEP 278</span></b></a><b><span style='color:#377063'> </span></b>and
<a href="https://peps.python.org/pep-3116/"><b><span style='color:#377063;
text-decoration:none'>PEP 3116</span></b></a>, as well as <span
style='font-size:9.0pt;line-height:108%'>bytes.splitlines() </span>for an
additional use.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>variable
annotation</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>An <i><span style='color:#355F7C'>annotation
</span></i>of a variable or a class attribute.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>When annotating a variable or a class attribute, assignment
is optional:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:10.0pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=41
src="Python%20Frequently%20Asked%20Questions_files/image221.gif"></span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:25.4pt'>Variable annotations are usually used for <i><span
style='color:#355F7C'>type hints</span></i>: for example this variable is
expected to take <span style='font-size:9.0pt;line-height:108%'>int </span>values:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:9.95pt;margin-left:21.5pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=578 height=25
src="Python%20Frequently%20Asked%20Questions_files/image222.gif"></span></p>

<p class=MsoNormal style='margin-left:25.4pt'>Variable annotation syntax is
explained in section annassign.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See <i><span style='color:#355F7C'>function
annotation</span></i>, <a href="https://peps.python.org/pep-0484/"><b><span
style='color:#377063;text-decoration:none'>PEP484</span></b></a><b><span
style='color:#377063'> </span></b>and <a
href="https://peps.python.org/pep-0526/"><b><span style='color:#377063;
text-decoration:none'>PEP526</span></b></a>, which describe this functionality.
Also see annotations-howto for best practices on working with annotations.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>virtual
environment</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A cooperatively isolated runtime
environment that allows Python users and applications to install and upgrade
Python distribution packages without interfering with the behaviour of other
Python applications running on the same system.</p>

<p class=MsoNormal style='margin-left:25.4pt'>See also <span style='font-size:
9.0pt;line-height:108%'>venv</span>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>virtual
machine</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>A computer defined entirely in
software. Pythons virtual machine executes the <i><span style='color:#355F7C'>bytecode
</span></i>emitted by the bytecode compiler.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><b>Zen
of Python</b></p>

<p class=MsoNormal style='margin-left:25.4pt'>Listing of Python design
principles and philosophies that are helpful in understanding and using the
language. The listing can be found by typing <span style='font-size:9.0pt;
line-height:108%'>import this</span> at the interactive prompt.<br clear=all
style='page-break-before:always'>
</p>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:107%'>&nbsp;</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection18>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>APPENDIX</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>B</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 136779"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:38.65pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>ABOUT
THIS DOCUMENTATION</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Pythons documentation is
generated from <a href="https://docutils.sourceforge.io/rst.html"><span
style='color:#377063;text-decoration:none'>reStructuredText</span></a><span
style='color:#377063'> </span>sources using <a
href="https://www.sphinx-doc.org/"><span style='color:#377063;text-decoration:
none'>Sphinx</span></a>, a documentation generator originally created for
Python and now maintained as an independent project.</p>

<p class=MsoNormal style='margin-left:-.25pt'>

<table cellpadding=0 cellspacing=0>
 <tr>
  <td width=96 height=0></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=603 height=1
  src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></td>
 </tr>
</table>

<br clear=ALL>
Development of the documentation and its toolchain is an entirely volunteer
effort, just like Python itself. If you want to contribute, please take a look
at the reporting-bugs page for information on how to do so. New volunteers are
always welcome!</p>

<p class=MsoNormal style='margin-left:-.25pt'>Many thanks go to:</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:6.0pt;
margin-left:24.9pt;text-indent:-8.95pt;line-height:108%'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>Fred L. Drake, Jr., the creator of the original Python
documentation toolset and author of much of the content;</p>

<p class=MsoNormal style='margin-left:24.9pt;text-indent:-8.95pt'><span
style='line-height:108%'><span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;
</span></span>the <a href="https://docutils.sourceforge.io/"><span
style='color:#377063;text-decoration:none'>Docutils</span></a><span
style='color:#377063'> </span>project for creating reStructuredText and the
Docutils suite;</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:21.75pt;
margin-left:24.9pt;text-indent:-8.95pt'><span style='line-height:108%'><span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span>Fredrik
Lundh for his Alternative Python Reference project from which Sphinx got many
good ideas.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>B.1 Contributors to the Python documentation</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Many people have contributed to
the Python language, the Python standard library, and the Python documentation.
See <a href="https://github.com/python/cpython/tree/3.13/Misc/ACKS"><span
style='color:#377063;text-decoration:none'>Misc/ACKS</span></a><span
style='color:#377063'> </span>in the Python source distribution for a partial
list of contributors.</p>

<p class=MsoNormal style='margin-left:-.25pt'>It is only with the input and
contributions of the Python community that Python has such wonderful
documentation  Thank You!</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:267.35pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>Appendix B. About this documentation
APPENDIX</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>C</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 144661"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:44.7pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>HISTORY
AND LICENSE</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>C.1 History of the software</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python was created in the early
1990s by Guido van Rossum at Stichting Mathematisch Centrum (CWI, see <a
href="https://www.cwi.nl/"><span style='color:#377063;text-decoration:none'>https:
</span></a><a href="https://www.cwi.nl/"><span style='color:#377063;text-decoration:
none'>//www.cwi.nl</span></a><a href="https://www.cwi.nl/"><span
style='color:black;text-decoration:none'>)</span></a> in the Netherlands as a
successor of a language called ABC. Guido remains Pythons principal author,
although it includes many contributions from others.</p>

<p class=MsoNormal style='margin-left:-.25pt'>In 1995, Guido continued his work
on Python at the Corporation for National Research Initiatives (CNRI, see <a
href="https://www.cnri.reston.va.us/"><span style='color:#377063;text-decoration:
none'>https: </span></a><a href="https://www.cnri.reston.va.us/"><span
style='color:#377063;text-decoration:none'>//www.cnri.reston.va.us</span></a>)
in Reston, Virginia where he released several versions of the software.</p>

<p class=MsoNormal style='margin-left:-.25pt'>In May 2000, Guido and the Python
core development team moved to BeOpen.com to form the BeOpen PythonLabs team.
In October of the same year, the PythonLabs team moved to Digital Creations,
which became Zope Corporation. In 2001, the Python Software Foundation (PSF,
see <a href="https://www.python.org/psf/"><span style='color:#377063;
text-decoration:none'>https://www.python.org/psf/</span></a>) was formed, a
non-profit organization created specifically to own Python-related Intellectual
Property. Zope Corporation was a sponsoring member of the PSF.</p>

<p class=MsoNormal style='margin-left:-.25pt'>

<table cellpadding=0 cellspacing=0>
 <tr>
  <td width=96 height=0></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=603 height=1
  src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></td>
 </tr>
</table>

<br clear=ALL>
All Python releases are Open Source (see <a href="https://opensource.org/"><span
style='color:#377063;text-decoration:none'>https://opensource.org</span></a><span
style='color:#377063'> </span>for the Open Source Definition). Historically,
most, but not all, Python releases have also been GPL-compatible; the table
below summarizes the various releases.</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=473
 style='width:355.0pt;margin-left:48.15pt;border-collapse:collapse'>
 <tr style='height:16.3pt'>
  <td width=89 valign=top style='width:66.4pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.75pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-family:"Calibri",sans-serif'>Release</span></p>
  </td>
  <td width=90 valign=top style='width:67.15pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.75pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>Derived
  from</span></p>
  </td>
  <td width=73 valign=top style='width:55.1pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.75pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>Year</span></p>
  </td>
  <td width=85 valign=top style='width:63.5pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.75pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>Owner</span></p>
  </td>
  <td width=137 valign=top style='width:102.85pt;border-top:solid #DBDBDB 3.0pt;
  border-left:none;border-bottom:solid #EBEBEB 3.0pt;border-right:none;
  background:#DBDBDB;padding:.4pt 5.75pt 0in 6.0pt;height:16.3pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'><span style='font-family:"Calibri",sans-serif'>GPL-compatible?
  (1)</span></p>
  </td>
 </tr>
 <tr style='height:14.55pt'>
  <td width=89 valign=top style='width:66.4pt;border:none;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.0pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>0.9.0 thru 1.2</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;border:none;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.0pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>n/a</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;border:none;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.0pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>1991-1995</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;border:none;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.0pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>CWI</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;border:none;background:#EBEBEB;
  padding:.4pt 5.75pt 0in 6.0pt;height:14.55pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>yes</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>1.3 thru 1.5.2</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>1.2</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>1995-1999</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>CNRI</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#FAFAFA;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>yes</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>1.6</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>1.5.2</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2000</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>CNRI</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#EBEBEB;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>no</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>2.0</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>1.6</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2000</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>BeOpen.com</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#FAFAFA;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>no</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>1.6.1</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>1.6</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2001</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>CNRI</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#EBEBEB;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>yes (2)</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>2.1</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2.0+1.6.1</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2001</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>PSF</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#FAFAFA;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>no</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>2.0.1</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2.0+1.6.1</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2001</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>PSF</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#EBEBEB;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>yes</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>2.1.1</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2.1+2.0.1</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2001</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>PSF</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#FAFAFA;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>yes</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>2.1.2</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2.1.1</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2002</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>PSF</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#EBEBEB;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>yes</p>
  </td>
 </tr>
 <tr style='height:11.95pt'>
  <td width=89 valign=top style='width:66.4pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>2.1.3</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2.1.2</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2002</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;background:#FAFAFA;padding:.4pt 5.75pt 0in 6.0pt;
  height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>PSF</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;background:#FAFAFA;padding:
  .4pt 5.75pt 0in 6.0pt;height:11.95pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>yes</p>
  </td>
 </tr>
 <tr style='height:13.15pt'>
  <td width=89 valign=top style='width:66.4pt;border:none;border-bottom:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;height:13.15pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:0in;margin-left:.1pt;text-align:left;text-indent:0in;
  line-height:107%'>2.2 and above</p>
  </td>
  <td width=90 valign=top style='width:67.15pt;border:none;border-bottom:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;height:13.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2.1.1</p>
  </td>
  <td width=73 valign=top style='width:55.1pt;border:none;border-bottom:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;height:13.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>2001-now</p>
  </td>
  <td width=85 valign=top style='width:63.5pt;border:none;border-bottom:solid black 1.0pt;
  background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;height:13.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>PSF</p>
  </td>
  <td width=137 valign=top style='width:102.85pt;border:none;border-bottom:
  solid black 1.0pt;background:#EBEBEB;padding:.4pt 5.75pt 0in 6.0pt;
  height:13.15pt'>
  <p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
  0in;line-height:107%'>yes</p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:8.7pt;margin-left:7.95pt;text-align:left;line-height:107%'><span
style='color:#145DEA'>® </span><b>Note</b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.5pt;margin-bottom:5.65pt;
margin-left:.45in;text-indent:-16.6pt'><span style='line-height:108%'>(1)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895814144'><span style='left:0px;position:
absolute;left:0px;top:-51873px;width:602px;height:1px'><img width=602 height=1
src="Python%20Frequently%20Asked%20Questions_files/image223.gif"></span></span>GPL-compatible
doesnt mean that were distributing Python under the GPL. All Python licenses,
unlike the GPL, let you distribute a modified version without making your
changes open source. The GPLcompatible licenses make it possible to combine
Python with other software that is released under the GPL; the others dont.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:7.5pt;margin-bottom:16.85pt;
margin-left:.45in;text-indent:-16.6pt'><span style='line-height:108%'>(2)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span>According to
Richard Stallman, 1.6.1 is not GPL-compatible, because its license has a choice
of law clause. According to CNRI, however, Stallmans lawyer has told CNRIs
lawyer that 1.6.1 is not incompatible with the GPL.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Thanks to the many outside
volunteers who have worked under Guidos direction to make these releases
possible.</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection19>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>C.2 Terms and conditions for accessing or otherwise using Python</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python software and documentation
are licensed under the Python Software Foundation License Version 2.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Starting with Python 3.8.6,
examples, recipes, and other code in the documentation are dual licensed under
the PSF License Version 2 and the <i><span style='color:#355F7C'>Zero-Clause
BSD license</span></i>.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.65pt;
margin-left:-.25pt'>Some software incorporated into Python is under different
licenses. The licenses are listed with code falling under that license. See <i><span
style='color:#355F7C'>Licenses and Acknowledgements for Incorporated Software </span></i>for
an incomplete list of these licenses.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:6.75pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.2.1 PYTHON SOFTWARE FOUNDATION LICENSE VERSION 2</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>This LICENSE AGREEMENT is between the
Python Software Foundation (&quot;PSF&quot;), andthe Individual or Organization
(&quot;Licensee&quot;) accessing and otherwise using this software
(&quot;Python&quot;) in source or binary form and its associated documentation.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895813120'><span style='left:0px;position:
absolute;left:-5px;top:-52253px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image224.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Subject to the terms and conditions of
this License Agreement, PSF herebygrants Licensee a nonexclusive, royalty-free,
world-wide license to reproduce, analyze, test, perform and/or display
publicly, prepare derivative works, distribute, and otherwise use Python alone
or in any derivative version, provided, however, that PSF's License Agreement
and PSF's notice of copyright, i.e., &quot;Copyright © 2001-2024 Python
Software Foundation; All Rights Reserved&quot; are retained in Python alone or
in any derivative version prepared by Licensee.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>In the event Licensee prepares a
derivative work that is based on orincorporates Python or any part thereof, and
wants to make the derivative work available to others as provided herein, then
Licensee hereby agrees to include in any such work a brief summary of the
changes made to</span><span style='font-size:9.0pt;line-height:112%;color:red'>&#9251;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:14.8pt;margin-left:-.25pt;text-align:left;line-height:112%'><i><span
style='font-size:5.0pt;line-height:112%;font-family:"Cambria",serif;color:red'>,</span></i><sub><span
style='font-size:7.5pt;line-height:112%;font-family:"Cambria",serif;color:red'>&#8594;</span></sub><span
style='font-size:9.0pt;line-height:112%'>Python.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>PSF is making Python available to
Licensee on an &quot;AS IS&quot; basis.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PSF MAKES NO REPRESENTATIONS OR
WARRANTIES, EXPRESS OR IMPLIED. BY WAY OF</span></p>

<p class=MsoNormal align=center style='margin-top:0in;margin-right:12.35pt;
margin-bottom:.85pt;margin-left:8.05pt;text-align:center;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>EXAMPLE, BUT NOT LIMITATION, PSF MAKES
NO AND DISCLAIMS ANY REPRESENTATION OR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>WARRANTY OF MERCHANTABILITY OR FITNESS
FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF PYTHON WILL NOT INFRINGE ANY
THIRD PARTY RIGHTS.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>PSF SHALL NOT BE LIABLE TO LICENSEE OR
ANY OTHER USERS OF PYTHON</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:20.9pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>FOR ANY INCIDENTAL, SPECIAL, OR
CONSEQUENTIAL DAMAGES OR LOSS AS A RESULT OF MODIFYING, DISTRIBUTING, OR
OTHERWISE USING PYTHON, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE
POSSIBILITY THEREOF.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>This License Agreement will
automatically terminate upon a material breach ofits terms and conditions.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Nothing in this License Agreement
shall be deemed to create any relationshipof agency, partnership, or joint
venture between PSF and Licensee. This License Agreement does not grant
permission to use PSF trademarks or trade name in a trademark sense to endorse
or promote products or services of Licensee, or any third party.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>By copying, installing or otherwise
using Python, Licensee agreesto be bound by the terms and conditions of this
License Agreement.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.2.2 BEOPEN.COM LICENSE AGREEMENT FOR PYTHON 2.0</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.2pt;
margin-left:-.25pt'>BEOPEN PYTHON OPEN SOURCE LICENSE AGREEMENT VERSION 1</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>This LICENSE AGREEMENT is between
BeOpen.com (&quot;BeOpen&quot;), having an office at</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.15pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>160 Saratoga Avenue, Santa Clara, CA
95051, and the Individual or Organization (&quot;Licensee&quot;) accessing and
otherwise using this software in source or binary form and its associated
documentation (&quot;the Software&quot;).</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Subject to the terms and conditions of
this BeOpen Python License Agreement,BeOpen hereby grants Licensee a
non-exclusive, royalty-free, world-wide license to reproduce, analyze, test,
perform and/or display publicly, prepare derivative works, distribute, and
otherwise use the Software alone or in any derivative version, provided,
however, that the BeOpen Python License is retained in the Software, alone or
in any derivative version prepared by Licensee.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>BeOpen is making the Software
available to Licensee on an &quot;AS IS&quot; basis.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>BEOPEN MAKES NO REPRESENTATIONS OR
WARRANTIES, EXPRESS OR IMPLIED. BY WAY OF</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>EXAMPLE, BUT NOT LIMITATION, BEOPEN
MAKES NO AND DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR
FITNESS FOR ANY PARTICULAR PURPOSE OR THAT THE USE OF THE SOFTWARE WILL NOT
INFRINGE ANY THIRD PARTY RIGHTS.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>BEOPEN SHALL NOT BE LIABLE TO LICENSEE
OR ANY OTHER USERS OF THE SOFTWARE FOR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ANY INCIDENTAL, SPECIAL, OR
CONSEQUENTIAL DAMAGES OR LOSS AS A RESULT OF USING, MODIFYING OR DISTRIBUTING
THE SOFTWARE, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY
THEREOF.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>This License Agreement will
automatically terminate upon a material breach ofits terms and conditions.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895812096'><span style='left:0px;position:
absolute;left:-5px;top:-53117px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image225.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>This License Agreement shall be
governed by and interpreted in all respectsby the law of the State of
California, excluding conflict of law provisions. Nothing in this License
Agreement shall be deemed to create any relationship of agency, partnership, or
joint venture between BeOpen and Licensee. This License Agreement does not
grant permission to use BeOpen trademarks or trade names in a trademark sense
to endorse or promote products or services of Licensee, or any third party. As
an exception, the &quot;BeOpen Python&quot; logos available at
http://www.pythonlabs.com/logos.html may be used according to the permissions
granted on that web page.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:23.95pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>By copying, installing or otherwise
using the software, Licensee agrees to bebound by the terms and conditions of
this License Agreement.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:6.75pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.2.3 CNRI LICENSE AGREEMENT FOR PYTHON 1.6.1</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>This LICENSE AGREEMENT is between the
Corporation for National Research</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Initiatives, having an office at 1895
Preston White Drive, Reston, VA 20191 (&quot;CNRI&quot;), and the Individual or
Organization (&quot;Licensee&quot;) accessing and otherwise using Python 1.6.1
software in source or binary form and its associated documentation.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895811072'><span style='left:0px;position:
absolute;left:-5px;top:-53359px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image226.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Subject to the terms and conditions of
this License Agreement, CNRI herebygrants Licensee a nonexclusive,
royalty-free, world-wide license to reproduce, analyze, test, perform and/or
display publicly, prepare derivative works, distribute, and otherwise use
Python 1.6.1 alone or in any derivative version, provided, however, that CNRI's
License Agreement and CNRI's notice of copyright, i.e., &quot;Copyright ©
1995-2001 Corporation for National Research Initiatives; All</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:11.65pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continues on next page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:0in;text-align:left;text-indent:0in;line-height:
107%'><span style='font-size:11.0pt;line-height:107%;font-family:"Calibri",sans-serif'><img
border=0 width=603 height=1 id="Group 138506"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>C.2. Terms and conditions for
accessing or otherwise using Python</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Rights Reserved&quot; are retained in
Python 1.6.1 alone or in any derivative version prepared by Licensee.
Alternately, in lieu of CNRI's License Agreement, Licensee may substitute the
following text (omitting the quotes): &quot;Python 1.6.1 is made available
subject to the terms and conditions in CNRI's License Agreement. This Agreement
together with Python 1.6.1 may be located on the internet using the following
unique, persistent identifier (known as a handle): 1895.22/1013. This Agreement
may also be obtained from a proxy server on the internet using the following
URL: http://hdl.handle.net/1895.22/1013&quot;.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>In the event Licensee prepares a
derivative work that is based on orincorporates Python 1.6.1 or any part
thereof, and wants to make the derivative work available to others as provided
herein, then Licensee hereby agrees to include in any such work a brief summary
of the changes made to Python 1.6.1.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>4.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>CNRI is making Python 1.6.1 available
to Licensee on an &quot;AS IS&quot; basis. CNRI</span></p>

<p class=MsoNormal align=center style='margin-top:0in;margin-right:1.6pt;
margin-bottom:.85pt;margin-left:8.05pt;text-align:center;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>MAKES NO REPRESENTATIONS OR
WARRANTIES, EXPRESS OR IMPLIED. BY WAY OF EXAMPLE,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>BUT NOT LIMITATION, CNRI MAKES NO AND
DISCLAIMS ANY REPRESENTATION OR WARRANTY OF MERCHANTABILITY OR FITNESS FOR ANY
PARTICULAR PURPOSE OR THAT THE USE OF PYTHON 1.6.1 WILL NOT INFRINGE ANY THIRD
PARTY RIGHTS.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>5.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>CNRI SHALL NOT BE LIABLE TO LICENSEE
OR ANY OTHER USERS OF PYTHON 1.6.1 FORANY INCIDENTAL, SPECIAL, OR CONSEQUENTIAL
DAMAGES OR LOSS AS A RESULT OF MODIFYING, DISTRIBUTING, OR OTHERWISE USING
PYTHON 1.6.1, OR ANY DERIVATIVE THEREOF, EVEN IF ADVISED OF THE POSSIBILITY
THEREOF.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>This License Agreement will
automatically terminate upon a material breach ofits terms and conditions.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>This License Agreement shall be
governed by the federal intellectual propertylaw of the United States,
including without limitation the federal copyright law, and, to the extent such
U.S. federal law does not apply, by the law of the Commonwealth of Virginia,
excluding Virginia's conflict of law provisions.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895810048'><span style='left:0px;position:
absolute;left:-5px;top:-53904px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image227.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Notwithstanding the foregoing, with
regard to derivative works based on Python 1.6.1 that incorporate non-separable
material that was previously distributed under the GNU General Public License
(GPL), the law of the Commonwealth of Virginia shall govern this License
Agreement only as to issues arising under or with respect to Paragraphs 4, 5,
and 7 of this License Agreement. Nothing in this License Agreement shall be
deemed to create any relationship of agency, partnership, or joint venture
between CNRI and Licensee. This License Agreement does not grant permission to
use CNRI trademarks or trade name in a trademark sense to endorse or promote
products or services of Licensee, or any third party.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:23.95pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>By clicking on the &quot;ACCEPT&quot;
button where indicated, or by copying, installingor otherwise using Python
1.6.1, Licensee agrees to be bound by the terms and conditions of this License
Agreement.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:6.75pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.2.4 CWI LICENSE AGREEMENT FOR PYTHON 0.9.0 THROUGH 1.2</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:10.15pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright © 1991 - 1995, Stichting
Mathematisch Centrum Amsterdam, The Netherlands. All rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:15.55pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895809024'><span style='left:0px;position:
absolute;left:-5px;top:-54146px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image228.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission to use, copy, modify, and
distribute this software and its documentation for any purpose and without fee
is hereby granted, provided that the above copyright notice appear in all
copies and that both that copyright</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continues on next page)</span></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection20>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:15.5pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895808000'><span style='left:0px;position:
absolute;left:-5px;top:-54193px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image229.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>notice and this permission notice
appear in supporting documentation, and that the name of Stichting Mathematisch
Centrum or CWI not be used in advertising or publicity pertaining to
distribution of the software without specific, written prior permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>STICHTING MATHEMATISCH CENTRUM
DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>SOFTWARE, INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>EVENT SHALL STICHTING MATHEMATISCH
CENTRUM BE LIABLE FOR ANY SPECIAL, INDIRECT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>OR CONSEQUENTIAL DAMAGES OR ANY
DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>DATA OR PROFITS, WHETHER IN AN ACTION
OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:23.95pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ACTION, ARISING OUT OF OR IN
CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:6.5pt;margin-left:33.1pt;text-align:left;text-indent:-33.85pt;
line-height:103%'><b><span style='font-size:12.0pt;line-height:103%;font-family:
"Calibri",sans-serif;color:#20435C'>C.2.5 ZERO-CLAUSE BSD LICENSE FOR CODE IN
THE PYTHON DOCUMENTATION</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:26.3pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Permission to use, copy, modify,
and/or distribute this software for any purpose with or without fee is hereby
granted.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THE SOFTWARE IS PROVIDED &quot;AS
IS&quot; AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>REGARD TO THIS SOFTWARE INCLUDING ALL
IMPLIED WARRANTIES OF MERCHANTABILITY</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>AND FITNESS. IN NO EVENT SHALL THE
AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>INDIRECT, OR CONSEQUENTIAL DAMAGES OR
ANY DAMAGES WHATSOEVER RESULTING FROM</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:15.5pt;
margin-bottom:29.1pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895806976'><span style='left:0px;position:
absolute;left:-5px;top:-54505px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image230.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>LOSS OF USE, DATA OR PROFITS, WHETHER
IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:5.55pt;margin-left:-.25pt;text-align:left;line-height:107%'><b><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3 Licenses and Acknowledgements for Incorporated Software</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:16.25pt;
margin-left:-.25pt'>This section is an incomplete, but growing list of licenses
and acknowledgements for third-party software incorporated in the Python
distribution.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.1 Mersenne Twister</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.25pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>_random </span>C
extension underlying the <span style='font-size:9.0pt;line-height:108%'>random </span>module
includes code based on a download from <a
href="http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html"><span
style='color:#377063;text-decoration:none'>http://www.math. </span></a><a
href="http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html"><span
style='color:#377063;text-decoration:none'>sci.hiroshima-u.ac.jp/~m-mat/MT/MT2002/emt19937ar.html</span></a>.
The following are the verbatim comments from the original code:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>A C-program for MT19937, with
initialization improved 2002/1/26. Coded by Takuji Nishimura and Makoto
Matsumoto.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:107.0pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Before using, initialize the state by
using init_genrand(seed) or init_by_array(init_key, key_length).</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:85.45pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (C) 1997 - 2002, Makoto
Matsumoto and Takuji Nishimura, All rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895805952'><span style='left:0px;position:
absolute;left:-5px;top:-54837px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image231.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Redistribution and use in source and
binary forms, with or without modification, are permitted provided that the
following conditions are met:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:42.45pt;
margin-bottom:12.25pt;margin-left:21.55pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions of source code must
retain the above copyrightnotice, this list of conditions and the following
disclaimer.</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continues on next page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:42.45pt;
margin-bottom:12.2pt;margin-left:21.55pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895804928'><span style='left:0px;position:
absolute;left:-5px;top:-54933px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image232.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions in binary form must
reproduce the above copyrightnotice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided with the
distribution.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:42.45pt;
margin-bottom:12.2pt;margin-left:21.55pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>The names of its contributors may not
be used to endorse or promoteproducts derived from this software without
specific prior written permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE IS PROVIDED BY THE
COPYRIGHT HOLDERS AND CONTRIBUTORS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>&quot;AS IS&quot; AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT OWNER OR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
INDIRECT, INCIDENTAL, SPECIAL,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PROCUREMENT OF SUBSTITUTE GOODS OR
SERVICES; LOSS OF USE, DATA, OR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PROFITS; OR BUSINESS INTERRUPTION)
HOWEVER CAUSED AND ON ANY THEORY OF</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:47.8pt;
margin-bottom:24.15pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LIABILITY, WHETHER IN CONTRACT, STRICT
LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Any feedback is very welcome.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:117.75pt;
margin-bottom:23.95pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.2 Sockets</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.6pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>socket </span>module
uses the functions, <span style='font-size:9.0pt;line-height:108%'>getaddrinfo()</span>,
and <span style='font-size:9.0pt;line-height:108%'>getnameinfo()</span>, which
are coded in separate source files from the WIDE Project, <a
href="https://www.wide.ad.jp/"><span style='color:#377063;text-decoration:none'>https://www.wide.ad.jp/</span></a>.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:144.65pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (C) 1995, 1996, 1997, and
1998 WIDE Project. All rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Redistribution and use in source and
binary forms, with or without modification, are permitted provided that the
following conditions are met:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:63.95pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions of source code must
retain the above copyrightnotice, this list of conditions and the following
disclaimer.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:63.95pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions in binary form must
reproduce the above copyrightnotice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided with the
distribution.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:63.95pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Neither the name of the project nor
the names of its contributorsmay be used to endorse or promote products derived
from this software without specific prior written permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE IS PROVIDED BY THE
PROJECT AND CONTRIBUTORS &quot;AS IS&quot; AND</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ARE DISCLAIMED. IN NO EVENT SHALL THE
PROJECT OR CONTRIBUTORS BE LIABLE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895803904'><span style='left:0px;position:
absolute;left:-5px;top:-55700px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image233.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.3 Asynchronous socket services</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.95pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>test.support.asynchat
</span>and <span style='font-size:9.0pt;line-height:108%'>test.support.asyncore
</span>modules contain the following notice:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright 1996 by Sam Rushing</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:1.8in;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>All Rights Reserved</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:90.85pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895802880'><span style='left:0px;position:
absolute;left:-5px;top:-55854px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image234.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission to use, copy, modify, and
distribute this software and its documentation for any purpose and without fee
is hereby granted, provided that the above copyright notice appear in all
copies and that both that copyright notice and this permission notice appear in
supporting documentation, and that the name of Sam Rushing not be used in
advertising or publicity pertaining to distribution of the software without
specific, written prior permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>SAM RUSHING DISCLAIMS ALL WARRANTIES
WITH REGARD TO THIS SOFTWARE,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>INCLUDING ALL IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS, IN</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>NO EVENT SHALL SAM RUSHING BE LIABLE
FOR ANY SPECIAL, INDIRECT OR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>CONSEQUENTIAL DAMAGES OR ANY DAMAGES
WHATSOEVER RESULTING FROM LOSS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:90.85pt;
margin-bottom:23.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>OF USE, DATA OR PROFITS, WHETHER IN AN
ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.4 Cookie management</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.9pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>http.cookies
</span>module contains the following notice:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright 2000 by Timothy O'Malley
&lt;timo@alum.mit.edu&gt;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:81.2pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>All Rights Reserved</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:85.45pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895801856'><span style='left:0px;position:
absolute;left:-5px;top:-56187px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image235.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission to use, copy, modify, and
distribute this software and its documentation for any purpose and without fee
is hereby granted, provided that the above copyright notice appear in all
copies and that both that copyright notice and this permission notice appear in
supporting documentation, and that the name of Timothy O'Malley not be used in
advertising or publicity pertaining to distribution of the software without
specific, written prior permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Timothy O'Malley DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>SOFTWARE, INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>AND FITNESS, IN NO EVENT SHALL Timothy
O'Malley BE LIABLE FOR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ANY SPECIAL, INDIRECT OR CONSEQUENTIAL
DAMAGES OR ANY DAMAGES</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>WHATSOEVER RESULTING FROM LOSS OF USE,
DATA OR PROFITS,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:96.2pt;
margin-bottom:23.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>WHETHER IN AN ACTION OF CONTRACT,
NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE
USE OR PERFORMANCE OF THIS SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.5 Execution tracing</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.85pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>trace </span>module
contains the following notice:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>portions copyright 2001, Autonomous
Zones Industries, Inc., all rights...</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:69.3pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895800832'><span style='left:0px;position:
absolute;left:-5px;top:-56488px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image236.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>err... reserved and offered to the
public under the terms of the Python 2.2 license.</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continues on next page)</span></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection21>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:3.9pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continued from previous page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:241.45pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Author: Zooko O'Whielacronx
http://zooko.com/ mailto:zooko@zooko.com</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright 2000, Mojam Media, Inc., all
rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Author: Skip Montanaro</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright 1999, Bioreason, Inc., all
rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Author: Andrew Dalke</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright 1995-1997, Automatrix, Inc.,
all rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Author: Skip Montanaro</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:24.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright 1991-1995, Stichting
Mathematisch Centrum, all rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:23.95pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895799808'><span style='left:0px;position:
absolute;left:-5px;top:-56768px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image237.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission to use, copy, modify, and
distribute this Python software and its associated documentation for any
purpose without fee is hereby granted, provided that the above copyright notice
appears in all copies, and that both that copyright notice and this permission
notice appear in supporting documentation, and that the name of neither
Automatrix, Bioreason or Mojam Media be used in advertising or publicity
pertaining to distribution of the software without specific, written prior
permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.6 UUencode and UUdecode functions</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.65pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>uu </span>codec
contains the following notice:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright 1994 by Lance Ellinghouse</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Cathedral City, California Republic,
United States of America.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:124.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>All Rights Reserved</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895798784'><span style='left:0px;position:
absolute;left:-5px;top:-56972px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image238.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission to use, copy, modify, and
distribute this software and its documentation for any purpose and without fee
is hereby granted, provided that the above copyright notice appear in all
copies and that both that copyright notice and this permission notice appear in
supporting documentation, and that the name of Lance Ellinghouse not be used in
advertising or publicity pertaining to distribution of the software without
specific, written prior permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LANCE ELLINGHOUSE DISCLAIMS ALL
WARRANTIES WITH REGARD TO</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE, INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>FITNESS, IN NO EVENT SHALL LANCE
ELLINGHOUSE CENTRUM BE LIABLE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>FOR ANY SPECIAL, INDIRECT OR
CONSEQUENTIAL DAMAGES OR ANY DAMAGES</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>WHATSOEVER RESULTING FROM LOSS OF USE,
DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Modified by Jack Jansen, CWI, July
1995:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:39.75pt;
margin-bottom:.45pt;margin-left:10.75pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>-<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Use binascii module to do the actual
line-by-line conversion between ascii and binary. This results in a 1000-fold
speedup. The C version is still 5 times faster, though.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:39.75pt;
margin-bottom:.45pt;margin-left:10.75pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>-<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Arguments more compliant with Python
standard</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.7 XML Remote Procedure Calls</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.7pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>xmlrpc.client
</span>module contains the following notice:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:22.0pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>The XML-RPC client interface is</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 1999-2002 by Secret Labs
AB</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 1999-2002 by Fredrik
Lundh</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>By obtaining, using, and/or copying
this software and/or its associated documentation, you agree that you have
read, understood, and will comply with the following terms and conditions:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:85.45pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895797760'><span style='left:0px;position:
absolute;left:-5px;top:-57424px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image233.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission to use, copy, modify, and
distribute this software and its associated documentation for any purpose and
without fee is hereby granted, provided that the above copyright notice appears
in all copies, and that both that copyright notice and this permission notice
appear in supporting documentation, and that the name of Secret Labs AB or the
author not be used in advertising or publicity pertaining to distribution of
the software without specific, written prior permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>SECRET LABS AB AND THE AUTHOR
DISCLAIMS ALL WARRANTIES WITH REGARD</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>TO THIS SOFTWARE, INCLUDING ALL
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL SECRET
LABS AB OR THE AUTHOR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>BE LIABLE FOR ANY SPECIAL, INDIRECT OR
CONSEQUENTIAL DAMAGES OR ANY</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>DAMAGES WHATSOEVER RESULTING FROM LOSS
OF USE, DATA OR PROFITS,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:23.95pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>WHETHER IN AN ACTION OF CONTRACT,
NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE
USE OR PERFORMANCE OF THIS SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.8 test_epoll</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.7pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>test.test_epoll
</span>module contains the following notice:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2001-2006 Twisted Matrix
Laboratories.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895796736'><span style='left:0px;position:
absolute;left:-5px;top:-57742px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image234.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission is hereby granted, free of
charge, to any person obtaining a copy of this software and associated
documentation files (the &quot;Software&quot;), to deal in the Software without
restriction, including without limitation the rights to use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the
following conditions:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>The above copyright notice and this
permission notice shall be included in all copies or substantial portions of
the Software.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THE SOFTWARE IS PROVIDED &quot;AS
IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO THE WARRANTIES OF</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:63.95pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.9 Select kqueue</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.65pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>select </span>module
contains the following notice for the kqueue interface:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2000 Doug White, 2006
James Knight, 2007 Christian Heimes All rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Redistribution and use in source and
binary forms, with or without modification, are permitted provided that the
following conditions are met:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:55.85pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions of source code must
retain the above copyrightnotice, this list of conditions and the following
disclaimer.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:55.85pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions in binary form must
reproduce the above copyrightnotice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided with the
distribution.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE IS PROVIDED BY THE
AUTHOR AND CONTRIBUTORS &quot;AS IS&quot; AND</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ARE DISCLAIMED. IN NO EVENT SHALL THE
AUTHOR OR CONTRIBUTORS BE LIABLE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:23.95pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895795712'><span style='left:0px;position:
absolute;left:-5px;top:-58295px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image238.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.10 SipHash24</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.2pt;
margin-left:-.25pt'>The file <span style='font-size:9.0pt;line-height:108%'>Python/pyhash.c
</span>contains Marek Majkowski implementation of Dan Bernsteins SipHash24
algorithm. It contains the following note:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>&lt;MIT License&gt;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2013 Marek Majkowski
&lt;marek@popcount.org&gt;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:31.65pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895794688'><span style='left:0px;position:
absolute;left:-5px;top:-58482px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image235.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission is hereby granted, free of
charge, to any person obtaining a copy of this software and associated
documentation files (the &quot;Software&quot;), to deal in the Software without
restriction, including without limitation the rights to use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the
following conditions:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>The above copyright notice and this
permission notice shall be included in all copies or substantial portions of
the Software. &lt;/MIT License&gt;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:171.55pt;
margin-bottom:12.2pt;margin-left:15.4pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>Original
location: https://github.com/majek/csiphash/</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Solution inspired by code from:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:139.25pt;
margin-bottom:.45pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Samuel Neves
(supercop/crypto_auth/siphash24/little) djb
(supercop/crypto_auth/siphash24/little2)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Jean-Philippe Aumasson
(https://131002.net/siphash/siphash24.c)</span></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection22>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.11 strtod and dtoa</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.55pt;
margin-left:-.25pt'>The file <span style='font-size:9.0pt;line-height:108%'>Python/dtoa.c</span>,
which supplies C functions dtoa and strtod for conversion of C doubles to and
from strings, is derived from the file of the same name by David M. Gay,
currently available from <a
href="https://web.archive.org/web/20220517033456/http:/www.netlib.org/fp/dtoa.c"><span
style='color:#377063;text-decoration:none'>https://web.archive.org/web/ </span></a><a
href="https://web.archive.org/web/20220517033456/http:/www.netlib.org/fp/dtoa.c"><span
style='color:#377063;text-decoration:none'>20220517033456/http://www.netlib.org/fp/dtoa.c</span></a>.
The original file, as retrieved on March 16, 2009, contains the following
copyright and licensing notice:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>/****************************************************************</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:5.9pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>*</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>The author of this software is David
M. Gay.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:5.9pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>*</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 1991, 2000, 2001 by
Lucent Technologies.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:5.9pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>*</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Permission to use, copy, modify, and
distribute this software for any</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>purpose without fee is hereby granted,
provided that this entire notice</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>is included in all copies of any
software which is or includes a copy* or modification of this software and in
all copies of the supporting * documentation for such software.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:5.9pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>*</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE IS BEING PROVIDED
&quot;AS IS&quot;, WITHOUT ANY EXPRESS OR IMPLIED</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895793664'><span style='left:0px;position:
absolute;left:-5px;top:-59004px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image239.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>WARRANTY. IN PARTICULAR, NEITHER THE
AUTHOR NOR LUCENT MAKES ANY* REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING
THE MERCHANTABILITY * OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
PURPOSE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:5.9pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>*</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:23.45pt;margin-left:5.9pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>***************************************************************/</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.12 OpenSSL</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.55pt;
margin-left:-.25pt'>The modules <span style='font-size:9.0pt;line-height:108%'>hashlib</span>,
<span style='font-size:9.0pt;line-height:108%'>posix </span>and <span
style='font-size:9.0pt;line-height:108%'>ssl </span>use the OpenSSL library for
added performance if made available by the operating system. Additionally, the
Windows and macOS installers for Python may include a copy of the OpenSSL
libraries, so we include a copy of the OpenSSL license here. For the OpenSSL
3.0 release, and later releases derived from that, the Apache License v2
applies:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:161.9pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Apache License</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:128.5pt;
margin-bottom:6.0pt;margin-left:-.75pt;text-align:left;text-indent:129.1pt;
line-height:172%'><span style='font-size:9.0pt;line-height:172%'>Version 2.0,
January 2004 https://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE,
REPRODUCTION, AND DISTRIBUTION</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>1. Definitions.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>&quot;License&quot; shall mean the
terms and conditions for use, reproduction, and distribution as defined by
Sections 1 through 9 of this document.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:69.3pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>&quot;Licensor&quot; shall mean the
copyright owner or entity authorized by the copyright owner that is granting
the License.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:63.95pt;
margin-bottom:12.2pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895792640'><span style='left:0px;position:
absolute;left:-5px;top:-59396px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image240.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>&quot;Legal Entity&quot; shall mean
the union of the acting entity and all other entities that control, are
controlled by, or are under common control with that entity. For the purposes
of this definition, &quot;control&quot; means (i) the power, direct or
indirect, to cause the direction or management of such entity, whether by
contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the
outstanding shares, or (iii) beneficial ownership of such entity.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:69.3pt;
margin-bottom:.45pt;margin-left:16.65pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>&quot;You&quot; (or &quot;Your&quot;)
shall mean an individual or Legal Entity exercising permissions granted by this
License.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:523.3pt;
margin-bottom:0in;margin-left:-1.0in;text-align:left;text-indent:0in;
line-height:107%'>&nbsp;</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=610
 style='width:457.75pt;margin-left:-3.25pt;border-collapse:collapse'>
 <tr style='height:678.55pt'>
  <td width=610 valign=top style='width:457.75pt;border-top:none;border-left:
  solid #202020 1.0pt;border-bottom:none;border-right:solid #202020 1.0pt;
  background:#F2F2F2;padding:4.2pt 5.75pt 0in 3.25pt;height:678.55pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:50.65pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>&quot;Source&quot;
  form shall mean the preferred form for making modifications, including but
  not limited to software source code, documentation source, and configuration
  files.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:88.3pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>&quot;Object&quot;
  form shall mean any form resulting from mechanical transformation or
  translation of a Source form, including but not limited to compiled object
  code, generated documentation, and conversions to other media types.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:88.3pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>&quot;Work&quot;
  shall mean the work of authorship, whether in Source or Object form, made
  available under the License, as indicated by a copyright notice that is
  included in or attached to the work (an example is provided in the Appendix
  below).</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:45.25pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>&quot;Derivative
  Works&quot; shall mean any work, whether in Source or Object form, that is
  based on (or derived from) the Work and for which the editorial revisions,
  annotations, elaborations, or other modifications represent, as a whole, an
  original work of authorship. For the purposes of this License, Derivative
  Works shall not include works that remain separable from, or merely link (or
  bind by name) to the interfaces of, the Work and Derivative Works thereof.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:50.65pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>&quot;Contribution&quot;
  shall mean any work of authorship, including the original version of the Work
  and any modifications or additions to that Work or Derivative Works thereof,
  that is intentionally submitted to Licensor for inclusion in the Work by the
  copyright owner or by an individual or Legal Entity authorized to submit on
  behalf of the copyright owner. For the purposes of this definition,
  &quot;submitted&quot; means any form of electronic, verbal, or written
  communication sent to the Licensor or its representatives, including but not
  limited to communication on electronic mailing lists, source code control
  systems, and issue tracking systems that are managed by, or on behalf of, the
  Licensor for the purpose of discussing and improving the Work, but excluding
  communication that is conspicuously marked or otherwise designated in writing
  by the copyright owner as &quot;Not a Contribution.&quot;</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:56.05pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>&quot;Contributor&quot;
  shall mean Licensor and any individual or Legal Entity on behalf of whom a
  Contribution has been received by Licensor and subsequently incorporated
  within the Work.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:64.1pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>2.<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
  style='font-size:9.0pt;line-height:115%'>Grant of Copyright License. Subject
  to the terms and conditions ofthis License, each Contributor hereby grants to
  You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,
  irrevocable copyright license to reproduce, prepare Derivative Works of,
  publicly display, publicly perform, sublicense, and distribute the Work and
  such Derivative Works in Source or Object form.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:64.1pt;
  margin-bottom:0in;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>3.<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
  style='font-size:9.0pt;line-height:107%'>Grant of Patent License. Subject to
  the terms and conditions ofthis License, each Contributor hereby grants to
  You a perpetual, worldwide, non-exclusive, no-charge, royalty-free,
  irrevocable (except as stated in this section) patent license to make, have
  made, use, offer to sell, sell, import, and otherwise transfer the Work,
  where such license applies only to those patent claims licensable by such
  Contributor that are necessarily infringed by their Contribution(s) alone or
  by combination of their Contribution(s) with the Work to which such
  Contribution(s) was submitted. If You</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:523.3pt;
margin-bottom:0in;margin-left:-1.0in;text-align:left;text-indent:0in;
line-height:107%'>&nbsp;</p>

<table class=TableGrid border=0 cellspacing=0 cellpadding=0 width=610
 style='width:457.75pt;margin-left:-3.25pt;border-collapse:collapse'>
 <tr style='height:678.55pt'>
  <td width=610 valign=top style='width:457.75pt;border-top:none;border-left:
  solid #202020 1.0pt;border-bottom:none;border-right:solid #202020 1.0pt;
  background:#F2F2F2;padding:4.2pt 5.75pt 0in 3.25pt;height:678.55pt'>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:82.95pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>institute
  patent litigation against any entity (including a cross-claim or counterclaim
  in a lawsuit) alleging that the Work or a Contribution incorporated within
  the Work constitutes direct or contributory patent infringement, then any
  patent licenses granted to You under this License for that Work shall
  terminate as of the date such litigation is filed.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:72.15pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>4.<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
  style='font-size:9.0pt;line-height:115%'>Redistribution. You may reproduce
  and distribute copies of theWork or Derivative Works thereof in any medium,
  with or without modifications, and in Source or Object form, provided that
  You meet the following conditions:</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:58.7pt;
  margin-bottom:.75pt;margin-left:37.65pt;text-align:left;text-indent:-21.5pt;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>(a)<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span style='font-size:9.0pt;line-height:107%'>You must give
  any other recipients of the Work or</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
  margin-bottom:12.7pt;margin-left:37.65pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>Derivative
  Works a copy of this License; and</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:58.7pt;
  margin-bottom:11.95pt;margin-left:37.65pt;text-align:left;text-indent:-21.5pt;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>(b)<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
  style='font-size:9.0pt;line-height:115%'>You must cause any modified files to
  carry prominent noticesstating that You changed the files; and</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:58.7pt;
  margin-bottom:11.95pt;margin-left:37.65pt;text-align:left;text-indent:-21.5pt;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>(c)<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span style='font-size:9.0pt;line-height:115%'>You must retain,
  in the Source form of any Derivative Worksthat You distribute, all copyright,
  patent, trademark, and attribution notices from the Source form of the Work,
  excluding those notices that do not pertain to any part of the Derivative
  Works; and</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:58.7pt;
  margin-bottom:11.95pt;margin-left:37.65pt;text-align:left;text-indent:-21.5pt;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>(d)<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
  style='font-size:9.0pt;line-height:115%'>If the Work includes a
  &quot;NOTICE&quot; text file as part of itsdistribution, then any Derivative
  Works that You distribute must include a readable copy of the attribution
  notices contained within such NOTICE file, excluding those notices that do
  not pertain to any part of the Derivative Works, in at least one of the
  following places: within a NOTICE text file distributed as part of the
  Derivative Works; within the Source form or documentation, if provided along
  with the Derivative Works; or, within a display generated by the Derivative
  Works, if and wherever such third-party notices normally appear. The contents
  of the NOTICE file are for informational purposes only and do not modify the
  License. You may add Your own attribution notices within Derivative Works that
  You distribute, alongside or as an addendum to the NOTICE text from the Work,
  provided that such additional attribution notices cannot be construed as
  modifying the License.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:72.15pt;
  margin-bottom:11.95pt;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>You may add
  Your own copyright statement to Your modifications and may provide additional
  or different license terms and conditions for use, reproduction, or
  distribution of Your modifications, or for any such Derivative Works as a
  whole, provided Your use, reproduction, and distribution of the Work
  otherwise complies with the conditions stated in this License.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:72.15pt;
  margin-bottom:0in;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
  line-height:115%'><span style='font-size:9.0pt;line-height:115%'>5.<span
  style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
  style='font-size:9.0pt;line-height:115%'>Submission of Contributions. Unless
  You explicitly state otherwise,any Contribution intentionally submitted for
  inclusion in the Work by You to the Licensor shall be under the terms and
  conditions of this License, without any additional terms or conditions.</span></p>
  <p class=MsoNormal align=left style='margin-top:0in;margin-right:61.4pt;
  margin-bottom:0in;margin-left:16.15pt;text-align:left;text-indent:0in;
  line-height:107%'><span style='font-size:9.0pt;line-height:107%'>Notwithstanding
  the above, nothing herein shall supersede or modify the terms of any separate
  license agreement you may have executed with Licensor regarding such
  Contributions.</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:66.65pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>6.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Trademarks. This License does not
grant permission to use the tradenames, trademarks, service marks, or product
names of the Licensor, except as required for reasonable and customary use in
describing the origin of the Work and reproducing the content of the NOTICE
file.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:66.65pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>7.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Disclaimer of Warranty. Unless
required by applicable law oragreed to in writing, Licensor provides the Work
(and each Contributor provides its Contributions) on an &quot;AS IS&quot;
BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied,
including, without limitation, any warranties or conditions of TITLE,
NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are
solely responsible for determining the appropriateness of using or
redistributing the Work and assume any risks associated with Your exercise of
permissions under this License.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:66.65pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>8.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895791616'><span style='left:0px;position:
absolute;left:-5px;top:-61529px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image241.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Limitation of Liability. In no event
and under no legal theory,whether in tort (including negligence), contract, or
otherwise, unless required by applicable law (such as deliberate and grossly
negligent acts) or agreed to in writing, shall any Contributor be liable to You
for damages, including any direct, indirect, special, incidental, or
consequential damages of any character arising as a result of this License or
out of the use or inability to use the Work (including but not limited to
damages for loss of goodwill, work stoppage, computer failure or malfunction,
or any and all other commercial damages or losses), even if such Contributor
has been advised of the possibility of such damages.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:66.65pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>9.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Accepting Warranty or Additional
Liability. While redistributingthe Work or Derivative Works thereof, You may
choose to offer, and charge a fee for, acceptance of support, warranty,
indemnity, or other liability obligations and/or rights consistent with this
License. However, in accepting such obligations, You may act only on Your own
behalf and on Your sole responsibility, not on behalf of any other Contributor,
and only if You agree to indemnify, defend, and hold each Contributor harmless
for any liability incurred by, or claims asserted against, such Contributor by
reason of your accepting any such warranty or additional liability.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:24.0pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>END OF TERMS AND CONDITIONS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.13 expat</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.25pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>pyexpat </span>extension
is built using an included copy of the expat sources unless the build is
configured <span style='font-size:9.0pt;line-height:108%'>--with-system-expat</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:12.2pt;margin-left:166.0pt;text-align:left;text-indent:-166.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>Copyright (c)
1998, 1999, 2000 Thai Open Source Software Center Ltd and Clark Cooper</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895790592'><span style='left:0px;position:
absolute;left:-5px;top:-61893px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image242.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission is hereby granted, free of
charge, to any person obtaining a copy of this software and associated
documentation files (the &quot;Software&quot;), to deal in the Software without
restriction, including without limitation the rights to use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the
following conditions:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:58.55pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>The above copyright notice and this
permission notice shall be included in all copies or substantial portions of
the Software.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895789568'><span style='left:0px;position:
absolute;left:-5px;top:-61991px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image243.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>THE SOFTWARE IS PROVIDED &quot;AS
IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
AND NONINFRINGEMENT.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:63.95pt;
margin-bottom:23.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.14 libffi</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.85pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>_ctypes </span>C
extension underlying the <span style='font-size:9.0pt;line-height:108%'>ctypes </span>module
is built using an included copy of the libffi sources unless the build is
configured <span style='font-size:9.0pt;line-height:108%'>--with-system-libffi</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 1996-2008 Red Hat, Inc
and others.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895788544'><span style='left:0px;position:
absolute;left:-5px;top:-62242px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image235.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission is hereby granted, free of
charge, to any person obtaining a copy of this software and associated
documentation files (the &quot;Software&quot;), to deal in the Software without
restriction, including without limitation the rights to use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the
following conditions:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:58.55pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>The above copyright notice and this
permission notice shall be included in all copies or substantial portions of
the Software.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THE SOFTWARE IS PROVIDED &quot;AS
IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO THE WARRANTIES OF</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:23.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>WHETHER IN AN ACTION OF CONTRACT, TORT
OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
USE OR OTHER DEALINGS IN THE SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.15 zlib</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.4pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>zlib </span>extension
is built using an included copy of the zlib sources if the zlib version found
on the system is too old to be used for the build:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (C) 1995-2011 Jean-loup
Gailly and Mark Adler</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>This software is provided 'as-is',
without any express or implied warranty. In no event will the authors be held
liable for any damages arising from the use of this software.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:37.05pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Permission is granted to anyone to use
this software for any purpose, including commercial applications, and to alter
it and redistribute it freely, subject to the following restrictions:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:58.55pt;
margin-bottom:.45pt;margin-left:15.4pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='position:relative;z-index:-1895787520'><span
style='left:0px;position:absolute;left:-5px;top:-62706px;width:611px;
height:1px'><img width=611 height=1
src="Python%20Frequently%20Asked%20Questions_files/image244.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>1. The origin of this software must
not be misrepresented; you must not claim that you wrote the original software.
If you use this software in a product, an acknowledgment in the product
documentation would be</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:-3.4pt;
margin-bottom:18.25pt;margin-left:-3.4pt;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=612 height=152
src="Python%20Frequently%20Asked%20Questions_files/image245.gif"></span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.16 cfuhash</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.85pt;
margin-left:-.25pt'>The implementation of the hash table used by the <span
style='font-size:9.0pt;line-height:108%'>tracemalloc </span>is based on the
cfuhash project:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:284.5pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2005 Don Owens All
rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>This code is released under the BSD
license:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Redistribution and use in source and
binary forms, with or without modification, are permitted provided that the
following conditions are met:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:85.45pt;
margin-bottom:12.2pt;margin-left:21.5pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions of source code must
retain the above copyrightnotice, this list of conditions and the following
disclaimer.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:85.45pt;
margin-bottom:12.2pt;margin-left:21.5pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895786496'><span style='left:0px;position:
absolute;left:-5px;top:-63134px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image246.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions in binary form must
reproduce the abovecopyright notice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided with the
distribution.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:85.45pt;
margin-bottom:12.2pt;margin-left:21.5pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Neither the name of the author nor the
names of itscontributors may be used to endorse or promote products derived
from this software without specific prior written permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE IS PROVIDED BY THE
COPYRIGHT HOLDERS AND CONTRIBUTORS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>&quot;AS IS&quot; AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>COPYRIGHT OWNER OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>(INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:85.45pt;
margin-bottom:23.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.17 libmpdec</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.85pt;
margin-left:-.25pt'>The <span style='font-size:9.0pt;line-height:108%'>_decimal
</span>C extension underlying the <span style='font-size:9.0pt;line-height:
108%'>decimal </span>module is built using an included copy of the libmpdec
library unless the build is configured <span style='font-size:9.0pt;line-height:
108%'>--with-system-libmpdec</span>:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2008-2020 Stefan Krah.
All rights reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895785472'><span style='left:0px;position:
absolute;left:-5px;top:-63552px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image247.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Redistribution and use in source and
binary forms, with or without</span></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection23>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>modification, are permitted provided
that the following conditions are met:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:55.85pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions of source code must
retain the above copyrightnotice, this list of conditions and the following
disclaimer.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:55.85pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions in binary form must
reproduce the above copyrightnotice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided with the
distribution.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE IS PROVIDED BY THE
AUTHOR AND CONTRIBUTORS &quot;AS IS&quot; AND</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ANY EXPRESS OR IMPLIED WARRANTIES,
INCLUDING, BUT NOT LIMITED TO, THE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS FOR A PARTICULAR PURPOSE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>ARE DISCLAIMED. IN NO EVENT SHALL THE
AUTHOR OR CONTRIBUTORS BE LIABLE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>DAMAGES (INCLUDING, BUT NOT LIMITED
TO, PROCUREMENT OF SUBSTITUTE GOODS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:23.95pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895784448'><span style='left:0px;position:
absolute;left:-5px;top:-63818px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image248.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.18 W3C C14N test suite</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:8.6pt;
margin-left:-.25pt'>The C14N 2.0 test suite in the <span style='font-size:9.0pt;
line-height:108%'>test </span>package (<span style='font-size:9.0pt;line-height:
108%'>Lib/test/xmltestdata/c14n-20/</span>) was retrieved from the W3C website
at <a href="https://www.w3.org/TR/xml-c14n2-testcases/"><span style='color:
#377063;text-decoration:none'>https://www.w3.org/TR/xml-c14n2-testcases/</span></a><span
style='color:#377063'> </span>and is distributed under the 3-clause BSD
license:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:144.65pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2013 W3C(R) (MIT, ERCIM,
Keio, Beihang), All Rights Reserved.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:80.1pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Redistribution and use in source and
binary forms, with or without modification, are permitted provided that the
following conditions are met:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:.45pt;margin-left:10.75pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions of works must retain
the original copyright notice,this list of conditions and the following
disclaimer.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:.45pt;margin-left:10.75pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions in binary form must
reproduce the original copyrightnotice, this list of conditions and the
following disclaimer in the documentation and/or other materials provided with
the distribution.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.2pt;
margin-bottom:12.2pt;margin-left:10.75pt;text-align:left;text-indent:-10.75pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>*<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
style='position:relative;z-index:-1895783424'><span style='left:0px;position:
absolute;left:-5px;top:-64087px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image249.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Neither the name of the W3C nor the
names of its contributors may beused to endorse or promote products derived
from this work without specific prior written permission.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE IS PROVIDED BY THE
COPYRIGHT HOLDERS AND CONTRIBUTORS</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>&quot;AS IS&quot; AND ANY EXPRESS OR
IMPLIED WARRANTIES, INCLUDING, BUT NOT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LIMITED TO, THE IMPLIED WARRANTIES OF
MERCHANTABILITY AND FITNESS FOR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>A PARTICULAR PURPOSE ARE DISCLAIMED.
IN NO EVENT SHALL THE COPYRIGHT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
DAMAGES (INCLUDING, BUT NOT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LIMITED TO, PROCUREMENT OF SUBSTITUTE
GOODS OR SERVICES; LOSS OF USE,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:69.3pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>(INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.19 mimalloc</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.4pt;
margin-left:-.25pt'>MIT License:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2018-2021 Microsoft
Corporation, Daan Leijen</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:31.65pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895782400'><span style='left:0px;position:
absolute;left:-5px;top:-64408px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image239.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission is hereby granted, free of
charge, to any person obtaining a copy of this software and associated
documentation files (the &quot;Software&quot;), to deal in the Software without
restriction, including without limitation the rights to use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the
following conditions:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>The above copyright notice and this
permission notice shall be included in all copies or substantial portions of
the Software.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THE SOFTWARE IS PROVIDED &quot;AS
IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>IMPLIED, INCLUDING BUT NOT LIMITED TO
THE WARRANTIES OF MERCHANTABILITY,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE
FOR ANY CLAIM, DAMAGES OR OTHER</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:20.9pt;
margin-bottom:23.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LIABILITY, WHETHER IN AN ACTION OF
CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.20 asyncio</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.85pt;
margin-left:-.25pt'>Parts of the <span style='font-size:9.0pt;line-height:108%'>asyncio
</span>module are incorporated from <a
href="https://github.com/MagicStack/uvloop/tree/v0.16.0"><span
style='color:#377063;text-decoration:none'>uvloop 0.16</span></a>, which is
distributed under the MIT license:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2015-2021 MagicStack
Inc. http://magic.io</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895781376'><span style='left:0px;position:
absolute;left:-5px;top:-64741px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image234.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Permission is hereby granted, free of
charge, to any person obtaining a copy of this software and associated
documentation files (the &quot;Software&quot;), to deal in the Software without
restriction, including without limitation the rights to use, copy, modify,
merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the
following conditions:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:74.7pt;
margin-bottom:12.2pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>The above copyright notice and this
permission notice shall be included in all copies or substantial portions of
the Software.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THE SOFTWARE IS PROVIDED &quot;AS
IS&quot;, WITHOUT WARRANTY OF ANY KIND,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>EXPRESS OR IMPLIED, INCLUDING BUT NOT
LIMITED TO THE WARRANTIES OF</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>MERCHANTABILITY, FITNESS FOR A
PARTICULAR PURPOSE AND</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:63.95pt;
margin-bottom:23.25pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:4.2pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-size:12.0pt;line-height:103%;font-family:"Calibri",sans-serif;
color:#20435C'>C.3.21 Global Unbounded Sequences (GUS)</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:7.8pt;
margin-left:-.25pt'>The file <span style='font-size:9.0pt;line-height:108%'>Python/qsbr.c
</span>is adapted from FreeBSDs Global Unbounded Sequences safe memory
reclamation scheme in <a
href="https://github.com/freebsd/freebsd-src/blob/main/sys/kern/subr_smr.c"><span
style='color:#377063;text-decoration:none'>subr_smr.c</span></a>. The file is
distributed under the 2-Clause BSD License:</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:12.3pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>Copyright (c) 2019,2020 Jeffrey
Roberson &lt;jeff@FreeBSD.org&gt;</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:26.3pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895780352'><span style='left:0px;position:
absolute;left:-5px;top:-65107px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image250.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>Redistribution and use in source and
binary forms, with or without modification, are permitted provided that the
following conditions</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:.15pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continues on next page)</span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:3.9pt;margin-left:.5pt;text-align:right;line-height:110%'><span
style='font-size:8.0pt;line-height:110%'>(continued from previous page)</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>are met:</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:58.55pt;
margin-bottom:.45pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>1.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions of source code must
retain the above copyrightnotice unmodified, this list of conditions, and the
following disclaimer.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:58.55pt;
margin-bottom:12.2pt;margin-left:16.15pt;text-align:left;text-indent:-16.15pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>2.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
style='font-size:9.0pt;line-height:112%'>Redistributions in binary form must
reproduce the above copyrightnotice, this list of conditions and the following
disclaimer in the documentation and/or other materials provided with the
distribution.</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:58.55pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='position:relative;z-index:-1895779328'><span style='left:0px;position:
absolute;left:-5px;top:-65256px;width:611px;height:1px'><img width=611
height=1 src="Python%20Frequently%20Asked%20Questions_files/image249.gif"></span></span><span
style='font-size:9.0pt;line-height:112%'>THIS SOFTWARE IS PROVIDED BY THE
AUTHOR &quot;AS IS&quot; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT
NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
ANY DIRECT, INDIRECT,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:42.4pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>(INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.</span><br clear=all style='page-break-before:always'>
</p>

<p class=MsoNormal align=left style='margin:0in;text-align:left;text-indent:
0in;line-height:107%'>&nbsp;</p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:always'>
</span>

<div class=WordSection24>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>APPENDIX</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:0in;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>D</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:32.85pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 142165"
src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></span></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:38.5pt;margin-left:.5pt;text-align:right;line-height:110%'>

<table cellpadding=0 cellspacing=0>
 <tr>
  <td width=96 height=0></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=603 height=1
  src="Python%20Frequently%20Asked%20Questions_files/image001.gif"></td>
 </tr>
</table>

<br clear=ALL>
<b><span style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>COPYRIGHT</span></b></p>

<p class=MsoNormal style='margin-left:-.25pt'>Python and this documentation is:</p>

<p class=MsoNormal style='margin-left:-.25pt'>Copyright © 2001-2024 Python
Software Foundation. All rights reserved.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Copyright © 2000 BeOpen.com. All
rights reserved.</p>

<p class=MsoNormal style='margin-left:-.25pt'>Copyright © 1995-2000 Corporation
for National Research Initiatives. All rights reserved.</p>

<p class=MsoNormal style='margin-top:0in;margin-right:0in;margin-bottom:0in;
margin-left:-.25pt'>Copyright © 1991-1995 Stichting Mathematisch Centrum. All
rights reserved.</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:16.95pt;margin-left:0in;text-align:left;text-indent:0in;
line-height:107%'><span style='font-size:11.0pt;line-height:107%;font-family:
"Calibri",sans-serif'><img border=0 width=603 height=1 id="Group 142166"
src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></span></p>

<p class=MsoNormal style='margin-left:-.25pt'>See <i><span style='color:#355F7C'>History
and License </span></i>for complete license and permissions information.<br
clear=all style='page-break-before:always'>
</p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:.5pt;margin-left:342.75pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>Appendix D. Copyright</span></b></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:auto'>
</span>

<div class=WordSection25>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>Non-alphabetical</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>...</span>, <b><span style='color:
#355F7C'>73</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>&gt;&gt;&gt;</span>, <b><span
style='color:#355F7C'>73</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:62.05pt;
margin-bottom:9.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>__future__</span>, <b><span
style='color:#355F7C'>79 </span></b><span style='font-size:9.0pt;line-height:
112%'>__slots__</span>, <b><span style='color:#355F7C'>86</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>A</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:64.55pt;margin-bottom:
.05pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>abstract base class</span>, <b><span style='color:#355F7C'>73
</span></b><span style='font-size:9.0pt;line-height:115%'>annotation</span>, <b><span
style='color:#355F7C'>73 </span></b><span style='font-size:9.0pt;line-height:
115%'>argument</span>, <b><span style='color:#355F7C'>73</span></b></p>

<p class=MsoNormal align=center style='margin-top:0in;margin-right:0in;
margin-bottom:.85pt;margin-left:8.05pt;text-align:center;line-height:107%'><span
style='font-size:9.0pt;line-height:107%'>difference from parameter</span>, <span
style='color:#355F7C'>12</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:-.75pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>asynchronous context manager</span>, <b><span
style='color:#355F7C'>74 </span></b><span style='font-size:9.0pt;line-height:
115%'>asynchronous generator</span>, <b><span style='color:#355F7C'>74 </span></b><span
style='font-size:9.0pt;line-height:115%'>asynchronous generator iterator</span>,
<b><span style='color:#355F7C'>74 </span></b><span style='font-size:9.0pt;
line-height:115%'>asynchronous iterable</span>, <b><span style='color:#355F7C'>74
</span></b><span style='font-size:9.0pt;line-height:115%'>asynchronous iterator</span>,
<b><span style='color:#355F7C'>74 </span></b><span style='font-size:9.0pt;
line-height:115%'>attribute</span>, <b><span style='color:#355F7C'>74 </span></b><span
style='font-size:9.0pt;line-height:115%'>awaitable</span>, <b><span
style='color:#355F7C'>74</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>B</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:69.95pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>BDFL</span>, <b><span style='color:#355F7C'>74 </span></b><span
style='font-size:9.0pt;line-height:115%'>binary file</span>, <b><span
style='color:#355F7C'>74 </span></b><span style='font-size:9.0pt;line-height:
115%'>borrowed reference</span>, <b><span style='color:#355F7C'>74 </span></b><span
style='font-size:9.0pt;line-height:115%'>bytecode</span>, <b><span
style='color:#355F7C'>75 </span></b><span style='font-size:9.0pt;line-height:
115%'>bytes-like object</span>, <b><span style='color:#355F7C'>75</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>C</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:21.5pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>callable</span>, <b><span style='color:#355F7C'>75 </span></b><span
style='font-size:9.0pt;line-height:115%'>callback</span>, <b><span
style='color:#355F7C'>75 </span></b><span style='font-size:9.0pt;line-height:
115%'>C-contiguous</span>, <span style='color:#355F7C'>76 </span><span
style='font-size:9.0pt;line-height:115%'>class</span>, <b><span
style='color:#355F7C'>75 </span></b><span style='font-size:9.0pt;line-height:
115%'>class variable</span>, <b><span style='color:#355F7C'>75 </span></b><span
style='font-size:9.0pt;line-height:115%'>closure variable</span>, <b><span
style='color:#355F7C'>75 </span></b><span style='font-size:9.0pt;line-height:
115%'>complex number</span>, <b><span style='color:#355F7C'>76 </span></b><span
style='font-size:9.0pt;line-height:115%'>context</span>, <b><span
style='color:#355F7C'>76 </span></b><span style='font-size:9.0pt;line-height:
115%'>context management protocol</span>, <b><span style='color:#355F7C'>76 </span></b><span
style='font-size:9.0pt;line-height:115%'>context manager</span>, <b><span
style='color:#355F7C'>76 </span></b><span style='font-size:9.0pt;line-height:
115%'>context variable</span>, <b><span style='color:#355F7C'>76 </span></b><span
style='font-size:9.0pt;line-height:115%'>contiguous</span>, <b><span
style='color:#355F7C'>76 </span></b><span style='font-size:9.0pt;line-height:
115%'>coroutine</span>, <b><span style='color:#355F7C'>76 </span></b><span
style='font-size:9.0pt;line-height:115%'>coroutine function</span>, <b><span
style='color:#355F7C'>76 </span></b><span style='font-size:9.0pt;line-height:
115%'>CPython</span>, <b><span style='color:#355F7C'>76 </span></b><span
style='font-size:9.0pt;line-height:115%'>current context</span>, <b><span
style='color:#355F7C'>76</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>D</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>decorator</span>, <b><span
style='color:#355F7C'>76</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:71.2pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-size:14.5pt;line-height:110%;font-family:"Calibri",sans-serif'>INDEX</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:76.6pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>descriptor</span>, <b><span style='color:#355F7C'>77 </span></b><span
style='font-size:9.0pt;line-height:115%'>dictionary</span>, <b><span
style='color:#355F7C'>77 </span></b><span style='font-size:9.0pt;line-height:
115%'>dictionary comprehension</span>, <b><span style='color:#355F7C'>77 </span></b><span
style='font-size:9.0pt;line-height:115%'>dictionary view</span>, <b><span
style='color:#355F7C'>77 </span></b><span style='font-size:9.0pt;line-height:
115%'>docstring</span>, <b><span style='color:#355F7C'>77 </span></b><span
style='font-size:9.0pt;line-height:115%'>duck-typing</span>, <b><span
style='color:#355F7C'>77</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>E</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:113.05pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>EAFP</span>, <b><span
style='color:#355F7C'>77 </span></b><span style='font-size:9.0pt;line-height:
112%'>environment variable</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PATH</span>, <span style='color:#355F7C'>51</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PYTHON_GIL</span>, <span
style='color:#355F7C'>80</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:62.05pt;margin-bottom:
10.1pt;margin-left:-.75pt;text-indent:19.9pt;line-height:115%'><span
style='font-size:9.0pt;line-height:115%'>PYTHONDONTWRITEBYTECODE</span>, <span
style='color:#355F7C'>35 </span><span style='font-size:9.0pt;line-height:115%'>expression</span>,
<b><span style='color:#355F7C'>77 </span></b><span style='font-size:9.0pt;
line-height:115%'>extension module</span>, <b><span style='color:#355F7C'>78</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>F</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:6.65pt;margin-bottom:
.05pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>f-string</span>, <b><span style='color:#355F7C'>78 </span></b><span
style='font-size:9.0pt;line-height:115%'>file object</span>, <b><span
style='color:#355F7C'>78 </span></b><span style='font-size:9.0pt;line-height:
115%'>file-like object</span>, <b><span style='color:#355F7C'>78 </span></b><span
style='font-size:9.0pt;line-height:115%'>filesystem encoding and error handler</span>,
<b><span style='color:#355F7C'>78</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:103.5pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>finder</span>, <b><span style='color:#355F7C'>78 </span></b><span
style='font-size:9.0pt;line-height:115%'>floor division</span>, <b><span
style='color:#355F7C'>78 </span></b><span style='font-size:9.0pt;line-height:
115%'>Fortran contiguous</span>, <span style='color:#355F7C'>76 </span><span
style='font-size:9.0pt;line-height:115%'>free threading</span>, <b><span
style='color:#355F7C'>78 </span></b><span style='font-size:9.0pt;line-height:
115%'>free variable</span>, <b><span style='color:#355F7C'>78 </span></b><span
style='font-size:9.0pt;line-height:115%'>function</span>, <b><span
style='color:#355F7C'>78 </span></b><span style='font-size:9.0pt;line-height:
115%'>function annotation</span>, <b><span style='color:#355F7C'>78</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>G</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:82.0pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>garbage collection</span>, <b><span style='color:#355F7C'>79 </span></b><span
style='font-size:9.0pt;line-height:115%'>generator</span>, <b><span
style='color:#355F7C'>79 </span></b><span style='font-size:9.0pt;line-height:
115%'>generator expression</span>, <b><span style='color:#355F7C'>79 </span></b><span
style='font-size:9.0pt;line-height:115%'>generator iterator</span>, <b><span
style='color:#355F7C'>79 </span></b><span style='font-size:9.0pt;line-height:
115%'>generic function</span>, <b><span style='color:#355F7C'>79 </span></b><span
style='font-size:9.0pt;line-height:115%'>generic type</span>, <b><span
style='color:#355F7C'>79 </span></b><span style='font-size:9.0pt;line-height:
115%'>GIL</span>, <b><span style='color:#355F7C'>79 </span></b><span
style='font-size:9.0pt;line-height:115%'>global interpreter lock</span>, <b><span
style='color:#355F7C'>80</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>H</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:84.85pt;
margin-bottom:9.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>hash-based pyc</span>, <b><span
style='color:#355F7C'>80 </span></b><span style='font-size:9.0pt;line-height:
112%'>hashable</span>, <b><span style='color:#355F7C'>80</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>I</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:138.65pt;
margin-bottom:8.8pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>IDLE</span>, <b><span
style='color:#355F7C'>80 </span></b><span style='font-size:9.0pt;line-height:
112%'>immortal</span>, <b><span style='color:#355F7C'>80 </span></b><span
style='font-size:9.0pt;line-height:112%'>immutable</span>, <b><span
style='color:#355F7C'>80 </span></b><span style='font-size:9.0pt;line-height:
112%'>import path</span>, <b><span style='color:#355F7C'>80 </span></b><span
style='font-size:9.0pt;line-height:112%'>importer</span>, <b><span
style='color:#355F7C'>80 </span></b><span style='font-size:9.0pt;line-height:
112%'>importing</span>, <b><span style='color:#355F7C'>80 </span></b><span
style='font-size:9.0pt;line-height:112%'>interactive</span>, <b><span
style='color:#355F7C'>80 </span></b><span style='font-size:9.0pt;line-height:
112%'>interpreted</span>, <b><span style='color:#355F7C'>81 </span></b><span
style='font-size:9.0pt;line-height:112%'>interpreter shutdown</span>, <b><span
style='color:#355F7C'>81 </span></b><span style='font-size:9.0pt;line-height:
112%'>iterable</span>, <b><span style='color:#355F7C'>81 </span></b><span
style='font-size:9.0pt;line-height:112%'>iterator</span>, <b><span
style='color:#355F7C'>81</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>K</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:.65in;
margin-bottom:10.05pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>key function</span>, <b><span
style='color:#355F7C'>81 </span></b><span style='font-size:9.0pt;line-height:
112%'>keyword argument</span>, <b><span style='color:#355F7C'>81</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>L</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:52.2pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>lambda</span>, <b><span style='color:#355F7C'>82 </span></b><span
style='font-size:9.0pt;line-height:115%'>LBYL</span>, <b><span
style='color:#355F7C'>82 </span></b><span style='font-size:9.0pt;line-height:
115%'>list</span>, <b><span style='color:#355F7C'>82 </span></b><span
style='font-size:9.0pt;line-height:115%'>list comprehension</span>, <b><span
style='color:#355F7C'>82 </span></b><span style='font-size:9.0pt;line-height:
115%'>loader</span>, <b><span style='color:#355F7C'>82 </span></b><span
style='font-size:9.0pt;line-height:115%'>locale encoding</span>, <b><span
style='color:#355F7C'>82</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>M</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>magic</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.45pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>method</span>, <span style='color:
#355F7C'>82</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:62.95pt;margin-bottom:
.05pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>magic method</span>, <b><span style='color:#355F7C'>82 </span></b><span
style='font-size:9.0pt;line-height:115%'>mapping</span>, <b><span
style='color:#355F7C'>82 </span></b><span style='font-size:9.0pt;line-height:
115%'>meta path finder</span>, <b><span style='color:#355F7C'>82 </span></b><span
style='font-size:9.0pt;line-height:115%'>metaclass</span>, <b><span
style='color:#355F7C'>82 </span></b><span style='font-size:9.0pt;line-height:
115%'>method</span>, <b><span style='color:#355F7C'>83 </span></b><span
style='font-size:9.0pt;line-height:115%'>magic</span>, <span style='color:#355F7C'>82
</span><span style='font-size:9.0pt;line-height:115%'>special</span>, <span
style='color:#355F7C'>87</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:25.3pt;margin-bottom:
8.6pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>method resolution order</span>, <b><span style='color:#355F7C'>83
</span></b><span style='font-size:9.0pt;line-height:115%'>module</span>, <b><span
style='color:#355F7C'>83 </span></b><span style='font-size:9.0pt;line-height:
115%'>module spec</span>, <b><span style='color:#355F7C'>83 </span></b><span
style='font-size:9.0pt;line-height:115%'>MRO</span>, <b><span style='color:
#355F7C'>83 </span></b><span style='font-size:9.0pt;line-height:115%'>mutable</span>,
<b><span style='color:#355F7C'>83</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>N</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:.8in;margin-bottom:10.1pt;
margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;line-height:
115%'>named tuple</span>, <b><span style='color:#355F7C'>83 </span></b><span
style='font-size:9.0pt;line-height:115%'>namespace</span>, <b><span
style='color:#355F7C'>83 </span></b><span style='font-size:9.0pt;line-height:
115%'>namespace package</span>, <b><span style='color:#355F7C'>83 </span></b><span
style='font-size:9.0pt;line-height:115%'>nested scope</span>, <b><span
style='color:#355F7C'>84 </span></b><span style='font-size:9.0pt;line-height:
115%'>new-style class</span>, <b><span style='color:#355F7C'>84</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>O</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:68.35pt;
margin-bottom:10.05pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>object</span>, <b><span
style='color:#355F7C'>84 </span></b><span style='font-size:9.0pt;line-height:
112%'>optimized scope</span>, <b><span style='color:#355F7C'>84</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>P</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:-.75pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>package</span>, <b><span style='color:#355F7C'>84 </span></b><span
style='font-size:9.0pt;line-height:115%'>parameter</span>, <b><span
style='color:#355F7C'>84 </span></b><span style='font-size:9.0pt;line-height:
115%'>difference from argument</span>, <span style='color:#355F7C'>12 </span><span
style='font-size:9.0pt;line-height:115%'>PATH</span>, <span style='color:#355F7C'>51
</span><span style='font-size:9.0pt;line-height:115%'>path based finder</span>,
<b><span style='color:#355F7C'>85 </span></b><span style='font-size:9.0pt;
line-height:115%'>path entry</span>, <b><span style='color:#355F7C'>85 </span></b><span
style='font-size:9.0pt;line-height:115%'>path entry finder</span>, <b><span
style='color:#355F7C'>85 </span></b><span style='font-size:9.0pt;line-height:
115%'>path entry hook</span>, <b><span style='color:#355F7C'>85</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:103.5pt;margin-bottom:
0in;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>path-like object</span>, <b><span style='color:#355F7C'>85 </span></b><span
style='font-size:9.0pt;line-height:115%'>PEP</span>, <b><span style='color:
#355F7C'>85 </span></b><span style='font-size:9.0pt;line-height:115%'>portion</span>,
<b><span style='color:#355F7C'>85 </span></b><span style='font-size:9.0pt;
line-height:115%'>positional argument</span>, <b><span style='color:#355F7C'>85
</span></b><span style='font-size:9.0pt;line-height:115%'>provisional API</span>,
<b><span style='color:#355F7C'>85 </span></b><span style='font-size:9.0pt;
line-height:115%'>provisional package</span>, <b><span style='color:#355F7C'>85
</span></b><span style='font-size:9.0pt;line-height:115%'>Python 3000</span>, <b><span
style='color:#355F7C'>85</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:53.9pt;
margin-bottom:.45pt;margin-left:19.15pt;text-align:left;text-indent:-19.9pt;
line-height:112%'><span style='font-size:9.0pt;line-height:112%'>Python
Enhancement Proposals PEP 1</span>, <span style='color:#355F7C'>85</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 5</span>, <span style='color:#355F7C'>5</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 8</span>, <span style='color:#355F7C'>8</span>,
<span style='color:#355F7C'>32</span>, <span style='color:#355F7C'>68</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 238</span>, <span
style='color:#355F7C'>78</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 278</span>, <span
style='color:#355F7C'>88</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 302</span>, <span
style='color:#355F7C'>82</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 343</span>, <span
style='color:#355F7C'>76</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 362</span>, <span
style='color:#355F7C'>74</span>, <span style='color:#355F7C'>84</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 373</span>, <span
style='color:#355F7C'>4</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 387</span>, <span
style='color:#355F7C'>2</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 411</span>, <span
style='color:#355F7C'>85</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 420</span>, <span
style='color:#355F7C'>83</span>, <span style='color:#355F7C'>85</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 443</span>, <span
style='color:#355F7C'>79</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 483</span>, <span
style='color:#355F7C'>79</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 484</span>, <span
style='color:#355F7C'>73</span>, <span style='color:#355F7C'>79</span>, <span
style='color:#355F7C'>88</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 492</span>, <span
style='color:#355F7C'>74</span>, <span style='color:#355F7C'>76</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 498</span>, <span
style='color:#355F7C'>78</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 519</span>, <span
style='color:#355F7C'>85</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 525</span>, <span
style='color:#355F7C'>74</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 526</span>, <span
style='color:#355F7C'>73</span>, <span style='color:#355F7C'>88</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 572</span>, <span
style='color:#355F7C'>41</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 585</span>, <span
style='color:#355F7C'>79</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 602</span>, <span
style='color:#355F7C'>4</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 683</span>, <span
style='color:#355F7C'>80</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 703</span>, <span
style='color:#355F7C'>56</span>, <span style='color:#355F7C'>78</span>, <span
style='color:#355F7C'>80</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 3116</span>, <span
style='color:#355F7C'>88</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 3147</span>, <span
style='color:#355F7C'>35</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PEP 3155</span>, <span
style='color:#355F7C'>86</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PYTHON_GIL</span>, <span
style='color:#355F7C'>80</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:36.45pt;
margin-bottom:.15in;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>PYTHONDONTWRITEBYTECODE</span>, <span
style='color:#355F7C'>35 </span><span style='font-size:9.0pt;line-height:112%'>Pythonic</span>,
<b><span style='color:#355F7C'>85</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>Q</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.15in;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>qualified name</span>, <b><span
style='color:#355F7C'>86</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>R</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:125.0pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>reference count</span>, <b><span style='color:#355F7C'>86 </span></b><span
style='font-size:9.0pt;line-height:115%'>regular package</span>, <b><span
style='color:#355F7C'>86 </span></b><span style='font-size:9.0pt;line-height:
115%'>REPL</span>, <b><span style='color:#355F7C'>86</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>S</span></p>

<p class=MsoNormal style='margin-top:0in;margin-right:114.25pt;margin-bottom:
.65pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>sequence</span>, <b><span style='color:#355F7C'>86 </span></b><span
style='font-size:9.0pt;line-height:115%'>set comprehension</span>, <b><span
style='color:#355F7C'>87 </span></b><span style='font-size:9.0pt;line-height:
115%'>single dispatch</span>, <b><span style='color:#355F7C'>87 </span></b><span
style='font-size:9.0pt;line-height:115%'>slice</span>, <b><span
style='color:#355F7C'>87 </span></b><span style='font-size:9.0pt;line-height:
115%'>soft deprecated</span>, <b><span style='color:#355F7C'>87 </span></b><span
style='font-size:9.0pt;line-height:115%'>special</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:.45pt;margin-left:20.4pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>method</span>, <span style='color:
#355F7C'>87</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:79.5pt;
margin-bottom:17.8pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>special method</span>, <b><span
style='color:#355F7C'>87 </span></b><span style='font-size:9.0pt;line-height:
112%'>statement</span>, <b><span style='color:#355F7C'>87</span></b></p>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:10.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Index</span></b></p>

</div>

<span style='font-size:10.0pt;line-height:108%;font-family:"Times New Roman",serif;
color:black'><br clear=all style='page-break-before:auto'>
</span>

<div class=WordSection26>

<p class=MsoNormal align=right style='margin-top:0in;margin-right:-.75pt;
margin-bottom:1.55pt;margin-left:.5pt;text-align:right;line-height:110%'><b><span
style='font-family:"Calibri",sans-serif'>Python Frequently Asked Questions,
Release 3.13.2</span></b></p>

<p class=MsoNormal align=left style='margin-top:27.4pt;margin-right:301.85pt;
margin-bottom:10.6pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>static type checker</span>, <b><span
style='color:#355F7C'>87 </span></b><span style='font-size:9.0pt;line-height:
112%'>strong reference</span>, <b><span style='color:#355F7C'>87</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>T</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:328.75pt;
margin-bottom:.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>text encoding</span>, <b><span
style='color:#355F7C'>87 </span></b><span style='font-size:9.0pt;line-height:
112%'>text file</span>, <b><span style='color:#355F7C'>87 </span></b><span
style='font-size:9.0pt;line-height:112%'>triple-quoted string</span>, <b><span
style='color:#355F7C'>87</span></b></p>

<p class=MsoNormal style='margin-top:0in;margin-right:382.55pt;margin-bottom:
10.1pt;margin-left:-.25pt;line-height:115%'><span style='font-size:9.0pt;
line-height:115%'>type</span>, <b><span style='color:#355F7C'>88 </span></b><span
style='font-size:9.0pt;line-height:115%'>type alias</span>, <b><span
style='color:#355F7C'>88 </span></b><span style='font-size:9.0pt;line-height:
115%'>type hint</span>, <b><span style='color:#355F7C'>88</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>U</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:9.65pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>universal newlines</span>, <b><span
style='color:#355F7C'>88</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>V</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:296.45pt;
margin-bottom:9.45pt;margin-left:-.25pt;text-align:left;line-height:112%'><span
style='font-size:9.0pt;line-height:112%'>variable annotation</span>, <b><span
style='color:#355F7C'>88 </span></b><span style='font-size:9.0pt;line-height:
112%'>virtual environment</span>, <b><span style='color:#355F7C'>88 </span></b><span
style='font-size:9.0pt;line-height:112%'>virtual machine</span>, <b><span
style='color:#355F7C'>89</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:0in;margin-left:-.25pt;text-align:left;line-height:107%'><span
style='font-size:14.5pt;line-height:107%;font-family:"Calibri",sans-serif'>Z</span></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:4.75pt;
margin-bottom:460.75pt;margin-left:-.25pt;text-align:left;line-height:112%'>

<table cellpadding=0 cellspacing=0>
 <tr>
  <td width=96 height=0></td>
 </tr>
 <tr>
  <td></td>
  <td><img width=603 height=1
  src="Python%20Frequently%20Asked%20Questions_files/image145.gif"></td>
 </tr>
</table>

<br clear=ALL>
<span style='font-size:9.0pt;line-height:112%'>Zen of Python</span>, <b><span
style='color:#355F7C'>89</span></b></p>

<p class=MsoNormal align=left style='margin-top:0in;margin-right:0in;
margin-bottom:11.25pt;margin-left:-.25pt;text-align:left;line-height:103%'><b><span
style='font-family:"Calibri",sans-serif'>Index</span></b></p>

</div>

</body>

</html>
